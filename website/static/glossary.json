{
"active-validator":{"title":"Active Validator","text":"<p>A staked <a href=\"/intro/glossary#validator\">Validator</a> that makes disputable assertions to advance the state of an Arbitrum chain or to challenge the validity of others&#39; assertions. (Not to be confused with the <a href=\"/intro/glossary#sequencer\">Sequencer</a> ).</p>\n"},
"address-alias":{"title":"Address Alias","text":"<p>An address deterministically generated from an L1 contract address used on L2 to safely identify the source of an L1 to L2 message.</p>\n"},
"arb-token-bridge":{"title":"Arb Token Bridge","text":"<p>A series of contracts on an Arbitrum chain and its underlying chain that facilitate trustless movement of ERC-20 tokens between the two layers.</p>\n"},
"arbified-token-list":{"title":"Arbified Token List","text":"<p>A token list that conforms to <a href=\"https://github.com/Uniswap/token-lists\">Uniswap&#39;s token list specification</a>; Arbified lists are generated by inputting externally maintained list (<a href=\"https://api.coinmarketcap.com/data-api/v3/uniswap/all.json\">i.e., coinmarketcap&#39;s list</a>) and outputting a list that includes all of the instances of token contracts on the Arbitrum chain bridged via the canonical <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a> from tokens on the inputted list. (See code <a href=\"https://github.com/OffchainLabs/arbitrum-token-lists\">here</a>.)</p>\n"},
"arbitrum":{"title":"Arbitrum","text":"<p>A suite of Ethereum layer-2 scaling technologies built with the <a href=\"/intro/glossary#arbitrum-nitro\">Arbitrum Nitro</a> tech stack that includes <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a> (a live implementation of the <a href=\"/intro/glossary#arbitrum-rollup-protocol\">Arbitrum Rollup Protocol</a>) and <a href=\"/intro/glossary#arbitrum-nova\">Arbitrum Nova</a> (a live implementation of the <a href=\"/intro/glossary#arbitrum-anytrust-protocol\">Arbitrum AnyTrust Protocol</a>).</p>\n"},
"arbitrum-anytrust-chain":{"title":"Arbitrum AnyTrust Chain","text":"<p>An <a href=\"/intro/glossary#arbitrum-chain\">Arbitrum chain</a> that implements the <a href=\"/intro/glossary#arbitrum-anytrust-protocol\">Arbitrum AnyTrust Protocol</a>.</p>\n"},
"arbitrum-anytrust-protocol":{"title":"Arbitrum AnyTrust Protocol","text":"<p>An Arbitrum protocol that manages data availability with a permissioned set of parties known as the <a href=\"/intro/glossary#data-availability-committee-dac\">Data Availability Committee (DAC)</a>. This protocol reduces transaction fees by introducing an additional trust assumption for data availability in lieu of Ethereum&#39;s <a href=\"/intro/glossary#trustless\">Trustless</a> data availability mechanism. <a href=\"/intro/glossary#arbitrum-nova\">Arbitrum Nova</a> is an example of an AnyTrust chain; <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a> is an alternative chain that implements the purely trustless (and more L1-gas intensive) <a href=\"/intro/glossary#arbitrum-rollup-protocol\">Arbitrum Rollup Protocol</a>.</p>\n"},
"arbitrum-bridge-ui":{"title":"Arbitrum Bridge UI","text":"<p>Web application built and maintained by <a href=\"/intro/glossary#offchain-labs\">Offchain Labs</a> for user-interactions with the <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a>; visit it <a href=\"https://bridge.arbitrum.io/\">here</a>.</p>\n"},
"arbitrum-chain":{"title":"Arbitrum chain","text":"<p>A blockchain that runs on the Arbitrum protocol. Arbitrum chains are EVM compatible, and use an underlying EVM chain (e.g., Ethereum) for settlement and for succinct fraud-proofs (as needed). Arbitrum chains come in two forms: <a href=\"/intro/glossary#arbitrum-rollup-chain\">Arbitrum Rollup Chain</a>s and <a href=\"/intro/glossary#arbitrum-anytrust-chain\">Arbitrum AnyTrust Chain</a>s.</p>\n"},
"arbitrum-classic":{"title":"Arbitrum Classic","text":"<p><a href=\"https://github.com/OffchainLabs/arbitrum\">Old Arbitrum stack</a>Â that used custom virtual machine (&quot;AVM&quot;); no public Arbitrum chain uses the classic stack as of 8/31/2022 (they instead use <a href=\"/intro/glossary#arbitrum-nitro\">Arbitrum Nitro</a> ).</p>\n"},
"arbitrum-full-node":{"title":"Arbitrum Full Node","text":"<p>A party who keeps track of the state of an Arbitrum chain and receives remote procedure calls (RPCs) from clients. Analogous to a non-staking L1 Ethereum node.</p>\n"},
"arbitrum-nitro":{"title":"Arbitrum Nitro","text":"<p>Current Arbitrum tech stack; runs a fork of <a href=\"/intro/glossary#geth\">Geth</a> and uses WebAssembly as its underlying VM for fraud proofs.</p>\n"},
"arbitrum-nova":{"title":"Arbitrum Nova","text":"<p>The first <a href=\"/intro/glossary#arbitrum-anytrust-chain\">Arbitrum AnyTrust Chain</a> running on Ethereum mainnet. Introduces cheaper transactions; great for gaming and social use-cases. Implements the <a href=\"/intro/glossary#arbitrum-anytrust-protocol\">Arbitrum AnyTrust Protocol</a>, not the <a href=\"/intro/glossary#arbitrum-rollup-protocol\">Arbitrum Rollup Protocol</a> protocol. Governed by the <a href=\"https://docs.arbitrum.foundation/gentle-intro-dao-governance\">Arbitrum DAO</a>.</p>\n"},
"arbitrum-one":{"title":"Arbitrum One","text":"<p>The first <a href=\"/intro/glossary#arbitrum-rollup-chain\">Arbitrum Rollup Chain</a> running on Ethereum mainnet. Great for decentralized finance and other use-cases that demand strong security guarantees. Governed by the <a href=\"https://docs.arbitrum.foundation/gentle-intro-dao-governance\">Arbitrum DAO</a>.</p>\n"},
"arbitrum-orbit":{"title":"Arbitrum Orbit","text":"<p>Arbitrum Orbit refers to the ability for anyone to permissionlessly deploy <a href=\"/intro/glossary#layer-3-l3\">Layer 3 (L3)</a> chains on top of Arbitrum <a href=\"/intro/glossary#layer-2-l2\">Layer 2 (L2)</a> chains.</p>\n"},
"arbitrum-rollup-chain":{"title":"Arbitrum Rollup Chain","text":"<p>An <a href=\"/intro/glossary#arbitrum-chain\">Arbitrum chain</a> that implements the <a href=\"/intro/glossary#arbitrum-rollup-protocol\">Arbitrum Rollup Protocol</a>.</p>\n"},
"arbitrum-rollup-protocol":{"title":"Arbitrum Rollup Protocol","text":"<p>A trustless, permissionless Arbitrum protocol that uses its underlying base layer for data availability and inherits its security. This protocol is implemented by our <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a> chain.</p>\n"},
"arbos":{"title":"ArbOS","text":"<p>Arbitrum&#39;s &quot;operating system&quot; that trustlessly handles system-level operations; includes the ability to emulate the EVM.</p>\n"},
"assertion":{"title":"Assertion","text":"<p>A staked claim made by an Arbitrum <a href=\"/intro/glossary#validator\">Validator</a> representing a claim about an Arbitrum chain&#39;s state. An <a href=\"/intro/glossary#assertion\">Assertion</a> may, e.g., propose a new assertion, or may be a step in a <a href=\"/intro/glossary#challenge\">Challenge</a>.</p>\n"},
"auction-contract":{"title":"Auction Contract","text":"<p>A smart contract that handles the state, accounting of funds for bids, and various operations of the <a href=\"/intro/glossary#timeboost\">Timeboost</a> auction. The contract is deployed on the target chain for which Timeboost is enabled.</p>\n"},
"autonomous-auctioneer":{"title":"Autonomous Auctioneer","text":"<p>Off chain software that receives bids from <a href=\"/intro/glossary#timeboost\">Timeboost</a> participants, processes and validates bids, and then posts the top valid bid (or top two valid bids in the case of a tie) to the <a href=\"/intro/glossary#auction-contract\">Auction Contract</a> to resolve the on-going Timeboost auction. The autonomous auctioneer, for a given chain, is provisioned &amp; deployed by an entity designated by the chain&#39;s owner.</p>\n"},
"batch":{"title":"Batch","text":"<p>A group of Arbitrum transactions posted in a single transaction on the <a href=\"/intro/glossary#underlying-chain\">Underlying Chain</a> into the <a href=\"/intro/glossary#fast-inbox\">Fast Inbox</a> by the <a href=\"/intro/glossary#sequencer\">Sequencer</a>.</p>\n"},
"blockchain":{"title":"Blockchain","text":"<p>A distributed digital ledger that is used to record transactions and store data in a secure, transparent, and tamper-resistant way, notably in cryptocurrency protocols.</p>\n"},
"bls-signature":{"title":"BLS Signature","text":"<p>A cryptographic scheme that allows multiple signatures to be aggregated and compacted into one efficiently verifiable, constant-sized signature. Used in the <a href=\"/intro/glossary#arbitrum-anytrust-protocol\">Arbitrum AnyTrust Protocol</a> for the <a href=\"/intro/glossary#data-availability-committee-dac\">Data Availability Committee (DAC)</a>&#39;s signatures.</p>\n"},
"bold":{"title":"BoLD","text":"<p>Short for &quot;Bounded Liquidity Delay&quot;; latest version of the Arbitrum <a href=\"/intro/glossary#challenge-protocol\">Challenge protocol</a> designed to eliminate <a href=\"https://medium.com/offchainlabs/solutions-to-delay-attacks-on-rollups-434f9d05a07a\">delay attack vectors</a> (see <a href=\"https://medium.com/offchainlabs/bold-permissionless-validation-for-arbitrum-chains-9934eb5328cc\">here</a> for more). Not currently on mainnet.</p>\n"},
"bridge":{"title":"Bridge","text":"<p>A set of smart contracts for sending <a href=\"/intro/glossary#crosschain-message\">Cross-chain message</a>s between blockchains. Every <a href=\"/intro/glossary#arbitrum-chain\">Arbitrum chain</a> includes a bridge to/from its <a href=\"/intro/glossary#parent-chain\">Parent chain</a>.</p>\n"},
"chain-owner":{"title":"Chain Owner","text":"<p>An entity (i.e., a smart contract) with affordance to carry out critical upgrades to an Arbitrum chain&#39;s core protocol; this includes upgrading protocol contracts, setting core system parameters, and adding and removing other chain owners.</p>\n"},
"chain-state":{"title":"Chain state","text":"<p>A particular point in the history of an <a href=\"/intro/glossary#arbitrum-chain\">Arbitrum chain</a>. A chain&#39;s state is determined by applying Arbitrum state-transition function to sequence of transactions (i.e., the chain&#39;s history).</p>\n"},
"challenge":{"title":"Challenge","text":"<p>When two <a href=\"/intro/glossary#staker\">Staker</a>s disagree about the correct verdict on an <a href=\"/intro/glossary#assertion\">Assertion</a>, those stakers can be put in a challenge. The challenge is refereed by the contracts on the underlying chain. Eventually one staker wins the challenge. The protocol guarantees that an honest party will always win a challenge; the loser forfeits their stake.</p>\n"},
"challenge-period":{"title":"Challenge Period","text":"<p>Window of time (one week on Arbitrum One) over which an <a href=\"/intro/glossary#assertion\">Assertion</a> can be challenged, and after which the assertion can be confirmed.</p>\n"},
"challenge-protocol":{"title":"Challenge protocol","text":"<p>The protocol by which assertions are submitted, disputed, and ultimately confirmed. The Challenge Protocol guarantees that only valid <a href=\"/intro/glossary#assertion\">Assertion</a> will be confirmed provided that there is at least one honest <a href=\"/intro/glossary#active-validator\">Active Validator</a>.</p>\n"},
"child-chain":{"title":"Child chain","text":"<p>An Arbitrum Chain that settles to an underlying <a href=\"/intro/glossary#parent-chain\">Parent chain</a> . For example, Arbitrum One and Arbitrum Nova are child chains of Ethereum.</p>\n"},
"client":{"title":"Client","text":"<p>A program running on a user&#39;s machine, often in the user&#39;s browser, that interacts with contracts on an <a href=\"/intro/glossary#arbitrum-chain\">Arbitrum chain</a> and provides a user interface.</p>\n"},
"confirmation":{"title":"Confirmation","text":"<p>The decision by an <a href=\"/intro/glossary#arbitrum-chain\">Arbitrum chain</a> to finalize an assertion as part of the chain&#39;s history. Once an <a href=\"/intro/glossary#assertion\">Assertion</a> is confirmed its <a href=\"/intro/glossary#l2-to-l1-message\">L2 to L1 Message</a>s (e.g., withdrawals) can be executed.</p>\n"},
"crosschain-message":{"title":"Cross-chain message","text":"<p>An action taken on some chain A which asynchronously initiates an additional action on chain B.</p>\n"},
"custom-arbtoken":{"title":"Custom Arb-Token","text":"<p>Any L2 token contract registered to the <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a> that isn&#39;t a standard arb-token (i.e., a token that uses any gateway other than the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a> ).</p>\n"},
"custom-gateway":{"title":"Custom gateway","text":"<p>Any <a href=\"/intro/glossary#token-gateway\">Token Gateway</a> that isn&#39;t the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a>.</p>\n"},
"dapp":{"title":"dApp","text":"<p>Short for &quot;decentralized application.&quot; A dApp typically consists of smart contracts as well as a user-interface for interacting with them.</p>\n"},
"data-availability-certificate":{"title":"Data Availability Certificate","text":"<p>Signed promise from a <a href=\"/intro/glossary#data-availability-committee-dac\">Data Availability Committee (DAC)</a> attesting to the availability of a batch of data for an <a href=\"/intro/glossary#arbitrum-anytrust-chain\">Arbitrum AnyTrust Chain</a>.</p>\n"},
"data-availability-committee-dac":{"title":"Data Availability Committee (DAC)","text":"<p>\n  A permissioned set of parties responsible for enforcing data availability in an{' '}\n  <a href=\"/intro/glossary#arbitrum-anytrust-protocol\">Arbitrum AnyTrust Protocol</a> chain. See{' '}\n  <em>\n    <a href=\"https://medium.com/offchainlabs/introducing-anytrust-chains-cheaper-faster-l2-chains-with-minimal-trust-assumptions-31def59eb8d7\">\n      Introducing AnyTrust Chains: Cheaper, Faster L2 Chains with Minimal Trust Assumptions\n    </a>\n  </em>{' '}\n  to learn more.\n</p>"},
"defensive-validator":{"title":"Defensive Validator","text":"<p>A <a href=\"/intro/glossary#validator\">Validator</a> that watches an Arbitrum chain and takes action (i.e., stakes and challenges) only when and if an invalid <a href=\"/intro/glossary#assertion\">Assertion</a> occurs.</p>\n"},
"delayed-inbox":{"title":"Delayed Inbox","text":"<p>A contract that holds <a href=\"/intro/glossary#parent-chain\">Parent chain</a> initiated messages to be eventually included in the <a href=\"/intro/glossary#fast-inbox\">Fast Inbox</a>. Inclusion of messages doesn&#39;t depend on the <a href=\"/intro/glossary#sequencer\">Sequencer</a>.</p>\n"},
"devtools-dashboard":{"title":"Dev-Tools Dashboard","text":"<p>Web application built and maintained by <a href=\"/intro/glossary#offchain-labs\">Offchain Labs</a> for developers and users to debug Arbitrum transactions; i.e., executing or checking the status of <a href=\"/intro/glossary#crosschain-message\">Cross-chain message</a>s; visit it <a href=\"https://retryable-dashboard.arbitrum.io/\">here</a>.</p>\n"},
"dissection":{"title":"Dissection","text":"<p>A step in the <a href=\"/intro/glossary#challenge-protocol\">Challenge protocol</a> in which two challenging parties interactively narrow down their disagreement until they reach a <a href=\"/intro/glossary#one-step-proof\">One Step Proof</a>.</p>\n"},
"ethereum-wallet":{"title":"Ethereum Wallet","text":"<p>A software application used for transacting with the Ethereum <a href=\"/intro/glossary#blockchain\">Blockchain</a>.</p>\n"},
"evm":{"title":"EVM+","text":"<p>The paradigm introduced by <a href=\"/intro/glossary#stylus\">Stylus</a> in which Arbitrum&#39;s EVM compatibility is preserved while new features and improvements are introduced.</p>\n"},
"express-lane":{"title":"Express Lane","text":"<p>A component of <a href=\"/intro/glossary#timeboost\">Timeboost</a>, the express lane is a special endpoint on the <a href=\"/intro/glossary#sequencer\">Sequencer</a> that immediately sequences incoming, valid transactions signed by the current express lane controller.</p>\n"},
"express-lane-controller":{"title":"Express Lane Controller","text":"<p>An address, defined in the <a href=\"/intro/glossary#auction-contract\">Auction Contract</a>, that is granted the privilege to use the <a href=\"/intro/glossary#express-lane\">Express Lane</a>. These privileges are granted after verifying that the incoming transactions were properly signed by the express lane controller, among other checks.</p>\n"},
"fair-ordering-algorithm":{"title":"Fair Ordering Algorithm","text":"<p>BFT algorithm in which a committee comes to consensus on transaction ordering; current single-party <a href=\"/intro/glossary#sequencer\">Sequencer</a> on Arbitrum may eventually be replaced by a fair-ordering committee.</p>\n"},
"fast-exit--liquidity-exit":{"title":"Fast Exit / Liquidity Exit","text":"<p>A means by which a user can bypass an Arbitrum chain&#39;s <a href=\"/intro/glossary#challenge-period\">Challenge Period</a> when withdrawing fungible assets (or more generally, executing some &quot;fungible&quot; L2 to L1 operation); for trustless fast exits, a liquidity provider facilitates an atomic swap of the asset on L2 directly to L1.</p>\n"},
"fast-inbox":{"title":"Fast Inbox","text":"<p>Contract that holds a sequence of messages sent by clients to an Arbitrum Chain; a message can be put into the fast Inbox directly by the <a href=\"/intro/glossary#sequencer\">Sequencer</a> or indirectly through the <a href=\"/intro/glossary#delayed-inbox\">Delayed Inbox</a>.</p>\n"},
"first-come-first-serve-fcfs":{"title":"First Come First Serve (FCFS)","text":"<p>A type of <a href=\"/intro/glossary#transaction-ordering-policy\">Transaction Ordering Policy</a> used by the sequencer in Arbitrum chains whereby incoming transactions are sequenced into a block in the order that the transactions arrived.</p>\n"},
"forceinclusion":{"title":"Force-Inclusion","text":"<p>Censorship resistant path for including a message into an Arbitrum chain via the <a href=\"/intro/glossary#delayed-inbox\">Delayed Inbox</a> on its <a href=\"/intro/glossary#parent-chain\">Parent chain</a>; bypasses any Sequencer involvement.</p>\n"},
"fraud-proof":{"title":"Fraud proof","text":"<p>The means by which an <a href=\"/intro/glossary#active-validator\">Active Validator</a> proves to its underlying chain that an invalid state transition has taken place.</p>\n"},
"gas-price-floor":{"title":"Gas Price Floor","text":"<p>Protocol-enforced minimum gas price on an Arbitrum chain; currently 0.1 gwei on <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a> and 0.01 gwei on <a href=\"/intro/glossary#arbitrum-nova\">Arbitrum Nova</a>.</p>\n"},
"gateway-router":{"title":"Gateway Router","text":"<p>Contracts in the <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a> responsible for mapping tokens to their appropriate <a href=\"/intro/glossary#token-gateway\">Token Gateway</a>.</p>\n"},
"genericcustom-gateway":{"title":"Generic-Custom Gateway","text":"<p>A particular <a href=\"/intro/glossary#custom-gateway\">Custom gateway</a> via which an L1 token contract can be registered to a token contract deployed to L2. A useful alternative to the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a> for projects that wish to control the address of their L2 token contract, maintain L2 token contract upgradability, and for various other use-cases.</p>\n"},
"geth":{"title":"Geth","text":"<p>An execution-layer client that defines the Ethereum state transition function and handles network-layer logic like transaction memory pooling. <a href=\"/intro/glossary#arbitrum-nitro\">Arbitrum Nitro</a> utilizes a fork of Geth to implement Arbitrum&#39;s state transition function.</p>\n"},
"ink":{"title":"Ink","text":"<p>The equivalent of gas in the <a href=\"/intro/glossary#stylus\">Stylus</a> vm. Ink is introduced for finer granularity than gas offers since Stylus&#39;s operations are considerably cheaper than their EVM analogs.</p>\n"},
"l2-block":{"title":"L2 Block","text":"<p>Data structure that represents a group of L2 transactions (analogous to L1 blocks).</p>\n"},
"l2-to-l1-message":{"title":"L2 to L1 Message","text":"<p>A message initiated from within an Arbitrum chain to be eventually executed on <a href=\"/intro/glossary#layer-1-l1\">Layer 1 (L1)</a> (e.g., token or Ether withdrawals). On Rollup chains like <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a>, the <a href=\"/intro/glossary#challenge-period\">Challenge Period</a> must pass before an L2 to L1 message is executed.</p>\n"},
"layer-1-l1":{"title":"Layer 1 (L1)","text":"<p>The base protocol and underlying blockchain of the Ethereum network. Responsible for maintaining the integrity of the distributed ledger and executing smart contracts. Contains both Ethereum&#39;s execution layer and consensus layer.</p>\n"},
"layer-2-l2":{"title":"Layer 2 (L2)","text":"<p>Trustless scaling solutions built on top of Ethereum&#39;s <a href=\"/intro/glossary#layer-1-l1\">Layer 1 (L1)</a> base protocol, such as state channels, plasma chains, optimistic rollups, and ZK-rollups. Layer 2 solutions aim to increase scalability and reduce the cost of transactions on Ethereum&#39;s Layer 1 without introducing additional trust assumptions.</p>\n"},
"layer-3-l3":{"title":"Layer 3 (L3)","text":"<p>An Arbitrum chain whose core contract reside on an Arbitrum <a href=\"/intro/glossary#layer-2-l2\">Layer 2 (L2)</a> chain.</p>\n"},
"native-fee-token":{"title":"Native Fee Token","text":"<p>An ERC-20 token used as the native currency for gas fees on an <a href=\"/intro/glossary#arbitrum-chain\">Arbitrum chain</a> (i.e., as opposed to using Ether). <a href=\"/intro/glossary#arbitrum-orbit\">Arbitrum Orbit</a> introduced the option for chains to use native fee tokens.</p>\n"},
"offchain-labs":{"title":"Offchain Labs","text":"<p>The initial builders Arbitrum; current contributors to the Arbitrum ecosystem and service providers to the <a href=\"https://docs.arbitrum.foundation/gentle-intro-dao-governance\">Arbitrum DAO</a>. Offchain also runs and maintains the <a href=\"/intro/glossary#sequencer\">Sequencer</a>s for <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a> and <a href=\"/intro/glossary#arbitrum-nova\">Arbitrum Nova</a>.</p>\n"},
"one-step-proof":{"title":"One Step Proof","text":"<p>Final step in a challenge; a single operation of the Arbitrum VM (<a href=\"/intro/glossary#wasm\">WASM</a> ) is executed on the underlying chain, and the validity of its state transition is verified.</p>\n"},
"outbox":{"title":"Outbox","text":"<p>An L1 contract responsible for tracking <a href=\"/intro/glossary#l2-to-l1-message\">L2 to L1 Message</a>s, including withdrawals, which can be executed once they are confirmed. The outbox stores a Merkle Root of all outgoing messages.</p>\n"},
"parent-chain":{"title":"Parent chain","text":"<p>EVM compatible chain that acts as the settlement layer for one or more Arbitrum Chains (aka <a href=\"/intro/glossary#child-chain\">Child chain</a> ). E.g., Ethereum is the parent chain of both Arbitrum One and Arbitrum Nova. Parent chain is synonymous with &quot;underlying chain.&quot;</p>\n"},
"portal":{"title":"Portal","text":"<p>A web application maintained by <a href=\"/intro/glossary#offchain-labs\">Offchain Labs</a> showcasing the Arbitrum ecosystem; visit it <a href=\"https://portal.arbitrum.io/\">here</a>.</p>\n"},
"rblock":{"title":"RBlock","text":"<p>Refer to <a href=\"/intro/glossary#assertion\">Assertion</a></p>\n"},
"reorg":{"title":"Reorg","text":"<p>A situation in which transactions on a chain that were at some point considered accepted then get rejected. In the context of an Arbitrum chain, once transactions are posted in the chain&#39;s <a href=\"/intro/glossary#fast-inbox\">Fast Inbox</a>, the only way the chain can experience a reorg is if its <a href=\"/intro/glossary#underlying-chain\">Underlying Chain</a> itself reorgs. Of note, <a href=\"/intro/glossary#fraud-proof\">Fraud proof</a>s do not cause reorgs.</p>\n"},
"retryable-autoredeem":{"title":"Retryable Autoredeem","text":"<p>The &quot;automatic&quot; (i.e., requiring no additional user action) execution of a <a href=\"/intro/glossary#retryable-ticket\">Retryable Ticket</a> on an Arbitrum chain.</p>\n"},
"retryable-redeem":{"title":"Retryable Redeem","text":"<p>The execution of a <a href=\"/intro/glossary#retryable-ticket\">Retryable Ticket</a> on L2; can be automatic (see <a href=\"/intro/glossary#retryable-autoredeem\">Retryable Autoredeem</a>) or manual via a user-initiated L2 transaction.</p>\n"},
"retryable-ticket":{"title":"Retryable Ticket","text":"<p>An L1 to L2 cross chain message initiated by an L1 transaction sent to an Arbitrum chain for execution (e.g., a token deposit).</p>\n"},
"reverse-token-gateway":{"title":"Reverse Token Gateway","text":"<p>A <a href=\"/intro/glossary#token-gateway\">Token Gateway</a> in which the <a href=\"/intro/glossary#child-chain\">Child chain</a> gateway contract escrows and releases tokens, which the <a href=\"/intro/glossary#parent-chain\">Parent chain</a> Gateway contract mints and burns tokens. This in the inverse to how &quot;typical&quot; gateways work.</p>\n"},
"sequencer":{"title":"Sequencer","text":"<p>An entity (currently a single-party on Arbitrum One) given rights to reorder transactions in the <a href=\"/intro/glossary#fast-inbox\">Fast Inbox</a> over a fixed window of time, who can thus give clients sub-blocktime <a href=\"/intro/glossary#soft-confirmation\">Soft Confirmation</a>s. (Not to be confused with a <a href=\"/intro/glossary#validator\">Validator</a>).</p>\n"},
"sequencer-feed":{"title":"Sequencer Feed","text":"<p>Off chain data feed published by the <a href=\"/intro/glossary#sequencer\">Sequencer</a> which clients can subscribe to for <a href=\"/intro/glossary#soft-confirmation\">Soft Confirmation</a>s of transactions before they are posted in <a href=\"/intro/glossary#batch\">Batch</a>es.</p>\n"},
"shared-sequencing":{"title":"Shared Sequencing","text":"<p>A protocol design space in which multiple rollups use the same entity as their <a href=\"/intro/glossary#sequencer\">Sequencer</a>; potential benefits include enhanced interoperability and credible neutrality.</p>\n"},
"smart-contract":{"title":"Smart Contract","text":"<p>A computer program whose operations are defined and executed within a blockchain consensus protocol.</p>\n"},
"soft-confirmation":{"title":"Soft Confirmation","text":"<p>A semi-trusted promise from the <a href=\"/intro/glossary#sequencer\">Sequencer</a> to post a user&#39;s transaction in the near future; soft-confirmations happen prior to posting on the <a href=\"/intro/glossary#parent-chain\">Parent chain</a>, and thus can be given near-instantaneously (i.e., faster than the parent chain&#39;s block times)</p>\n"},
"speed-limit":{"title":"Speed Limit","text":"<p>Target computation limit for an Arbitrum chain. <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a> and <a href=\"/intro/glossary#arbitrum-nova\">Arbitrum Nova</a> currently target 7,000,000 gas / second. When computation exceeds this limit, fees rise, alaÂ <a href=\"https://notes.ethereum.org/@vbuterin/eip-1559-faq\">EIP-1559</a>.</p>\n"},
"staker":{"title":"Staker","text":"<p>A <a href=\"/intro/glossary#validator\">Validator</a> who deposits a stake (in Ether on <a href=\"/intro/glossary#arbitrum-one\">Arbitrum One</a> and <a href=\"/intro/glossary#arbitrum-nova\">Arbitrum Nova</a> ) to vouch for a particular <a href=\"/intro/glossary#assertion\">Assertion</a> in an Arbitrum Chain. A validator who stakes on a false assertion can expect to lose their stake. An honest staker can recover their stake once the assertion they are staked on has been confirmed.</p>\n"},
"standard-arbtoken":{"title":"Standard Arb-Token","text":"<p>An token contract on an Arbitrum chain deployed via the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a>; offers basic ERC20 functionality in addition to deposit / withdrawal affordances.</p>\n"},
"standarderc20-gateway":{"title":"StandardERC20 gateway","text":"<p><a href=\"/intro/glossary#token-gateway\">Token Gateway</a> via which any underlying chain&#39;s ERC20 token can permissionlessly bridge; the StandardERC20 gateway contracts deploy a <a href=\"/intro/glossary#standard-arbtoken\">Standard Arb-Token</a> on the <a href=\"/intro/glossary#child-chain\">Child chain</a> for each bridged token.</p>\n"},
"state-transition-function":{"title":"State Transition Function","text":"<p>The STF (State Transition Function) defines how new blocks are produced from input messages (i.e. transactions) in an Arbitrum chain.</p>\n"},
"stylus":{"title":"Stylus","text":"<p>Upgrade to the <a href=\"/intro/glossary#arbitrum-nitro\">Arbitrum Nitro</a> virtual machine that allows smart contract support for languages like Rust and C++ by taking advantage of Nitro&#39;s use of WASM. Currently on testnet (<a href=\"https://docs.arbitrum.io/stylus/stylus-gentle-introduction\">read more</a>).</p>\n"},
"timeboost":{"title":"Timeboost","text":"<p>A transaction ordering policy in which entities can bid for the right to access an express lane on the <a href=\"/intro/glossary#sequencer\">Sequencer</a> for faster transaction inclusion. See the <a href=\"https://github.com/OffchainLabs/timeboost-design/tree/main\">research specification</a> to learn more.</p>\n"},
"token-gateway":{"title":"Token Gateway","text":"<p>A pair of contracts in the token bridge â one on the <a href=\"/intro/glossary#parent-chain\">Parent chain</a> , one on the <a href=\"/intro/glossary#child-chain\">Child chain</a> â that provide a particular mechanism for handling the transfer of tokens between layers. Token gateways currently active in the bridge include the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a> , the <a href=\"/intro/glossary#genericcustom-gateway\">Generic-Custom Gateway</a> , and the <a href=\"/intro/glossary#weth-gateway\">WETH Gateway</a>.</p>\n"},
"transaction":{"title":"Transaction","text":"<p>A user-initiated interaction with a Blockchain. Transactions are typically signed by users via wallets and are paid for via transaction fees.</p>\n"},
"transaction-ordering-policy":{"title":"Transaction Ordering Policy","text":"<p>The rules and logic employed by a chain to order incoming transactions into a block.</p>\n"},
"trustless":{"title":"Trustless","text":"<p>\nIn the context of Ethereum, trustless refers to the ability of a system to operate without reliance on a central authority or intermediary. Instead, users place their trust in math and protocols.\n<br />\n\n<br />\nThis is achieved through the use of cryptographic techniques and decentralized consensus mechanisms that let users verify the integrity of network transactions using open-source software. Trustless systems are considered to be more secure and resistant to fraud or tampering because they don't rely on a single point of failure that can be exploited by attackers.\n</p>\n\n<p>\n\n</p>"},
"underlying-chain":{"title":"Underlying Chain","text":"<p>Synonymous with <a href=\"/intro/glossary#parent-chain\">Parent chain</a>.</p>\n"},
"validator":{"title":"Validator","text":"<p>An <a href=\"/intro/glossary#arbitrum-full-node\">Arbitrum Full Node</a> that tracks the status of the chains&#39; <a href=\"/intro/glossary#assertion\">Assertion</a>s. A validator may be a <a href=\"/intro/glossary#watchtower-validator\">Watchtower Validator</a>, a <a href=\"/intro/glossary#defensive-validator\">Defensive Validator</a>, or an <a href=\"/intro/glossary#active-validator\">Active Validator</a>.</p>\n"},
"wasm":{"title":"WASM","text":"<p>Widely supported binary code format for executable programs. Used by <a href=\"/intro/glossary#arbitrum-nitro\">Arbitrum Nitro</a> for <a href=\"/intro/glossary#fraud-proof\">Fraud proof</a>s , and more broadly used by <a href=\"/intro/glossary#stylus\">Stylus</a> to support performant smart contracts in a wide variety of languages.</p>\n"},
"wasmer":{"title":"WASMer","text":"<p>A popular WebAssembly runtime for executing <a href=\"/intro/glossary#wasm\">WASM</a> binaries. <a href=\"https://github.com/OffchainLabs/wasmer\">A fork of WASMer</a> is used for executing <a href=\"/intro/glossary#stylus\">Stylus</a> programs. WASMer executes considerably faster than Geth executes EVM code, contributing to Stylus&#39;s lower fees.</p>\n"},
"watchtower-validator":{"title":"Watchtower Validator","text":"<p>A <a href=\"/intro/glossary#validator\">Validator</a> that never stakes / never takes on chain action, who raises the alarm (by whatever off-chain means it chooses) if it witnesses an invalid assertion.</p>\n"},
"weth-gateway":{"title":"WETH Gateway","text":"<p><a href=\"/intro/glossary#token-gateway\">Token Gateway</a> for handing the bridging of wrapped Ether (WETH). WETH is unwrapped on L1 and rewrapped on L1 upon depositing (and vice-versa upon withdrawing), ensuring WETH on L2 always remains collateralized.</p>\n"}
}
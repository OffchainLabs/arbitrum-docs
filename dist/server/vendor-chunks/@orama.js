"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@orama";
exports.ids = ["vendor-chunks/@orama"];
exports.modules = {

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components.js":
/*!**********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   documentsStore: () => (/* reexport module object */ _components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   formatElapsedTime: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.formatElapsedTime),\n/* harmony export */   getDocumentIndexId: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIndexId),\n/* harmony export */   getDocumentProperties: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentProperties),\n/* harmony export */   getInnerType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getInnerType),\n/* harmony export */   getVectorSize: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getVectorSize),\n/* harmony export */   index: () => (/* reexport module object */ _components_index_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   internalDocumentIDStore: () => (/* reexport module object */ _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   isArrayType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.isArrayType),\n/* harmony export */   isGeoPointType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.isGeoPointType),\n/* harmony export */   isVectorType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.isVectorType),\n/* harmony export */   sorter: () => (/* reexport module object */ _components_sorter_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   tokenizer: () => (/* reexport module object */ _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   validateSchema: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.validateSchema)\n/* harmony export */ });\n/* harmony import */ var _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/defaults.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/defaults.js\");\n/* harmony import */ var _components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/documents-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/documents-store.js\");\n/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/index.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/index.js\");\n/* harmony import */ var _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/tokenizer/index.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/index.js\");\n/* harmony import */ var _components_sorter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/sorter.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/sorter.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n\n\n\n\n\n\n//# sourceMappingURL=components.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUM7QUFDeUI7QUFDbkI7QUFDYztBQUNaO0FBQ3FDO0FBQ3RGIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vY29tcG9uZW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2NvbXBvbmVudHMvZGVmYXVsdHMuanMnO1xuZXhwb3J0ICogYXMgZG9jdW1lbnRzU3RvcmUgZnJvbSAnLi9jb21wb25lbnRzL2RvY3VtZW50cy1zdG9yZS5qcyc7XG5leHBvcnQgKiBhcyBpbmRleCBmcm9tICcuL2NvbXBvbmVudHMvaW5kZXguanMnO1xuZXhwb3J0ICogYXMgdG9rZW5pemVyIGZyb20gJy4vY29tcG9uZW50cy90b2tlbml6ZXIvaW5kZXguanMnO1xuZXhwb3J0ICogYXMgc29ydGVyIGZyb20gJy4vY29tcG9uZW50cy9zb3J0ZXIuanMnO1xuZXhwb3J0ICogYXMgaW50ZXJuYWxEb2N1bWVudElEU3RvcmUgZnJvbSAnLi9jb21wb25lbnRzL2ludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbXBvbmVudHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/algorithms.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/algorithms.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BM25: () => (/* binding */ BM25),\n/* harmony export */   prioritizeTokenScores: () => (/* binding */ prioritizeTokenScores)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n\nfunction prioritizeTokenScores(arrays, boost, threshold = 0, keywordsCount) {\n    if (boost === 0) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_BOOST_VALUE');\n    }\n    const tokenScoresMap = new Map();\n    const mapsLength = arrays.length;\n    for (let i = 0; i < mapsLength; i++) {\n        const arr = arrays[i];\n        const entriesLength = arr.length;\n        for (let j = 0; j < entriesLength; j++) {\n            const [token, score] = arr[j];\n            const boostScore = score * boost;\n            const oldScore = tokenScoresMap.get(token)?.[0];\n            if (oldScore !== undefined) {\n                tokenScoresMap.set(token, [oldScore * 1.5 + boostScore, (tokenScoresMap?.get(token)?.[1] || 0) + 1]);\n            }\n            else {\n                tokenScoresMap.set(token, [boostScore, 1]);\n            }\n        }\n    }\n    const tokenScores = [];\n    for (const tokenScoreEntry of tokenScoresMap.entries()) {\n        tokenScores.push([tokenScoreEntry[0], tokenScoreEntry[1][0]]);\n    }\n    const results = tokenScores.sort((a, b) => b[1] - a[1]);\n    // If threshold is 1, it means we will return all the results with at least one search term,\n    // prioritizing the ones that contains more search terms (fuzzy match)\n    if (threshold === 1) {\n        return results;\n    }\n    // For threshold = 0 when keywordsCount is 1 (single term search),\n    // we return all matches since they automatically contain 100% of keywords\n    if (threshold === 0 && keywordsCount === 1) {\n        return results;\n    }\n    // Prepare keywords count tracking for threshold handling\n    const allResults = results.length;\n    const tokenScoreWithKeywordsCount = [];\n    for (const tokenScoreEntry of tokenScoresMap.entries()) {\n        tokenScoreWithKeywordsCount.push([tokenScoreEntry[0], tokenScoreEntry[1][0], tokenScoreEntry[1][1]]);\n    }\n    // Find the index of the last result with all keywords.\n    // Order the documents by the number of keywords they contain, and then by the score.\n    const keywordsPerToken = tokenScoreWithKeywordsCount.sort((a, b) => {\n        // Compare by the third element, higher numbers first\n        if (a[2] > b[2])\n            return -1;\n        if (a[2] < b[2])\n            return 1;\n        // If the third elements are equal, compare by the second element, higher numbers first\n        if (a[1] > b[1])\n            return -1;\n        if (a[1] < b[1])\n            return 1;\n        // If both the second and third elements are equal, consider the elements equal\n        return 0;\n    });\n    let lastTokenWithAllKeywords = undefined;\n    for (let i = 0; i < allResults; i++) {\n        if (keywordsPerToken[i][2] === keywordsCount) {\n            lastTokenWithAllKeywords = i;\n        }\n        else {\n            break;\n        }\n    }\n    // If no results had all the keywords, either bail out earlier or normalize\n    if (typeof lastTokenWithAllKeywords === 'undefined') {\n        if (threshold === 0) {\n            return [];\n        }\n        lastTokenWithAllKeywords = 0;\n    }\n    const keywordsPerTokenLength = keywordsPerToken.length;\n    const resultsWithIdAndScore = new Array(keywordsPerTokenLength);\n    for (let i = 0; i < keywordsPerTokenLength; i++) {\n        resultsWithIdAndScore[i] = [keywordsPerToken[i][0], keywordsPerToken[i][1]];\n    }\n    // If threshold is 0, it means we will only return all the results that contains ALL the search terms (exact match)\n    if (threshold === 0) {\n        return resultsWithIdAndScore.slice(0, lastTokenWithAllKeywords + 1);\n    }\n    // If the threshold is between 0 and 1, we will return all the results that contains at least the threshold of search terms\n    // For example, if threshold is 0.5, we will return all the results that contains at least 50% of the search terms\n    // (fuzzy match with a minimum threshold)\n    const thresholdLength = lastTokenWithAllKeywords + Math.ceil((threshold * 100 * (allResults - lastTokenWithAllKeywords)) / 100);\n    return resultsWithIdAndScore.slice(0, Math.min(allResults, thresholdLength));\n}\nfunction BM25(tf, matchingCount, docsCount, fieldLength, averageFieldLength, { k, b, d }) {\n    const idf = Math.log(1 + (docsCount - matchingCount + 0.5) / (matchingCount + 0.5));\n    return (idf * (d + tf * (k + 1))) / (tf + k * (1 - b + (b * fieldLength) / averageFieldLength));\n}\n//# sourceMappingURL=algorithms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvYWxnb3JpdGhtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDcEM7QUFDUDtBQUNBLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0VBQStFLFNBQVM7QUFDL0Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2VzbS9jb21wb25lbnRzL2FsZ29yaXRobXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHByaW9yaXRpemVUb2tlblNjb3JlcyhhcnJheXMsIGJvb3N0LCB0aHJlc2hvbGQgPSAwLCBrZXl3b3Jkc0NvdW50KSB7XG4gICAgaWYgKGJvb3N0ID09PSAwKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdJTlZBTElEX0JPT1NUX1ZBTFVFJyk7XG4gICAgfVxuICAgIGNvbnN0IHRva2VuU2NvcmVzTWFwID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IG1hcHNMZW5ndGggPSBhcnJheXMubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWFwc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGFyciA9IGFycmF5c1tpXTtcbiAgICAgICAgY29uc3QgZW50cmllc0xlbmd0aCA9IGFyci5sZW5ndGg7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgZW50cmllc0xlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICBjb25zdCBbdG9rZW4sIHNjb3JlXSA9IGFycltqXTtcbiAgICAgICAgICAgIGNvbnN0IGJvb3N0U2NvcmUgPSBzY29yZSAqIGJvb3N0O1xuICAgICAgICAgICAgY29uc3Qgb2xkU2NvcmUgPSB0b2tlblNjb3Jlc01hcC5nZXQodG9rZW4pPy5bMF07XG4gICAgICAgICAgICBpZiAob2xkU2NvcmUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHRva2VuU2NvcmVzTWFwLnNldCh0b2tlbiwgW29sZFNjb3JlICogMS41ICsgYm9vc3RTY29yZSwgKHRva2VuU2NvcmVzTWFwPy5nZXQodG9rZW4pPy5bMV0gfHwgMCkgKyAxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0b2tlblNjb3Jlc01hcC5zZXQodG9rZW4sIFtib29zdFNjb3JlLCAxXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgdG9rZW5TY29yZXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHRva2VuU2NvcmVFbnRyeSBvZiB0b2tlblNjb3Jlc01hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgdG9rZW5TY29yZXMucHVzaChbdG9rZW5TY29yZUVudHJ5WzBdLCB0b2tlblNjb3JlRW50cnlbMV1bMF1dKTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0cyA9IHRva2VuU2NvcmVzLnNvcnQoKGEsIGIpID0+IGJbMV0gLSBhWzFdKTtcbiAgICAvLyBJZiB0aHJlc2hvbGQgaXMgMSwgaXQgbWVhbnMgd2Ugd2lsbCByZXR1cm4gYWxsIHRoZSByZXN1bHRzIHdpdGggYXQgbGVhc3Qgb25lIHNlYXJjaCB0ZXJtLFxuICAgIC8vIHByaW9yaXRpemluZyB0aGUgb25lcyB0aGF0IGNvbnRhaW5zIG1vcmUgc2VhcmNoIHRlcm1zIChmdXp6eSBtYXRjaClcbiAgICBpZiAodGhyZXNob2xkID09PSAxKSB7XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cbiAgICAvLyBGb3IgdGhyZXNob2xkID0gMCB3aGVuIGtleXdvcmRzQ291bnQgaXMgMSAoc2luZ2xlIHRlcm0gc2VhcmNoKSxcbiAgICAvLyB3ZSByZXR1cm4gYWxsIG1hdGNoZXMgc2luY2UgdGhleSBhdXRvbWF0aWNhbGx5IGNvbnRhaW4gMTAwJSBvZiBrZXl3b3Jkc1xuICAgIGlmICh0aHJlc2hvbGQgPT09IDAgJiYga2V5d29yZHNDb3VudCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9XG4gICAgLy8gUHJlcGFyZSBrZXl3b3JkcyBjb3VudCB0cmFja2luZyBmb3IgdGhyZXNob2xkIGhhbmRsaW5nXG4gICAgY29uc3QgYWxsUmVzdWx0cyA9IHJlc3VsdHMubGVuZ3RoO1xuICAgIGNvbnN0IHRva2VuU2NvcmVXaXRoS2V5d29yZHNDb3VudCA9IFtdO1xuICAgIGZvciAoY29uc3QgdG9rZW5TY29yZUVudHJ5IG9mIHRva2VuU2NvcmVzTWFwLmVudHJpZXMoKSkge1xuICAgICAgICB0b2tlblNjb3JlV2l0aEtleXdvcmRzQ291bnQucHVzaChbdG9rZW5TY29yZUVudHJ5WzBdLCB0b2tlblNjb3JlRW50cnlbMV1bMF0sIHRva2VuU2NvcmVFbnRyeVsxXVsxXV0pO1xuICAgIH1cbiAgICAvLyBGaW5kIHRoZSBpbmRleCBvZiB0aGUgbGFzdCByZXN1bHQgd2l0aCBhbGwga2V5d29yZHMuXG4gICAgLy8gT3JkZXIgdGhlIGRvY3VtZW50cyBieSB0aGUgbnVtYmVyIG9mIGtleXdvcmRzIHRoZXkgY29udGFpbiwgYW5kIHRoZW4gYnkgdGhlIHNjb3JlLlxuICAgIGNvbnN0IGtleXdvcmRzUGVyVG9rZW4gPSB0b2tlblNjb3JlV2l0aEtleXdvcmRzQ291bnQuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAvLyBDb21wYXJlIGJ5IHRoZSB0aGlyZCBlbGVtZW50LCBoaWdoZXIgbnVtYmVycyBmaXJzdFxuICAgICAgICBpZiAoYVsyXSA+IGJbMl0pXG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIGlmIChhWzJdIDwgYlsyXSlcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgICAgICAvLyBJZiB0aGUgdGhpcmQgZWxlbWVudHMgYXJlIGVxdWFsLCBjb21wYXJlIGJ5IHRoZSBzZWNvbmQgZWxlbWVudCwgaGlnaGVyIG51bWJlcnMgZmlyc3RcbiAgICAgICAgaWYgKGFbMV0gPiBiWzFdKVxuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICBpZiAoYVsxXSA8IGJbMV0pXG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgLy8gSWYgYm90aCB0aGUgc2Vjb25kIGFuZCB0aGlyZCBlbGVtZW50cyBhcmUgZXF1YWwsIGNvbnNpZGVyIHRoZSBlbGVtZW50cyBlcXVhbFxuICAgICAgICByZXR1cm4gMDtcbiAgICB9KTtcbiAgICBsZXQgbGFzdFRva2VuV2l0aEFsbEtleXdvcmRzID0gdW5kZWZpbmVkO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsUmVzdWx0czsgaSsrKSB7XG4gICAgICAgIGlmIChrZXl3b3Jkc1BlclRva2VuW2ldWzJdID09PSBrZXl3b3Jkc0NvdW50KSB7XG4gICAgICAgICAgICBsYXN0VG9rZW5XaXRoQWxsS2V5d29yZHMgPSBpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgbm8gcmVzdWx0cyBoYWQgYWxsIHRoZSBrZXl3b3JkcywgZWl0aGVyIGJhaWwgb3V0IGVhcmxpZXIgb3Igbm9ybWFsaXplXG4gICAgaWYgKHR5cGVvZiBsYXN0VG9rZW5XaXRoQWxsS2V5d29yZHMgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICh0aHJlc2hvbGQgPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICBsYXN0VG9rZW5XaXRoQWxsS2V5d29yZHMgPSAwO1xuICAgIH1cbiAgICBjb25zdCBrZXl3b3Jkc1BlclRva2VuTGVuZ3RoID0ga2V5d29yZHNQZXJUb2tlbi5sZW5ndGg7XG4gICAgY29uc3QgcmVzdWx0c1dpdGhJZEFuZFNjb3JlID0gbmV3IEFycmF5KGtleXdvcmRzUGVyVG9rZW5MZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwga2V5d29yZHNQZXJUb2tlbkxlbmd0aDsgaSsrKSB7XG4gICAgICAgIHJlc3VsdHNXaXRoSWRBbmRTY29yZVtpXSA9IFtrZXl3b3Jkc1BlclRva2VuW2ldWzBdLCBrZXl3b3Jkc1BlclRva2VuW2ldWzFdXTtcbiAgICB9XG4gICAgLy8gSWYgdGhyZXNob2xkIGlzIDAsIGl0IG1lYW5zIHdlIHdpbGwgb25seSByZXR1cm4gYWxsIHRoZSByZXN1bHRzIHRoYXQgY29udGFpbnMgQUxMIHRoZSBzZWFyY2ggdGVybXMgKGV4YWN0IG1hdGNoKVxuICAgIGlmICh0aHJlc2hvbGQgPT09IDApIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdHNXaXRoSWRBbmRTY29yZS5zbGljZSgwLCBsYXN0VG9rZW5XaXRoQWxsS2V5d29yZHMgKyAxKTtcbiAgICB9XG4gICAgLy8gSWYgdGhlIHRocmVzaG9sZCBpcyBiZXR3ZWVuIDAgYW5kIDEsIHdlIHdpbGwgcmV0dXJuIGFsbCB0aGUgcmVzdWx0cyB0aGF0IGNvbnRhaW5zIGF0IGxlYXN0IHRoZSB0aHJlc2hvbGQgb2Ygc2VhcmNoIHRlcm1zXG4gICAgLy8gRm9yIGV4YW1wbGUsIGlmIHRocmVzaG9sZCBpcyAwLjUsIHdlIHdpbGwgcmV0dXJuIGFsbCB0aGUgcmVzdWx0cyB0aGF0IGNvbnRhaW5zIGF0IGxlYXN0IDUwJSBvZiB0aGUgc2VhcmNoIHRlcm1zXG4gICAgLy8gKGZ1enp5IG1hdGNoIHdpdGggYSBtaW5pbXVtIHRocmVzaG9sZClcbiAgICBjb25zdCB0aHJlc2hvbGRMZW5ndGggPSBsYXN0VG9rZW5XaXRoQWxsS2V5d29yZHMgKyBNYXRoLmNlaWwoKHRocmVzaG9sZCAqIDEwMCAqIChhbGxSZXN1bHRzIC0gbGFzdFRva2VuV2l0aEFsbEtleXdvcmRzKSkgLyAxMDApO1xuICAgIHJldHVybiByZXN1bHRzV2l0aElkQW5kU2NvcmUuc2xpY2UoMCwgTWF0aC5taW4oYWxsUmVzdWx0cywgdGhyZXNob2xkTGVuZ3RoKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gQk0yNSh0ZiwgbWF0Y2hpbmdDb3VudCwgZG9jc0NvdW50LCBmaWVsZExlbmd0aCwgYXZlcmFnZUZpZWxkTGVuZ3RoLCB7IGssIGIsIGQgfSkge1xuICAgIGNvbnN0IGlkZiA9IE1hdGgubG9nKDEgKyAoZG9jc0NvdW50IC0gbWF0Y2hpbmdDb3VudCArIDAuNSkgLyAobWF0Y2hpbmdDb3VudCArIDAuNSkpO1xuICAgIHJldHVybiAoaWRmICogKGQgKyB0ZiAqIChrICsgMSkpKSAvICh0ZiArIGsgKiAoMSAtIGIgKyAoYiAqIGZpZWxkTGVuZ3RoKSAvIGF2ZXJhZ2VGaWVsZExlbmd0aCkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWxnb3JpdGhtcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/algorithms.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/defaults.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/defaults.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatElapsedTime: () => (/* binding */ formatElapsedTime),\n/* harmony export */   getDocumentIndexId: () => (/* binding */ getDocumentIndexId),\n/* harmony export */   getDocumentProperties: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentProperties),\n/* harmony export */   getInnerType: () => (/* binding */ getInnerType),\n/* harmony export */   getVectorSize: () => (/* binding */ getVectorSize),\n/* harmony export */   isArrayType: () => (/* binding */ isArrayType),\n/* harmony export */   isGeoPointType: () => (/* binding */ isGeoPointType),\n/* harmony export */   isVectorType: () => (/* binding */ isVectorType),\n/* harmony export */   validateSchema: () => (/* binding */ validateSchema)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\n\n\nfunction formatElapsedTime(n) {\n    return {\n        raw: Number(n),\n        formatted: (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.formatNanoseconds)(n)\n    };\n}\nfunction getDocumentIndexId(doc) {\n    if (doc.id) {\n        if (typeof doc.id !== 'string') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof doc.id);\n        }\n        return doc.id;\n    }\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.uniqueId)();\n}\nfunction validateSchema(doc, schema) {\n    for (const [prop, type] of Object.entries(schema)) {\n        const value = doc[prop];\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        if (type === 'geopoint' &&\n            typeof value === 'object' &&\n            typeof value.lon === 'number' &&\n            typeof value.lat === 'number') {\n            continue;\n        }\n        if (type === 'enum' && (typeof value === 'string' || typeof value === 'number')) {\n            continue;\n        }\n        if (type === 'enum[]' && Array.isArray(value)) {\n            const valueLength = value.length;\n            for (let i = 0; i < valueLength; i++) {\n                if (typeof value[i] !== 'string' && typeof value[i] !== 'number') {\n                    return prop + '.' + i;\n                }\n            }\n            continue;\n        }\n        if (isVectorType(type)) {\n            const vectorSize = getVectorSize(type);\n            if (!Array.isArray(value) || value.length !== vectorSize) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_INPUT_VECTOR', prop, vectorSize, value.length);\n            }\n            continue;\n        }\n        if (isArrayType(type)) {\n            if (!Array.isArray(value)) {\n                return prop;\n            }\n            const expectedType = getInnerType(type);\n            const valueLength = value.length;\n            for (let i = 0; i < valueLength; i++) {\n                if (typeof value[i] !== expectedType) {\n                    return prop + '.' + i;\n                }\n            }\n            continue;\n        }\n        if (typeof type === 'object') {\n            if (!value || typeof value !== 'object') {\n                return prop;\n            }\n            // using as ResultDocument is not exactly right but trying to be type-safe here is not useful\n            const subProp = validateSchema(value, type);\n            if (subProp) {\n                return prop + '.' + subProp;\n            }\n            continue;\n        }\n        if (typeof value !== type) {\n            return prop;\n        }\n    }\n    return undefined;\n}\nconst IS_ARRAY_TYPE = {\n    string: false,\n    number: false,\n    boolean: false,\n    enum: false,\n    geopoint: false,\n    'string[]': true,\n    'number[]': true,\n    'boolean[]': true,\n    'enum[]': true\n};\nconst INNER_TYPE = {\n    'string[]': 'string',\n    'number[]': 'number',\n    'boolean[]': 'boolean',\n    'enum[]': 'enum'\n};\nfunction isGeoPointType(type) {\n    return type === 'geopoint';\n}\nfunction isVectorType(type) {\n    return typeof type === 'string' && /^vector\\[\\d+\\]$/.test(type);\n}\nfunction isArrayType(type) {\n    return typeof type === 'string' && IS_ARRAY_TYPE[type];\n}\nfunction getInnerType(type) {\n    return INNER_TYPE[type];\n}\nfunction getVectorSize(type) {\n    const size = Number(type.slice(7, -1));\n    switch (true) {\n        case isNaN(size):\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_VECTOR_VALUE', type);\n        case size <= 0:\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_VECTOR_SIZE', type);\n        default:\n            return size;\n    }\n}\n//# sourceMappingURL=defaults.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvZGVmYXVsdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDZTtBQUNOO0FBQzdDO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiw0REFBaUI7QUFDcEM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1EQUFRO0FBQ25CO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQkFBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHVEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQkFBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vY29tcG9uZW50cy9kZWZhdWx0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFcnJvciB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBmb3JtYXROYW5vc2Vjb25kcywgdW5pcXVlSWQgfSBmcm9tICcuLi91dGlscy5qcyc7XG5leHBvcnQgeyBnZXREb2N1bWVudFByb3BlcnRpZXMgfSBmcm9tICcuLi91dGlscy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RWxhcHNlZFRpbWUobikge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJhdzogTnVtYmVyKG4pLFxuICAgICAgICBmb3JtYXR0ZWQ6IGZvcm1hdE5hbm9zZWNvbmRzKG4pXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREb2N1bWVudEluZGV4SWQoZG9jKSB7XG4gICAgaWYgKGRvYy5pZCkge1xuICAgICAgICBpZiAodHlwZW9mIGRvYy5pZCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdET0NVTUVOVF9JRF9NVVNUX0JFX1NUUklORycsIHR5cGVvZiBkb2MuaWQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkb2MuaWQ7XG4gICAgfVxuICAgIHJldHVybiB1bmlxdWVJZCgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlU2NoZW1hKGRvYywgc2NoZW1hKSB7XG4gICAgZm9yIChjb25zdCBbcHJvcCwgdHlwZV0gb2YgT2JqZWN0LmVudHJpZXMoc2NoZW1hKSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGRvY1twcm9wXTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnZ2VvcG9pbnQnICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUubG9uID09PSAnbnVtYmVyJyAmJlxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlLmxhdCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnZW51bScgJiYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlID09PSAnZW51bVtdJyAmJiBBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWVMZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlW2ldICE9PSAnc3RyaW5nJyAmJiB0eXBlb2YgdmFsdWVbaV0gIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wICsgJy4nICsgaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNWZWN0b3JUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCB2ZWN0b3JTaXplID0gZ2V0VmVjdG9yU2l6ZSh0eXBlKTtcbiAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkgfHwgdmFsdWUubGVuZ3RoICE9PSB2ZWN0b3JTaXplKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0lOVkFMSURfSU5QVVRfVkVDVE9SJywgcHJvcCwgdmVjdG9yU2l6ZSwgdmFsdWUubGVuZ3RoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0FycmF5VHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZXhwZWN0ZWRUeXBlID0gZ2V0SW5uZXJUeXBlKHR5cGUpO1xuICAgICAgICAgICAgY29uc3QgdmFsdWVMZW5ndGggPSB2YWx1ZS5sZW5ndGg7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHZhbHVlTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlW2ldICE9PSBleHBlY3RlZFR5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHByb3AgKyAnLicgKyBpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgdHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGlmICghdmFsdWUgfHwgdHlwZW9mIHZhbHVlICE9PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm9wO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gdXNpbmcgYXMgUmVzdWx0RG9jdW1lbnQgaXMgbm90IGV4YWN0bHkgcmlnaHQgYnV0IHRyeWluZyB0byBiZSB0eXBlLXNhZmUgaGVyZSBpcyBub3QgdXNlZnVsXG4gICAgICAgICAgICBjb25zdCBzdWJQcm9wID0gdmFsaWRhdGVTY2hlbWEodmFsdWUsIHR5cGUpO1xuICAgICAgICAgICAgaWYgKHN1YlByb3ApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcCArICcuJyArIHN1YlByb3A7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSB0eXBlKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJvcDtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdW5kZWZpbmVkO1xufVxuY29uc3QgSVNfQVJSQVlfVFlQRSA9IHtcbiAgICBzdHJpbmc6IGZhbHNlLFxuICAgIG51bWJlcjogZmFsc2UsXG4gICAgYm9vbGVhbjogZmFsc2UsXG4gICAgZW51bTogZmFsc2UsXG4gICAgZ2VvcG9pbnQ6IGZhbHNlLFxuICAgICdzdHJpbmdbXSc6IHRydWUsXG4gICAgJ251bWJlcltdJzogdHJ1ZSxcbiAgICAnYm9vbGVhbltdJzogdHJ1ZSxcbiAgICAnZW51bVtdJzogdHJ1ZVxufTtcbmNvbnN0IElOTkVSX1RZUEUgPSB7XG4gICAgJ3N0cmluZ1tdJzogJ3N0cmluZycsXG4gICAgJ251bWJlcltdJzogJ251bWJlcicsXG4gICAgJ2Jvb2xlYW5bXSc6ICdib29sZWFuJyxcbiAgICAnZW51bVtdJzogJ2VudW0nXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGlzR2VvUG9pbnRUeXBlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZSA9PT0gJ2dlb3BvaW50Jztcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ZlY3RvclR5cGUodHlwZSkge1xuICAgIHJldHVybiB0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycgJiYgL152ZWN0b3JcXFtcXGQrXFxdJC8udGVzdCh0eXBlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0FycmF5VHlwZSh0eXBlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB0eXBlID09PSAnc3RyaW5nJyAmJiBJU19BUlJBWV9UWVBFW3R5cGVdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldElubmVyVHlwZSh0eXBlKSB7XG4gICAgcmV0dXJuIElOTkVSX1RZUEVbdHlwZV07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VmVjdG9yU2l6ZSh0eXBlKSB7XG4gICAgY29uc3Qgc2l6ZSA9IE51bWJlcih0eXBlLnNsaWNlKDcsIC0xKSk7XG4gICAgc3dpdGNoICh0cnVlKSB7XG4gICAgICAgIGNhc2UgaXNOYU4oc2l6ZSk6XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignSU5WQUxJRF9WRUNUT1JfVkFMVUUnLCB0eXBlKTtcbiAgICAgICAgY2FzZSBzaXplIDw9IDA6XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignSU5WQUxJRF9WRUNUT1JfU0laRScsIHR5cGUpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHNpemU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/defaults.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/documents-store.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/documents-store.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   count: () => (/* binding */ count),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createDocumentsStore: () => (/* binding */ createDocumentsStore),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getAll: () => (/* binding */ getAll),\n/* harmony export */   getMultiple: () => (/* binding */ getMultiple),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   save: () => (/* binding */ save),\n/* harmony export */   store: () => (/* binding */ store)\n/* harmony export */ });\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n\nfunction create(_, sharedInternalDocumentStore) {\n    return {\n        sharedInternalDocumentStore,\n        docs: {},\n        count: 0\n    };\n}\nfunction get(store, id) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getInternalDocumentId)(store.sharedInternalDocumentStore, id);\n    return store.docs[internalId];\n}\nfunction getMultiple(store, ids) {\n    const idsLength = ids.length;\n    const found = Array.from({ length: idsLength });\n    for (let i = 0; i < idsLength; i++) {\n        const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getInternalDocumentId)(store.sharedInternalDocumentStore, ids[i]);\n        found[i] = store.docs[internalId];\n    }\n    return found;\n}\nfunction getAll(store) {\n    return store.docs;\n}\nfunction store(store, id, internalId, doc) {\n    if (typeof store.docs[internalId] !== 'undefined') {\n        return false;\n    }\n    store.docs[internalId] = doc;\n    store.count++;\n    return true;\n}\nfunction remove(store, id) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getInternalDocumentId)(store.sharedInternalDocumentStore, id);\n    if (typeof store.docs[internalId] === 'undefined') {\n        return false;\n    }\n    delete store.docs[internalId];\n    store.count--;\n    return true;\n}\nfunction count(store) {\n    return store.count;\n}\nfunction load(sharedInternalDocumentStore, raw) {\n    const rawDocument = raw;\n    return {\n        docs: rawDocument.docs,\n        count: rawDocument.count,\n        sharedInternalDocumentStore\n    };\n}\nfunction save(store) {\n    return {\n        docs: store.docs,\n        count: store.count\n    };\n}\nfunction createDocumentsStore() {\n    return {\n        create,\n        get,\n        getMultiple,\n        getAll,\n        store,\n        remove,\n        count,\n        load,\n        save\n    };\n}\n//# sourceMappingURL=documents-store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvZG9jdW1lbnRzLXN0b3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdFO0FBQ2pFO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDTztBQUNQLHVCQUF1QixxRkFBcUI7QUFDNUM7QUFDQTtBQUNPO0FBQ1A7QUFDQSwrQkFBK0IsbUJBQW1CO0FBQ2xELG9CQUFvQixlQUFlO0FBQ25DLDJCQUEyQixxRkFBcUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx1QkFBdUIscUZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2VzbS9jb21wb25lbnRzL2RvY3VtZW50cy1zdG9yZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRJbnRlcm5hbERvY3VtZW50SWQgfSBmcm9tICcuL2ludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUoXywgc2hhcmVkSW50ZXJuYWxEb2N1bWVudFN0b3JlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2hhcmVkSW50ZXJuYWxEb2N1bWVudFN0b3JlLFxuICAgICAgICBkb2NzOiB7fSxcbiAgICAgICAgY291bnQ6IDBcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldChzdG9yZSwgaWQpIHtcbiAgICBjb25zdCBpbnRlcm5hbElkID0gZ2V0SW50ZXJuYWxEb2N1bWVudElkKHN0b3JlLnNoYXJlZEludGVybmFsRG9jdW1lbnRTdG9yZSwgaWQpO1xuICAgIHJldHVybiBzdG9yZS5kb2NzW2ludGVybmFsSWRdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE11bHRpcGxlKHN0b3JlLCBpZHMpIHtcbiAgICBjb25zdCBpZHNMZW5ndGggPSBpZHMubGVuZ3RoO1xuICAgIGNvbnN0IGZvdW5kID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogaWRzTGVuZ3RoIH0pO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaWRzTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgaW50ZXJuYWxJZCA9IGdldEludGVybmFsRG9jdW1lbnRJZChzdG9yZS5zaGFyZWRJbnRlcm5hbERvY3VtZW50U3RvcmUsIGlkc1tpXSk7XG4gICAgICAgIGZvdW5kW2ldID0gc3RvcmUuZG9jc1tpbnRlcm5hbElkXTtcbiAgICB9XG4gICAgcmV0dXJuIGZvdW5kO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEFsbChzdG9yZSkge1xuICAgIHJldHVybiBzdG9yZS5kb2NzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHN0b3JlKHN0b3JlLCBpZCwgaW50ZXJuYWxJZCwgZG9jKSB7XG4gICAgaWYgKHR5cGVvZiBzdG9yZS5kb2NzW2ludGVybmFsSWRdICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHN0b3JlLmRvY3NbaW50ZXJuYWxJZF0gPSBkb2M7XG4gICAgc3RvcmUuY291bnQrKztcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmUoc3RvcmUsIGlkKSB7XG4gICAgY29uc3QgaW50ZXJuYWxJZCA9IGdldEludGVybmFsRG9jdW1lbnRJZChzdG9yZS5zaGFyZWRJbnRlcm5hbERvY3VtZW50U3RvcmUsIGlkKTtcbiAgICBpZiAodHlwZW9mIHN0b3JlLmRvY3NbaW50ZXJuYWxJZF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZGVsZXRlIHN0b3JlLmRvY3NbaW50ZXJuYWxJZF07XG4gICAgc3RvcmUuY291bnQtLTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb3VudChzdG9yZSkge1xuICAgIHJldHVybiBzdG9yZS5jb3VudDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2FkKHNoYXJlZEludGVybmFsRG9jdW1lbnRTdG9yZSwgcmF3KSB7XG4gICAgY29uc3QgcmF3RG9jdW1lbnQgPSByYXc7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZG9jczogcmF3RG9jdW1lbnQuZG9jcyxcbiAgICAgICAgY291bnQ6IHJhd0RvY3VtZW50LmNvdW50LFxuICAgICAgICBzaGFyZWRJbnRlcm5hbERvY3VtZW50U3RvcmVcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNhdmUoc3RvcmUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBkb2NzOiBzdG9yZS5kb2NzLFxuICAgICAgICBjb3VudDogc3RvcmUuY291bnRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZURvY3VtZW50c1N0b3JlKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNyZWF0ZSxcbiAgICAgICAgZ2V0LFxuICAgICAgICBnZXRNdWx0aXBsZSxcbiAgICAgICAgZ2V0QWxsLFxuICAgICAgICBzdG9yZSxcbiAgICAgICAgcmVtb3ZlLFxuICAgICAgICBjb3VudCxcbiAgICAgICAgbG9hZCxcbiAgICAgICAgc2F2ZVxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kb2N1bWVudHMtc3RvcmUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/documents-store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/facets.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/facets.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFacets: () => (/* binding */ getFacets)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\n\nfunction sortAsc(a, b) {\n    return a[1] - b[1];\n}\nfunction sortDesc(a, b) {\n    return b[1] - a[1];\n}\nfunction sortingPredicateBuilder(order = 'desc') {\n    return order.toLowerCase() === 'asc' ? sortAsc : sortDesc;\n}\nfunction getFacets(orama, results, facetsConfig) {\n    const facets = {};\n    const allIDs = results.map(([id]) => id);\n    const allDocs = orama.documentsStore.getMultiple(orama.data.docs, allIDs);\n    const facetKeys = Object.keys(facetsConfig);\n    const properties = orama.index.getSearchablePropertiesWithTypes(orama.data.index);\n    for (const facet of facetKeys) {\n        let values;\n        // Hack to guarantee the same order of ranges as specified by the user\n        // TODO: Revisit this once components land\n        if (properties[facet] === 'number') {\n            const { ranges } = facetsConfig[facet];\n            const rangesLength = ranges.length;\n            const tmp = Array.from({ length: rangesLength });\n            for (let i = 0; i < rangesLength; i++) {\n                const range = ranges[i];\n                tmp[i] = [`${range.from}-${range.to}`, 0];\n            }\n            values = Object.fromEntries(tmp);\n        }\n        facets[facet] = {\n            count: 0,\n            values: values ?? {}\n        };\n    }\n    const allDocsLength = allDocs.length;\n    for (let i = 0; i < allDocsLength; i++) {\n        const doc = allDocs[i];\n        for (const facet of facetKeys) {\n            const facetValue = facet.includes('.') ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getNested)(doc, facet) : doc[facet];\n            const propertyType = properties[facet];\n            const facetValues = facets[facet].values;\n            switch (propertyType) {\n                case 'number': {\n                    const ranges = facetsConfig[facet].ranges;\n                    calculateNumberFacetBuilder(ranges, facetValues)(facetValue);\n                    break;\n                }\n                case 'number[]': {\n                    const alreadyInsertedValues = new Set();\n                    const ranges = facetsConfig[facet].ranges;\n                    const calculateNumberFacet = calculateNumberFacetBuilder(ranges, facetValues, alreadyInsertedValues);\n                    for (const v of facetValue) {\n                        calculateNumberFacet(v);\n                    }\n                    break;\n                }\n                case 'boolean':\n                case 'enum':\n                case 'string': {\n                    calculateBooleanStringOrEnumFacetBuilder(facetValues, propertyType)(facetValue);\n                    break;\n                }\n                case 'boolean[]':\n                case 'enum[]':\n                case 'string[]': {\n                    const alreadyInsertedValues = new Set();\n                    const innerType = propertyType === 'boolean[]' ? 'boolean' : 'string';\n                    const calculateBooleanStringOrEnumFacet = calculateBooleanStringOrEnumFacetBuilder(facetValues, innerType, alreadyInsertedValues);\n                    for (const v of facetValue) {\n                        calculateBooleanStringOrEnumFacet(v);\n                    }\n                    break;\n                }\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('FACET_NOT_SUPPORTED', propertyType);\n            }\n        }\n    }\n    // TODO: We are looping again with the same previous keys, should we creat a single loop instead?\n    for (const facet of facetKeys) {\n        const currentFacet = facets[facet];\n        // Count the number of values for each facet\n        currentFacet.count = Object.keys(currentFacet.values).length;\n        // Sort only string-based facets\n        if (properties[facet] === 'string') {\n            const stringFacetDefinition = facetsConfig[facet];\n            const sortingPredicate = sortingPredicateBuilder(stringFacetDefinition.sort);\n            currentFacet.values = Object.fromEntries(Object.entries(currentFacet.values)\n                .sort(sortingPredicate)\n                .slice(stringFacetDefinition.offset ?? 0, stringFacetDefinition.limit ?? 10));\n        }\n    }\n    return facets;\n}\nfunction calculateNumberFacetBuilder(ranges, values, alreadyInsertedValues) {\n    return (facetValue) => {\n        for (const range of ranges) {\n            const value = `${range.from}-${range.to}`;\n            if (alreadyInsertedValues?.has(value)) {\n                continue;\n            }\n            if (facetValue >= range.from && facetValue <= range.to) {\n                if (values[value] === undefined) {\n                    values[value] = 1;\n                }\n                else {\n                    values[value]++;\n                    alreadyInsertedValues?.add(value);\n                }\n            }\n        }\n    };\n}\nfunction calculateBooleanStringOrEnumFacetBuilder(values, propertyType, alreadyInsertedValues) {\n    const defaultValue = propertyType === 'boolean' ? 'false' : '';\n    return (facetValue) => {\n        // String or boolean based facets\n        const value = facetValue?.toString() ?? defaultValue;\n        if (alreadyInsertedValues?.has(value)) {\n            return;\n        }\n        values[value] = (values[value] ?? 0) + 1;\n        alreadyInsertedValues?.add(value);\n    };\n}\n//# sourceMappingURL=facets.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/facets.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/groups.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/groups.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGroups: () => (/* binding */ getGroups)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n\n\n\nconst DEFAULT_REDUCE = {\n    reducer: (_, acc, res, index) => {\n        acc[index] = res;\n        return acc;\n    },\n    getInitialValue: (length) => Array.from({ length })\n};\nconst ALLOWED_TYPES = ['string', 'number', 'boolean'];\nfunction getGroups(orama, results, groupBy) {\n    const properties = groupBy.properties;\n    const propertiesLength = properties.length;\n    const schemaProperties = orama.index.getSearchablePropertiesWithTypes(orama.data.index);\n    for (let i = 0; i < propertiesLength; i++) {\n        const property = properties[i];\n        if (typeof schemaProperties[property] === 'undefined') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('UNKNOWN_GROUP_BY_PROPERTY', property);\n        }\n        if (!ALLOWED_TYPES.includes(schemaProperties[property])) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_GROUP_BY_PROPERTY', property, ALLOWED_TYPES.join(', '), schemaProperties[property]);\n        }\n    }\n    const allIDs = results.map(([id]) => (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, id));\n    // allDocs is already sorted by the sortBy algorithm\n    // We leverage on that to limit the number of documents returned\n    const allDocs = orama.documentsStore.getMultiple(orama.data.docs, allIDs);\n    const allDocsLength = allDocs.length;\n    const returnedCount = groupBy.maxResult || Number.MAX_SAFE_INTEGER;\n    const listOfValues = [];\n    // We want to understand which documents have which values\n    // and group them by the property and values\n    const g = {};\n    for (let i = 0; i < propertiesLength; i++) {\n        const groupByKey = properties[i];\n        const group = {\n            property: groupByKey,\n            perValue: {}\n        };\n        const values = new Set();\n        for (let j = 0; j < allDocsLength; j++) {\n            const doc = allDocs[j];\n            const value = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getNested)(doc, groupByKey);\n            // we don't want to consider undefined values\n            if (typeof value === 'undefined') {\n                continue;\n            }\n            const keyValue = typeof value !== 'boolean' ? value : '' + value;\n            const perValue = group.perValue[keyValue] ?? {\n                indexes: [],\n                count: 0\n            };\n            if (perValue.count >= returnedCount) {\n                // We stop early because for this value we react the limit\n                continue;\n            }\n            // We use the index to keep track of the original order\n            perValue.indexes.push(j);\n            perValue.count++;\n            group.perValue[keyValue] = perValue;\n            values.add(value);\n        }\n        listOfValues.push(Array.from(values));\n        g[groupByKey] = group;\n    }\n    const combinations = calculateCombination(listOfValues);\n    const combinationsLength = combinations.length;\n    const groups = [];\n    for (let i = 0; i < combinationsLength; i++) {\n        const combination = combinations[i];\n        const combinationLength = combination.length;\n        const group = {\n            values: [],\n            indexes: []\n        };\n        const indexes = [];\n        for (let j = 0; j < combinationLength; j++) {\n            const value = combination[j];\n            const property = properties[j];\n            indexes.push(g[property].perValue[(typeof value !== 'boolean' ? value : '' + value)].indexes);\n            group.values.push(value);\n        }\n        // We leverage on the index to sort the results by the original order\n        group.indexes = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.intersect)(indexes).sort((a, b) => a - b);\n        // don't generate empty groups\n        if (group.indexes.length === 0) {\n            continue;\n        }\n        groups.push(group);\n    }\n    const groupsLength = groups.length;\n    const res = Array.from({ length: groupsLength });\n    for (let i = 0; i < groupsLength; i++) {\n        const group = groups[i];\n        const reduce = (groupBy.reduce || DEFAULT_REDUCE);\n        const docs = group.indexes.map((index) => {\n            return {\n                id: allIDs[index],\n                score: results[index][1],\n                document: allDocs[index]\n            };\n        });\n        const func = reduce.reducer.bind(null, group.values);\n        const initialValue = reduce.getInitialValue(group.indexes.length);\n        const aggregationValue = docs.reduce(func, initialValue);\n        res[i] = {\n            values: group.values,\n            result: aggregationValue\n        };\n    }\n    return res;\n}\nfunction calculateCombination(arrs, index = 0) {\n    if (index + 1 === arrs.length)\n        return arrs[index].map((item) => [item]);\n    const head = arrs[index];\n    const c = calculateCombination(arrs, index + 1);\n    const combinations = [];\n    for (const value of head) {\n        for (const combination of c) {\n            const result = [value];\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.safeArrayPush)(result, combination);\n            combinations.push(result);\n        }\n    }\n    return combinations;\n}\n//# sourceMappingURL=groups.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvZ3JvdXBzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDdUI7QUFDWTtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQSxrQkFBa0IsdURBQVc7QUFDN0I7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0EseUNBQXlDLDJGQUEyQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isc0JBQXNCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtQkFBbUI7QUFDM0M7QUFDQSwwQkFBMEIsb0RBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0Isd0JBQXdCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVCQUF1QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isb0RBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsc0JBQXNCO0FBQ25ELG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksd0RBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vY29tcG9uZW50cy9ncm91cHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgZ2V0TmVzdGVkLCBpbnRlcnNlY3QsIHNhZmVBcnJheVB1c2ggfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgeyBnZXREb2N1bWVudElkRnJvbUludGVybmFsSWQgfSBmcm9tICcuL2ludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzJztcbmNvbnN0IERFRkFVTFRfUkVEVUNFID0ge1xuICAgIHJlZHVjZXI6IChfLCBhY2MsIHJlcywgaW5kZXgpID0+IHtcbiAgICAgICAgYWNjW2luZGV4XSA9IHJlcztcbiAgICAgICAgcmV0dXJuIGFjYztcbiAgICB9LFxuICAgIGdldEluaXRpYWxWYWx1ZTogKGxlbmd0aCkgPT4gQXJyYXkuZnJvbSh7IGxlbmd0aCB9KVxufTtcbmNvbnN0IEFMTE9XRURfVFlQRVMgPSBbJ3N0cmluZycsICdudW1iZXInLCAnYm9vbGVhbiddO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEdyb3VwcyhvcmFtYSwgcmVzdWx0cywgZ3JvdXBCeSkge1xuICAgIGNvbnN0IHByb3BlcnRpZXMgPSBncm91cEJ5LnByb3BlcnRpZXM7XG4gICAgY29uc3QgcHJvcGVydGllc0xlbmd0aCA9IHByb3BlcnRpZXMubGVuZ3RoO1xuICAgIGNvbnN0IHNjaGVtYVByb3BlcnRpZXMgPSBvcmFtYS5pbmRleC5nZXRTZWFyY2hhYmxlUHJvcGVydGllc1dpdGhUeXBlcyhvcmFtYS5kYXRhLmluZGV4KTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BlcnRpZXNMZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBwcm9wZXJ0eSA9IHByb3BlcnRpZXNbaV07XG4gICAgICAgIGlmICh0eXBlb2Ygc2NoZW1hUHJvcGVydGllc1twcm9wZXJ0eV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignVU5LTk9XTl9HUk9VUF9CWV9QUk9QRVJUWScsIHByb3BlcnR5KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUFMTE9XRURfVFlQRVMuaW5jbHVkZXMoc2NoZW1hUHJvcGVydGllc1twcm9wZXJ0eV0pKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignSU5WQUxJRF9HUk9VUF9CWV9QUk9QRVJUWScsIHByb3BlcnR5LCBBTExPV0VEX1RZUEVTLmpvaW4oJywgJyksIHNjaGVtYVByb3BlcnRpZXNbcHJvcGVydHldKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBhbGxJRHMgPSByZXN1bHRzLm1hcCgoW2lkXSkgPT4gZ2V0RG9jdW1lbnRJZEZyb21JbnRlcm5hbElkKG9yYW1hLmludGVybmFsRG9jdW1lbnRJRFN0b3JlLCBpZCkpO1xuICAgIC8vIGFsbERvY3MgaXMgYWxyZWFkeSBzb3J0ZWQgYnkgdGhlIHNvcnRCeSBhbGdvcml0aG1cbiAgICAvLyBXZSBsZXZlcmFnZSBvbiB0aGF0IHRvIGxpbWl0IHRoZSBudW1iZXIgb2YgZG9jdW1lbnRzIHJldHVybmVkXG4gICAgY29uc3QgYWxsRG9jcyA9IG9yYW1hLmRvY3VtZW50c1N0b3JlLmdldE11bHRpcGxlKG9yYW1hLmRhdGEuZG9jcywgYWxsSURzKTtcbiAgICBjb25zdCBhbGxEb2NzTGVuZ3RoID0gYWxsRG9jcy5sZW5ndGg7XG4gICAgY29uc3QgcmV0dXJuZWRDb3VudCA9IGdyb3VwQnkubWF4UmVzdWx0IHx8IE51bWJlci5NQVhfU0FGRV9JTlRFR0VSO1xuICAgIGNvbnN0IGxpc3RPZlZhbHVlcyA9IFtdO1xuICAgIC8vIFdlIHdhbnQgdG8gdW5kZXJzdGFuZCB3aGljaCBkb2N1bWVudHMgaGF2ZSB3aGljaCB2YWx1ZXNcbiAgICAvLyBhbmQgZ3JvdXAgdGhlbSBieSB0aGUgcHJvcGVydHkgYW5kIHZhbHVlc1xuICAgIGNvbnN0IGcgPSB7fTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BlcnRpZXNMZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBncm91cEJ5S2V5ID0gcHJvcGVydGllc1tpXTtcbiAgICAgICAgY29uc3QgZ3JvdXAgPSB7XG4gICAgICAgICAgICBwcm9wZXJ0eTogZ3JvdXBCeUtleSxcbiAgICAgICAgICAgIHBlclZhbHVlOiB7fVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCB2YWx1ZXMgPSBuZXcgU2V0KCk7XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgYWxsRG9jc0xlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICBjb25zdCBkb2MgPSBhbGxEb2NzW2pdO1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBnZXROZXN0ZWQoZG9jLCBncm91cEJ5S2V5KTtcbiAgICAgICAgICAgIC8vIHdlIGRvbid0IHdhbnQgdG8gY29uc2lkZXIgdW5kZWZpbmVkIHZhbHVlc1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGtleVZhbHVlID0gdHlwZW9mIHZhbHVlICE9PSAnYm9vbGVhbicgPyB2YWx1ZSA6ICcnICsgdmFsdWU7XG4gICAgICAgICAgICBjb25zdCBwZXJWYWx1ZSA9IGdyb3VwLnBlclZhbHVlW2tleVZhbHVlXSA/PyB7XG4gICAgICAgICAgICAgICAgaW5kZXhlczogW10sXG4gICAgICAgICAgICAgICAgY291bnQ6IDBcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBpZiAocGVyVmFsdWUuY291bnQgPj0gcmV0dXJuZWRDb3VudCkge1xuICAgICAgICAgICAgICAgIC8vIFdlIHN0b3AgZWFybHkgYmVjYXVzZSBmb3IgdGhpcyB2YWx1ZSB3ZSByZWFjdCB0aGUgbGltaXRcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFdlIHVzZSB0aGUgaW5kZXggdG8ga2VlcCB0cmFjayBvZiB0aGUgb3JpZ2luYWwgb3JkZXJcbiAgICAgICAgICAgIHBlclZhbHVlLmluZGV4ZXMucHVzaChqKTtcbiAgICAgICAgICAgIHBlclZhbHVlLmNvdW50Kys7XG4gICAgICAgICAgICBncm91cC5wZXJWYWx1ZVtrZXlWYWx1ZV0gPSBwZXJWYWx1ZTtcbiAgICAgICAgICAgIHZhbHVlcy5hZGQodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGxpc3RPZlZhbHVlcy5wdXNoKEFycmF5LmZyb20odmFsdWVzKSk7XG4gICAgICAgIGdbZ3JvdXBCeUtleV0gPSBncm91cDtcbiAgICB9XG4gICAgY29uc3QgY29tYmluYXRpb25zID0gY2FsY3VsYXRlQ29tYmluYXRpb24obGlzdE9mVmFsdWVzKTtcbiAgICBjb25zdCBjb21iaW5hdGlvbnNMZW5ndGggPSBjb21iaW5hdGlvbnMubGVuZ3RoO1xuICAgIGNvbnN0IGdyb3VwcyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29tYmluYXRpb25zTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgY29tYmluYXRpb24gPSBjb21iaW5hdGlvbnNbaV07XG4gICAgICAgIGNvbnN0IGNvbWJpbmF0aW9uTGVuZ3RoID0gY29tYmluYXRpb24ubGVuZ3RoO1xuICAgICAgICBjb25zdCBncm91cCA9IHtcbiAgICAgICAgICAgIHZhbHVlczogW10sXG4gICAgICAgICAgICBpbmRleGVzOiBbXVxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBpbmRleGVzID0gW107XG4gICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgY29tYmluYXRpb25MZW5ndGg7IGorKykge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBjb21iaW5hdGlvbltqXTtcbiAgICAgICAgICAgIGNvbnN0IHByb3BlcnR5ID0gcHJvcGVydGllc1tqXTtcbiAgICAgICAgICAgIGluZGV4ZXMucHVzaChnW3Byb3BlcnR5XS5wZXJWYWx1ZVsodHlwZW9mIHZhbHVlICE9PSAnYm9vbGVhbicgPyB2YWx1ZSA6ICcnICsgdmFsdWUpXS5pbmRleGVzKTtcbiAgICAgICAgICAgIGdyb3VwLnZhbHVlcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBXZSBsZXZlcmFnZSBvbiB0aGUgaW5kZXggdG8gc29ydCB0aGUgcmVzdWx0cyBieSB0aGUgb3JpZ2luYWwgb3JkZXJcbiAgICAgICAgZ3JvdXAuaW5kZXhlcyA9IGludGVyc2VjdChpbmRleGVzKS5zb3J0KChhLCBiKSA9PiBhIC0gYik7XG4gICAgICAgIC8vIGRvbid0IGdlbmVyYXRlIGVtcHR5IGdyb3Vwc1xuICAgICAgICBpZiAoZ3JvdXAuaW5kZXhlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGdyb3Vwcy5wdXNoKGdyb3VwKTtcbiAgICB9XG4gICAgY29uc3QgZ3JvdXBzTGVuZ3RoID0gZ3JvdXBzLmxlbmd0aDtcbiAgICBjb25zdCByZXMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBncm91cHNMZW5ndGggfSk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBncm91cHNMZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBncm91cCA9IGdyb3Vwc1tpXTtcbiAgICAgICAgY29uc3QgcmVkdWNlID0gKGdyb3VwQnkucmVkdWNlIHx8IERFRkFVTFRfUkVEVUNFKTtcbiAgICAgICAgY29uc3QgZG9jcyA9IGdyb3VwLmluZGV4ZXMubWFwKChpbmRleCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBpZDogYWxsSURzW2luZGV4XSxcbiAgICAgICAgICAgICAgICBzY29yZTogcmVzdWx0c1tpbmRleF1bMV0sXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQ6IGFsbERvY3NbaW5kZXhdXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZnVuYyA9IHJlZHVjZS5yZWR1Y2VyLmJpbmQobnVsbCwgZ3JvdXAudmFsdWVzKTtcbiAgICAgICAgY29uc3QgaW5pdGlhbFZhbHVlID0gcmVkdWNlLmdldEluaXRpYWxWYWx1ZShncm91cC5pbmRleGVzLmxlbmd0aCk7XG4gICAgICAgIGNvbnN0IGFnZ3JlZ2F0aW9uVmFsdWUgPSBkb2NzLnJlZHVjZShmdW5jLCBpbml0aWFsVmFsdWUpO1xuICAgICAgICByZXNbaV0gPSB7XG4gICAgICAgICAgICB2YWx1ZXM6IGdyb3VwLnZhbHVlcyxcbiAgICAgICAgICAgIHJlc3VsdDogYWdncmVnYXRpb25WYWx1ZVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gcmVzO1xufVxuZnVuY3Rpb24gY2FsY3VsYXRlQ29tYmluYXRpb24oYXJycywgaW5kZXggPSAwKSB7XG4gICAgaWYgKGluZGV4ICsgMSA9PT0gYXJycy5sZW5ndGgpXG4gICAgICAgIHJldHVybiBhcnJzW2luZGV4XS5tYXAoKGl0ZW0pID0+IFtpdGVtXSk7XG4gICAgY29uc3QgaGVhZCA9IGFycnNbaW5kZXhdO1xuICAgIGNvbnN0IGMgPSBjYWxjdWxhdGVDb21iaW5hdGlvbihhcnJzLCBpbmRleCArIDEpO1xuICAgIGNvbnN0IGNvbWJpbmF0aW9ucyA9IFtdO1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgaGVhZCkge1xuICAgICAgICBmb3IgKGNvbnN0IGNvbWJpbmF0aW9uIG9mIGMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IFt2YWx1ZV07XG4gICAgICAgICAgICBzYWZlQXJyYXlQdXNoKHJlc3VsdCwgY29tYmluYXRpb24pO1xuICAgICAgICAgICAgY29tYmluYXRpb25zLnB1c2gocmVzdWx0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29tYmluYXRpb25zO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3JvdXBzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/groups.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js":
/*!****************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/hooks.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FUNCTION_COMPONENTS: () => (/* binding */ FUNCTION_COMPONENTS),\n/* harmony export */   OBJECT_COMPONENTS: () => (/* binding */ OBJECT_COMPONENTS),\n/* harmony export */   SINGLE_OR_ARRAY_COMPONENTS: () => (/* binding */ SINGLE_OR_ARRAY_COMPONENTS),\n/* harmony export */   runAfterCreate: () => (/* binding */ runAfterCreate),\n/* harmony export */   runAfterSearch: () => (/* binding */ runAfterSearch),\n/* harmony export */   runBeforeSearch: () => (/* binding */ runBeforeSearch),\n/* harmony export */   runMultipleHook: () => (/* binding */ runMultipleHook),\n/* harmony export */   runSingleHook: () => (/* binding */ runSingleHook)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\nconst OBJECT_COMPONENTS = ['tokenizer', 'index', 'documentsStore', 'sorter'];\nconst FUNCTION_COMPONENTS = [\n    'validateSchema',\n    'getDocumentIndexId',\n    'getDocumentProperties',\n    'formatElapsedTime'\n];\nconst SINGLE_OR_ARRAY_COMPONENTS = [\n/* deprecated with v2.0.0-beta.5 */\n];\nfunction runSingleHook(hooks, orama, id, doc) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(orama, id, doc);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(orama, id, doc);\n        }\n    }\n}\nfunction runMultipleHook(hooks, orama, docsOrIds) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(orama, docsOrIds);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(orama, docsOrIds);\n        }\n    }\n}\nfunction runAfterSearch(hooks, db, params, language, results) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(db, params, language, results);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(db, params, language, results);\n        }\n    }\n}\nfunction runBeforeSearch(hooks, db, params, language) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(db, params, language);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(db, params, language);\n        }\n    }\n}\nfunction runAfterCreate(hooks, db) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(db);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(db);\n        }\n    }\n}\n//# sourceMappingURL=hooks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvaG9va3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ3ZDO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCxpQ0FBaUMsc0RBQWU7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUNBQWlDLHNEQUFlO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlDQUFpQyxzREFBZTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQ0FBaUMsc0RBQWU7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUNBQWlDLHNEQUFlO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvaG9va3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNBc3luY0Z1bmN0aW9uIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuZXhwb3J0IGNvbnN0IE9CSkVDVF9DT01QT05FTlRTID0gWyd0b2tlbml6ZXInLCAnaW5kZXgnLCAnZG9jdW1lbnRzU3RvcmUnLCAnc29ydGVyJ107XG5leHBvcnQgY29uc3QgRlVOQ1RJT05fQ09NUE9ORU5UUyA9IFtcbiAgICAndmFsaWRhdGVTY2hlbWEnLFxuICAgICdnZXREb2N1bWVudEluZGV4SWQnLFxuICAgICdnZXREb2N1bWVudFByb3BlcnRpZXMnLFxuICAgICdmb3JtYXRFbGFwc2VkVGltZSdcbl07XG5leHBvcnQgY29uc3QgU0lOR0xFX09SX0FSUkFZX0NPTVBPTkVOVFMgPSBbXG4vKiBkZXByZWNhdGVkIHdpdGggdjIuMC4wLWJldGEuNSAqL1xuXTtcbmV4cG9ydCBmdW5jdGlvbiBydW5TaW5nbGVIb29rKGhvb2tzLCBvcmFtYSwgaWQsIGRvYykge1xuICAgIGNvbnN0IG5lZWRBc3luYyA9IGhvb2tzLnNvbWUoaXNBc3luY0Z1bmN0aW9uKTtcbiAgICBpZiAobmVlZEFzeW5jKSB7XG4gICAgICAgIHJldHVybiAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgZm9yIChjb25zdCBob29rIG9mIGhvb2tzKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgaG9vayhvcmFtYSwgaWQsIGRvYyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBmb3IgKGNvbnN0IGhvb2sgb2YgaG9va3MpIHtcbiAgICAgICAgICAgIGhvb2sob3JhbWEsIGlkLCBkb2MpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJ1bk11bHRpcGxlSG9vayhob29rcywgb3JhbWEsIGRvY3NPcklkcykge1xuICAgIGNvbnN0IG5lZWRBc3luYyA9IGhvb2tzLnNvbWUoaXNBc3luY0Z1bmN0aW9uKTtcbiAgICBpZiAobmVlZEFzeW5jKSB7XG4gICAgICAgIHJldHVybiAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgZm9yIChjb25zdCBob29rIG9mIGhvb2tzKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgaG9vayhvcmFtYSwgZG9jc09ySWRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3QgaG9vayBvZiBob29rcykge1xuICAgICAgICAgICAgaG9vayhvcmFtYSwgZG9jc09ySWRzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBydW5BZnRlclNlYXJjaChob29rcywgZGIsIHBhcmFtcywgbGFuZ3VhZ2UsIHJlc3VsdHMpIHtcbiAgICBjb25zdCBuZWVkQXN5bmMgPSBob29rcy5zb21lKGlzQXN5bmNGdW5jdGlvbik7XG4gICAgaWYgKG5lZWRBc3luYykge1xuICAgICAgICByZXR1cm4gKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaG9vayBvZiBob29rcykge1xuICAgICAgICAgICAgICAgIGF3YWl0IGhvb2soZGIsIHBhcmFtcywgbGFuZ3VhZ2UsIHJlc3VsdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZm9yIChjb25zdCBob29rIG9mIGhvb2tzKSB7XG4gICAgICAgICAgICBob29rKGRiLCBwYXJhbXMsIGxhbmd1YWdlLCByZXN1bHRzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBydW5CZWZvcmVTZWFyY2goaG9va3MsIGRiLCBwYXJhbXMsIGxhbmd1YWdlKSB7XG4gICAgY29uc3QgbmVlZEFzeW5jID0gaG9va3Muc29tZShpc0FzeW5jRnVuY3Rpb24pO1xuICAgIGlmIChuZWVkQXN5bmMpIHtcbiAgICAgICAgcmV0dXJuIChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhvb2sgb2YgaG9va3MpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBob29rKGRiLCBwYXJhbXMsIGxhbmd1YWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3QgaG9vayBvZiBob29rcykge1xuICAgICAgICAgICAgaG9vayhkYiwgcGFyYW1zLCBsYW5ndWFnZSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcnVuQWZ0ZXJDcmVhdGUoaG9va3MsIGRiKSB7XG4gICAgY29uc3QgbmVlZEFzeW5jID0gaG9va3Muc29tZShpc0FzeW5jRnVuY3Rpb24pO1xuICAgIGlmIChuZWVkQXN5bmMpIHtcbiAgICAgICAgcmV0dXJuIChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhvb2sgb2YgaG9va3MpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBob29rKGRiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3QgaG9vayBvZiBob29rcykge1xuICAgICAgICAgICAgaG9vayhkYik7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ob29rcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateResultScores: () => (/* binding */ calculateResultScores),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createIndex: () => (/* binding */ createIndex),\n/* harmony export */   getSearchableProperties: () => (/* binding */ getSearchableProperties),\n/* harmony export */   getSearchablePropertiesWithTypes: () => (/* binding */ getSearchablePropertiesWithTypes),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertDocumentScoreParameters: () => (/* binding */ insertDocumentScoreParameters),\n/* harmony export */   insertTokenScoreParameters: () => (/* binding */ insertTokenScoreParameters),\n/* harmony export */   insertVector: () => (/* binding */ insertVector),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeDocumentScoreParameters: () => (/* binding */ removeDocumentScoreParameters),\n/* harmony export */   removeTokenScoreParameters: () => (/* binding */ removeTokenScoreParameters),\n/* harmony export */   save: () => (/* binding */ save),\n/* harmony export */   search: () => (/* binding */ search),\n/* harmony export */   searchByWhereClause: () => (/* binding */ searchByWhereClause)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _trees_avl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trees/avl.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/trees/avl.js\");\n/* harmony import */ var _trees_flat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../trees/flat.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/trees/flat.js\");\n/* harmony import */ var _trees_radix_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../trees/radix.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/trees/radix.js\");\n/* harmony import */ var _trees_bkd_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../trees/bkd.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/trees/bkd.js\");\n/* harmony import */ var _trees_bool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../trees/bool.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/trees/bool.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _algorithms_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./algorithms.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/algorithms.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./defaults.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/defaults.js\");\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n/* harmony import */ var _trees_vector_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../trees/vector.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/trees/vector.js\");\n\n\n\n\n\n\n\n\n\n\n\nfunction insertDocumentScoreParameters(index, prop, id, tokens, docsCount) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__.getInternalDocumentId)(index.sharedInternalDocumentStore, id);\n    index.avgFieldLength[prop] = ((index.avgFieldLength[prop] ?? 0) * (docsCount - 1) + tokens.length) / docsCount;\n    index.fieldLengths[prop][internalId] = tokens.length;\n    index.frequencies[prop][internalId] = {};\n}\nfunction insertTokenScoreParameters(index, prop, id, tokens, token) {\n    let tokenFrequency = 0;\n    for (const t of tokens) {\n        if (t === token) {\n            tokenFrequency++;\n        }\n    }\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__.getInternalDocumentId)(index.sharedInternalDocumentStore, id);\n    const tf = tokenFrequency / tokens.length;\n    index.frequencies[prop][internalId][token] = tf;\n    if (!(token in index.tokenOccurrences[prop])) {\n        index.tokenOccurrences[prop][token] = 0;\n    }\n    // increase a token counter that may not yet exist\n    index.tokenOccurrences[prop][token] = (index.tokenOccurrences[prop][token] ?? 0) + 1;\n}\nfunction removeDocumentScoreParameters(index, prop, id, docsCount) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__.getInternalDocumentId)(index.sharedInternalDocumentStore, id);\n    if (docsCount > 1) {\n        index.avgFieldLength[prop] =\n            (index.avgFieldLength[prop] * docsCount - index.fieldLengths[prop][internalId]) / (docsCount - 1);\n    }\n    else {\n        index.avgFieldLength[prop] = undefined;\n    }\n    index.fieldLengths[prop][internalId] = undefined;\n    index.frequencies[prop][internalId] = undefined;\n}\nfunction removeTokenScoreParameters(index, prop, token) {\n    index.tokenOccurrences[prop][token]--;\n}\nfunction create(orama, sharedInternalDocumentStore, schema, index, prefix = '') {\n    if (!index) {\n        index = {\n            sharedInternalDocumentStore,\n            indexes: {},\n            vectorIndexes: {},\n            searchableProperties: [],\n            searchablePropertiesWithTypes: {},\n            frequencies: {},\n            tokenOccurrences: {},\n            avgFieldLength: {},\n            fieldLengths: {}\n        };\n    }\n    for (const [prop, type] of Object.entries(schema)) {\n        const path = `${prefix}${prefix ? '.' : ''}${prop}`;\n        if (typeof type === 'object' && !Array.isArray(type)) {\n            // Nested\n            create(orama, sharedInternalDocumentStore, type, index, path);\n            continue;\n        }\n        if ((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isVectorType)(type)) {\n            index.searchableProperties.push(path);\n            index.searchablePropertiesWithTypes[path] = type;\n            index.vectorIndexes[path] = {\n                type: 'Vector',\n                node: new _trees_vector_js__WEBPACK_IMPORTED_MODULE_10__.VectorIndex((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.getVectorSize)(type)),\n                isArray: false\n            };\n        }\n        else {\n            const isArray = /\\[/.test(type);\n            switch (type) {\n                case 'boolean':\n                case 'boolean[]':\n                    index.indexes[path] = { type: 'Bool', node: new _trees_bool_js__WEBPACK_IMPORTED_MODULE_5__.BoolNode(), isArray };\n                    break;\n                case 'number':\n                case 'number[]':\n                    index.indexes[path] = { type: 'AVL', node: new _trees_avl_js__WEBPACK_IMPORTED_MODULE_1__.AVLTree(0, []), isArray };\n                    break;\n                case 'string':\n                case 'string[]':\n                    index.indexes[path] = { type: 'Radix', node: new _trees_radix_js__WEBPACK_IMPORTED_MODULE_3__.RadixTree(), isArray };\n                    index.avgFieldLength[path] = 0;\n                    index.frequencies[path] = {};\n                    index.tokenOccurrences[path] = {};\n                    index.fieldLengths[path] = {};\n                    break;\n                case 'enum':\n                case 'enum[]':\n                    index.indexes[path] = { type: 'Flat', node: new _trees_flat_js__WEBPACK_IMPORTED_MODULE_2__.FlatTree(), isArray };\n                    break;\n                case 'geopoint':\n                    index.indexes[path] = { type: 'BKD', node: new _trees_bkd_js__WEBPACK_IMPORTED_MODULE_4__.BKDTree(), isArray };\n                    break;\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_SCHEMA_TYPE', Array.isArray(type) ? 'array' : type, path);\n            }\n            index.searchableProperties.push(path);\n            index.searchablePropertiesWithTypes[path] = type;\n        }\n    }\n    return index;\n}\nfunction insertScalarBuilder(implementation, index, prop, internalId, language, tokenizer, docsCount, options) {\n    return (value) => {\n        const { type, node } = index.indexes[prop];\n        switch (type) {\n            case 'Bool': {\n                node[value ? 'true' : 'false'].add(internalId);\n                break;\n            }\n            case 'AVL': {\n                const avlRebalanceThreshold = options?.avlRebalanceThreshold ?? 1;\n                node.insert(value, internalId, avlRebalanceThreshold);\n                break;\n            }\n            case 'Radix': {\n                const tokens = tokenizer.tokenize(value, language, prop, false);\n                implementation.insertDocumentScoreParameters(index, prop, internalId, tokens, docsCount);\n                for (const token of tokens) {\n                    implementation.insertTokenScoreParameters(index, prop, internalId, tokens, token);\n                    node.insert(token, internalId);\n                }\n                break;\n            }\n            case 'Flat': {\n                node.insert(value, internalId);\n                break;\n            }\n            case 'BKD': {\n                node.insert(value, [internalId]);\n                break;\n            }\n        }\n    };\n}\nfunction insert(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount, options) {\n    if ((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isVectorType)(schemaType)) {\n        return insertVector(index, prop, value, id, internalId);\n    }\n    const insertScalar = insertScalarBuilder(implementation, index, prop, internalId, language, tokenizer, docsCount, options);\n    if (!(0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isArrayType)(schemaType)) {\n        return insertScalar(value);\n    }\n    const elements = value;\n    const elementsLength = elements.length;\n    for (let i = 0; i < elementsLength; i++) {\n        insertScalar(elements[i]);\n    }\n}\nfunction insertVector(index, prop, value, id, internalDocumentId) {\n    index.vectorIndexes[prop].node.add(internalDocumentId, value);\n}\nfunction removeScalar(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount) {\n    if ((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isVectorType)(schemaType)) {\n        index.vectorIndexes[prop].node.remove(internalId);\n        return true;\n    }\n    const { type, node } = index.indexes[prop];\n    switch (type) {\n        case 'AVL': {\n            node.removeDocument(value, internalId);\n            return true;\n        }\n        case 'Bool': {\n            node[value ? 'true' : 'false'].delete(internalId);\n            return true;\n        }\n        case 'Radix': {\n            const tokens = tokenizer.tokenize(value, language, prop);\n            implementation.removeDocumentScoreParameters(index, prop, id, docsCount);\n            for (const token of tokens) {\n                implementation.removeTokenScoreParameters(index, prop, token);\n                node.removeDocumentByWord(token, internalId);\n            }\n            return true;\n        }\n        case 'Flat': {\n            node.removeDocument(internalId, value);\n            return true;\n        }\n        case 'BKD': {\n            node.removeDocByID(value, internalId);\n            return false;\n        }\n    }\n}\nfunction remove(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount) {\n    if (!(0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isArrayType)(schemaType)) {\n        return removeScalar(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount);\n    }\n    const innerSchemaType = (0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.getInnerType)(schemaType);\n    const elements = value;\n    const elementsLength = elements.length;\n    for (let i = 0; i < elementsLength; i++) {\n        removeScalar(implementation, index, prop, id, internalId, elements[i], innerSchemaType, language, tokenizer, docsCount);\n    }\n    return true;\n}\nfunction calculateResultScores(index, prop, term, ids, docsCount, bm25Relevance, resultsMap, boostPerProperty, whereFiltersIDs, keywordMatchesMap) {\n    const documentIDs = Array.from(ids);\n    const avgFieldLength = index.avgFieldLength[prop];\n    const fieldLengths = index.fieldLengths[prop];\n    const oramaOccurrences = index.tokenOccurrences[prop];\n    const oramaFrequencies = index.frequencies[prop];\n    // oramaOccurrences[term] can be undefined, 0, string, or { [k: string]: number }\n    const termOccurrences = typeof oramaOccurrences[term] === 'number' ? (oramaOccurrences[term] ?? 0) : 0;\n    // Calculate TF-IDF value for each term, in each document, for each index.\n    const documentIDsLength = documentIDs.length;\n    for (let k = 0; k < documentIDsLength; k++) {\n        const internalId = documentIDs[k];\n        if (whereFiltersIDs && !whereFiltersIDs.has(internalId)) {\n            continue;\n        }\n        // Track keyword matches per property\n        if (!keywordMatchesMap.has(internalId)) {\n            keywordMatchesMap.set(internalId, new Map());\n        }\n        const propertyMatches = keywordMatchesMap.get(internalId);\n        propertyMatches.set(prop, (propertyMatches.get(prop) || 0) + 1);\n        const tf = oramaFrequencies?.[internalId]?.[term] ?? 0;\n        const bm25 = (0,_algorithms_js__WEBPACK_IMPORTED_MODULE_7__.BM25)(tf, termOccurrences, docsCount, fieldLengths[internalId], avgFieldLength, bm25Relevance);\n        if (resultsMap.has(internalId)) {\n            resultsMap.set(internalId, resultsMap.get(internalId) + bm25 * boostPerProperty);\n        }\n        else {\n            resultsMap.set(internalId, bm25 * boostPerProperty);\n        }\n    }\n}\nfunction search(index, term, tokenizer, language, propertiesToSearch, exact, tolerance, boost, relevance, docsCount, whereFiltersIDs, threshold = 0) {\n    const tokens = tokenizer.tokenize(term, language);\n    const keywordsCount = tokens.length || 1;\n    // Track keyword matches per document and property\n    const keywordMatchesMap = new Map();\n    // Track which tokens were found in the search\n    const tokenFoundMap = new Map();\n    const resultsMap = new Map();\n    for (const prop of propertiesToSearch) {\n        if (!(prop in index.indexes)) {\n            continue;\n        }\n        const tree = index.indexes[prop];\n        const { type } = tree;\n        if (type !== 'Radix') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('WRONG_SEARCH_PROPERTY_TYPE', prop);\n        }\n        const boostPerProperty = boost[prop] ?? 1;\n        if (boostPerProperty <= 0) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_BOOST_VALUE', boostPerProperty);\n        }\n        // if the tokenizer returns an empty array, we returns all the documents\n        if (tokens.length === 0 && !term) {\n            tokens.push('');\n        }\n        // Process each token in the search term\n        const tokenLength = tokens.length;\n        for (let i = 0; i < tokenLength; i++) {\n            const token = tokens[i];\n            const searchResult = tree.node.find({ term: token, exact, tolerance });\n            // See if this token was found (for threshold=0 filtering)\n            const termsFound = Object.keys(searchResult);\n            if (termsFound.length > 0) {\n                tokenFoundMap.set(token, true);\n            }\n            // Process each matching term\n            const termsFoundLength = termsFound.length;\n            for (let j = 0; j < termsFoundLength; j++) {\n                const word = termsFound[j];\n                const ids = searchResult[word];\n                calculateResultScores(index, prop, word, ids, docsCount, relevance, resultsMap, boostPerProperty, whereFiltersIDs, keywordMatchesMap);\n            }\n        }\n    }\n    // Convert to array and sort by score\n    const results = Array.from(resultsMap.entries())\n        .map(([id, score]) => [id, score])\n        .sort((a, b) => b[1] - a[1]);\n    if (results.length === 0) {\n        return [];\n    }\n    // If threshold is 1, return all results\n    if (threshold === 1) {\n        return results;\n    }\n    // For threshold=0, check if all tokens were found\n    if (threshold === 0) {\n        // Quick return for single tokens - already validated\n        if (keywordsCount === 1) {\n            return results;\n        }\n        // For multiple tokens, verify that ALL tokens were found\n        // If any token wasn't found, return an empty result\n        for (const token of tokens) {\n            if (!tokenFoundMap.get(token)) {\n                return [];\n            }\n        }\n        // Find documents that have all keywords in at least one property\n        const fullMatches = results.filter(([id]) => {\n            const propertyMatches = keywordMatchesMap.get(id);\n            if (!propertyMatches)\n                return false;\n            // Check if any property has all keywords\n            return Array.from(propertyMatches.values()).some((matches) => matches === keywordsCount);\n        });\n        return fullMatches;\n    }\n    // Find documents that have all keywords in at least one property\n    const fullMatches = results.filter(([id]) => {\n        const propertyMatches = keywordMatchesMap.get(id);\n        if (!propertyMatches)\n            return false;\n        // Check if any property has all keywords\n        return Array.from(propertyMatches.values()).some((matches) => matches === keywordsCount);\n    });\n    // If we have full matches and threshold < 1, return full matches plus a percentage of partial matches\n    if (fullMatches.length > 0) {\n        const remainingResults = results.filter(([id]) => !fullMatches.some(([fid]) => fid === id));\n        const additionalResults = Math.ceil(remainingResults.length * threshold);\n        return [...fullMatches, ...remainingResults.slice(0, additionalResults)];\n    }\n    // If no full matches, return all results\n    return results;\n}\nfunction searchByWhereClause(index, tokenizer, filters, language) {\n    // Handle logical operators\n    if ('and' in filters && filters.and && Array.isArray(filters.and)) {\n        const andFilters = filters.and;\n        if (andFilters.length === 0) {\n            return new Set();\n        }\n        const results = andFilters.map((filter) => searchByWhereClause(index, tokenizer, filter, language));\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setIntersection)(...results);\n    }\n    if ('or' in filters && filters.or && Array.isArray(filters.or)) {\n        const orFilters = filters.or;\n        if (orFilters.length === 0) {\n            return new Set();\n        }\n        const results = orFilters.map((filter) => searchByWhereClause(index, tokenizer, filter, language));\n        // Use reduce to union all sets\n        return results.reduce((acc, set) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(acc, set), new Set());\n    }\n    if ('not' in filters && filters.not) {\n        const notFilter = filters.not;\n        // Get all document IDs from the internal document store\n        const allDocs = new Set();\n        // Get all document IDs from the internal document store\n        const docsStore = index.sharedInternalDocumentStore;\n        for (let i = 1; i <= docsStore.internalIdToId.length; i++) {\n            allDocs.add(i);\n        }\n        const notResult = searchByWhereClause(index, tokenizer, notFilter, language);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setDifference)(allDocs, notResult);\n    }\n    // Handle regular property filters (existing logic)\n    const filterKeys = Object.keys(filters);\n    const filtersMap = filterKeys.reduce((acc, key) => ({\n        [key]: new Set(),\n        ...acc\n    }), {});\n    for (const param of filterKeys) {\n        const operation = filters[param];\n        if (typeof index.indexes[param] === 'undefined') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('UNKNOWN_FILTER_PROPERTY', param);\n        }\n        const { node, type, isArray } = index.indexes[param];\n        if (type === 'Bool') {\n            const idx = node;\n            const filteredIDs = operation ? idx.true : idx.false;\n            filtersMap[param] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(filtersMap[param], filteredIDs);\n            continue;\n        }\n        if (type === 'BKD') {\n            let reqOperation;\n            if ('radius' in operation) {\n                reqOperation = 'radius';\n            }\n            else if ('polygon' in operation) {\n                reqOperation = 'polygon';\n            }\n            else {\n                throw new Error(`Invalid operation ${operation}`);\n            }\n            if (reqOperation === 'radius') {\n                const { value, coordinates, unit = 'm', inside = true, highPrecision = false } = operation[reqOperation];\n                const distanceInMeters = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.convertDistanceToMeters)(value, unit);\n                const ids = node.searchByRadius(coordinates, distanceInMeters, inside, undefined, highPrecision);\n                filtersMap[param] = addGeoResult(filtersMap[param], ids);\n            }\n            else {\n                const { coordinates, inside = true, highPrecision = false } = operation[reqOperation];\n                const ids = node.searchByPolygon(coordinates, inside, undefined, highPrecision);\n                filtersMap[param] = addGeoResult(filtersMap[param], ids);\n            }\n            continue;\n        }\n        if (type === 'Radix' && (typeof operation === 'string' || Array.isArray(operation))) {\n            for (const raw of [operation].flat()) {\n                const term = tokenizer.tokenize(raw, language, param);\n                for (const t of term) {\n                    const filteredIDsResults = node.find({ term: t, exact: true });\n                    filtersMap[param] = addFindResult(filtersMap[param], filteredIDsResults);\n                }\n            }\n            continue;\n        }\n        const operationKeys = Object.keys(operation);\n        if (operationKeys.length > 1) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_FILTER_OPERATION', operationKeys.length);\n        }\n        if (type === 'Flat') {\n            const results = new Set(isArray\n                ? node.filterArr(operation)\n                : node.filter(operation));\n            filtersMap[param] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(filtersMap[param], results);\n            continue;\n        }\n        if (type === 'AVL') {\n            const operationOpt = operationKeys[0];\n            const operationValue = operation[operationOpt];\n            let filteredIDs;\n            switch (operationOpt) {\n                case 'gt': {\n                    filteredIDs = node.greaterThan(operationValue, false);\n                    break;\n                }\n                case 'gte': {\n                    filteredIDs = node.greaterThan(operationValue, true);\n                    break;\n                }\n                case 'lt': {\n                    filteredIDs = node.lessThan(operationValue, false);\n                    break;\n                }\n                case 'lte': {\n                    filteredIDs = node.lessThan(operationValue, true);\n                    break;\n                }\n                case 'eq': {\n                    const ret = node.find(operationValue);\n                    filteredIDs = ret ?? new Set();\n                    break;\n                }\n                case 'between': {\n                    const [min, max] = operationValue;\n                    filteredIDs = node.rangeSearch(min, max);\n                    break;\n                }\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_FILTER_OPERATION', operationOpt);\n            }\n            filtersMap[param] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(filtersMap[param], filteredIDs);\n        }\n    }\n    // AND operation: calculate the intersection between all the IDs in filterMap\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setIntersection)(...Object.values(filtersMap));\n}\nfunction getSearchableProperties(index) {\n    return index.searchableProperties;\n}\nfunction getSearchablePropertiesWithTypes(index) {\n    return index.searchablePropertiesWithTypes;\n}\nfunction load(sharedInternalDocumentStore, raw) {\n    const { indexes: rawIndexes, vectorIndexes: rawVectorIndexes, searchableProperties, searchablePropertiesWithTypes, frequencies, tokenOccurrences, avgFieldLength, fieldLengths } = raw;\n    const indexes = {};\n    const vectorIndexes = {};\n    for (const prop of Object.keys(rawIndexes)) {\n        const { node, type, isArray } = rawIndexes[prop];\n        switch (type) {\n            case 'Radix':\n                indexes[prop] = {\n                    type: 'Radix',\n                    node: _trees_radix_js__WEBPACK_IMPORTED_MODULE_3__.RadixTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'Flat':\n                indexes[prop] = {\n                    type: 'Flat',\n                    node: _trees_flat_js__WEBPACK_IMPORTED_MODULE_2__.FlatTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'AVL':\n                indexes[prop] = {\n                    type: 'AVL',\n                    node: _trees_avl_js__WEBPACK_IMPORTED_MODULE_1__.AVLTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'BKD':\n                indexes[prop] = {\n                    type: 'BKD',\n                    node: _trees_bkd_js__WEBPACK_IMPORTED_MODULE_4__.BKDTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'Bool':\n                indexes[prop] = {\n                    type: 'Bool',\n                    node: _trees_bool_js__WEBPACK_IMPORTED_MODULE_5__.BoolNode.fromJSON(node),\n                    isArray\n                };\n                break;\n            default:\n                indexes[prop] = rawIndexes[prop];\n        }\n    }\n    for (const idx of Object.keys(rawVectorIndexes)) {\n        vectorIndexes[idx] = {\n            type: 'Vector',\n            isArray: false,\n            node: _trees_vector_js__WEBPACK_IMPORTED_MODULE_10__.VectorIndex.fromJSON(rawVectorIndexes[idx])\n        };\n    }\n    return {\n        sharedInternalDocumentStore,\n        indexes,\n        vectorIndexes,\n        searchableProperties,\n        searchablePropertiesWithTypes,\n        frequencies,\n        tokenOccurrences,\n        avgFieldLength,\n        fieldLengths\n    };\n}\nfunction save(index) {\n    const { indexes, vectorIndexes, searchableProperties, searchablePropertiesWithTypes, frequencies, tokenOccurrences, avgFieldLength, fieldLengths } = index;\n    const dumpVectorIndexes = {};\n    for (const idx of Object.keys(vectorIndexes)) {\n        dumpVectorIndexes[idx] = vectorIndexes[idx].node.toJSON();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const savedIndexes = {};\n    for (const name of Object.keys(indexes)) {\n        const { type, node, isArray } = indexes[name];\n        if (type === 'Flat' || type === 'Radix' || type === 'AVL' || type === 'BKD' || type === 'Bool') {\n            savedIndexes[name] = {\n                type,\n                node: node.toJSON(),\n                isArray\n            };\n        }\n        else {\n            savedIndexes[name] = indexes[name];\n            savedIndexes[name].node = savedIndexes[name].node.toJSON();\n        }\n    }\n    return {\n        indexes: savedIndexes,\n        vectorIndexes: dumpVectorIndexes,\n        searchableProperties,\n        searchablePropertiesWithTypes,\n        frequencies,\n        tokenOccurrences,\n        avgFieldLength,\n        fieldLengths\n    };\n}\nfunction createIndex() {\n    return {\n        create,\n        insert,\n        remove,\n        insertDocumentScoreParameters,\n        insertTokenScoreParameters,\n        removeDocumentScoreParameters,\n        removeTokenScoreParameters,\n        calculateResultScores,\n        search,\n        searchByWhereClause,\n        getSearchableProperties,\n        getSearchablePropertiesWithTypes,\n        load,\n        save\n    };\n}\nfunction addGeoResult(set, ids) {\n    if (!set) {\n        set = new Set();\n    }\n    const idsLength = ids.length;\n    for (let i = 0; i < idsLength; i++) {\n        const entry = ids[i].docIDs;\n        const idsLength = entry.length;\n        for (let j = 0; j < idsLength; j++) {\n            set.add(entry[j]);\n        }\n    }\n    return set;\n}\nfunction addFindResult(set, filteredIDsResults) {\n    if (!set) {\n        set = new Set();\n    }\n    const keys = Object.keys(filteredIDsResults);\n    const keysLength = keys.length;\n    for (let i = 0; i < keysLength; i++) {\n        const ids = filteredIDsResults[keys[i]];\n        const idsLength = ids.length;\n        for (let j = 0; j < idsLength; j++) {\n            set.add(ids[j]);\n        }\n    }\n    return set;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createInternalDocumentIDStore: () => (/* binding */ createInternalDocumentIDStore),\n/* harmony export */   getDocumentIdFromInternalId: () => (/* binding */ getDocumentIdFromInternalId),\n/* harmony export */   getInternalDocumentId: () => (/* binding */ getInternalDocumentId),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   save: () => (/* binding */ save)\n/* harmony export */ });\nfunction createInternalDocumentIDStore() {\n    return {\n        idToInternalId: new Map(),\n        internalIdToId: [],\n        save,\n        load\n    };\n}\nfunction save(store) {\n    return {\n        internalIdToId: store.internalIdToId\n    };\n}\nfunction load(orama, raw) {\n    const { internalIdToId } = raw;\n    orama.internalDocumentIDStore.idToInternalId.clear();\n    orama.internalDocumentIDStore.internalIdToId = [];\n    const internalIdToIdLength = internalIdToId.length;\n    for (let i = 0; i < internalIdToIdLength; i++) {\n        const internalIdItem = internalIdToId[i];\n        orama.internalDocumentIDStore.idToInternalId.set(internalIdItem, i + 1);\n        orama.internalDocumentIDStore.internalIdToId.push(internalIdItem);\n    }\n}\nfunction getInternalDocumentId(store, id) {\n    if (typeof id === 'string') {\n        const internalId = store.idToInternalId.get(id);\n        if (internalId) {\n            return internalId;\n        }\n        const currentId = store.idToInternalId.size + 1;\n        store.idToInternalId.set(id, currentId);\n        store.internalIdToId.push(id);\n        return currentId;\n    }\n    if (id > store.internalIdToId.length) {\n        return getInternalDocumentId(store, id.toString());\n    }\n    return id;\n}\nfunction getDocumentIdFromInternalId(store, internalId) {\n    if (store.internalIdToId.length < internalId) {\n        throw new Error(`Invalid internalId ${internalId}`);\n    }\n    return store.internalIdToId[internalId - 1];\n}\n//# sourceMappingURL=internal-document-id-store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvaW50ZXJuYWwtZG9jdW1lbnQtaWQtc3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxpQkFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBCQUEwQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsOENBQThDLFdBQVc7QUFDekQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2VzbS9jb21wb25lbnRzL2ludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVJbnRlcm5hbERvY3VtZW50SURTdG9yZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpZFRvSW50ZXJuYWxJZDogbmV3IE1hcCgpLFxuICAgICAgICBpbnRlcm5hbElkVG9JZDogW10sXG4gICAgICAgIHNhdmUsXG4gICAgICAgIGxvYWRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNhdmUoc3RvcmUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpbnRlcm5hbElkVG9JZDogc3RvcmUuaW50ZXJuYWxJZFRvSWRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxvYWQob3JhbWEsIHJhdykge1xuICAgIGNvbnN0IHsgaW50ZXJuYWxJZFRvSWQgfSA9IHJhdztcbiAgICBvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZS5pZFRvSW50ZXJuYWxJZC5jbGVhcigpO1xuICAgIG9yYW1hLmludGVybmFsRG9jdW1lbnRJRFN0b3JlLmludGVybmFsSWRUb0lkID0gW107XG4gICAgY29uc3QgaW50ZXJuYWxJZFRvSWRMZW5ndGggPSBpbnRlcm5hbElkVG9JZC5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnRlcm5hbElkVG9JZExlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGludGVybmFsSWRJdGVtID0gaW50ZXJuYWxJZFRvSWRbaV07XG4gICAgICAgIG9yYW1hLmludGVybmFsRG9jdW1lbnRJRFN0b3JlLmlkVG9JbnRlcm5hbElkLnNldChpbnRlcm5hbElkSXRlbSwgaSArIDEpO1xuICAgICAgICBvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZS5pbnRlcm5hbElkVG9JZC5wdXNoKGludGVybmFsSWRJdGVtKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0SW50ZXJuYWxEb2N1bWVudElkKHN0b3JlLCBpZCkge1xuICAgIGlmICh0eXBlb2YgaWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IGludGVybmFsSWQgPSBzdG9yZS5pZFRvSW50ZXJuYWxJZC5nZXQoaWQpO1xuICAgICAgICBpZiAoaW50ZXJuYWxJZCkge1xuICAgICAgICAgICAgcmV0dXJuIGludGVybmFsSWQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY3VycmVudElkID0gc3RvcmUuaWRUb0ludGVybmFsSWQuc2l6ZSArIDE7XG4gICAgICAgIHN0b3JlLmlkVG9JbnRlcm5hbElkLnNldChpZCwgY3VycmVudElkKTtcbiAgICAgICAgc3RvcmUuaW50ZXJuYWxJZFRvSWQucHVzaChpZCk7XG4gICAgICAgIHJldHVybiBjdXJyZW50SWQ7XG4gICAgfVxuICAgIGlmIChpZCA+IHN0b3JlLmludGVybmFsSWRUb0lkLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZ2V0SW50ZXJuYWxEb2N1bWVudElkKHN0b3JlLCBpZC50b1N0cmluZygpKTtcbiAgICB9XG4gICAgcmV0dXJuIGlkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERvY3VtZW50SWRGcm9tSW50ZXJuYWxJZChzdG9yZSwgaW50ZXJuYWxJZCkge1xuICAgIGlmIChzdG9yZS5pbnRlcm5hbElkVG9JZC5sZW5ndGggPCBpbnRlcm5hbElkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBpbnRlcm5hbElkICR7aW50ZXJuYWxJZH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0b3JlLmludGVybmFsSWRUb0lkW2ludGVybmFsSWQgLSAxXTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/levenshtein.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/levenshtein.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boundedLevenshtein: () => (/* binding */ boundedLevenshtein),\n/* harmony export */   levenshtein: () => (/* binding */ levenshtein),\n/* harmony export */   syncBoundedLevenshtein: () => (/* binding */ syncBoundedLevenshtein)\n/* harmony export */ });\n/**\n * Inspired by:\n * https://github.com/Yomguithereal/talisman/blob/86ae55cbd040ff021d05e282e0e6c71f2dde21f8/src/metrics/levenshtein.js#L218-L340\n */\nfunction _boundedLevenshtein(term, word, tolerance) {\n    // Handle base cases\n    if (tolerance < 0)\n        return -1;\n    if (term === word)\n        return 0;\n    const m = term.length;\n    const n = word.length;\n    // Special case for empty strings\n    if (m === 0)\n        return n <= tolerance ? n : -1;\n    if (n === 0)\n        return m <= tolerance ? m : -1;\n    // term = term.toLowerCase()\n    // word = word.toLowerCase()\n    const diff = Math.abs(m - n);\n    // Special case for prefixes\n    // If the searching word starts with the indexed word, return early.\n    if (term.startsWith(word)) {\n        // We just check if the remaining characters are within the tolerance\n        return diff <= tolerance ? diff : -1;\n    }\n    // If the indexed word starts with the searching word, return early.\n    if (word.startsWith(term)) {\n        // any prefixed word is within the tolerance\n        return 0;\n    }\n    // If the length difference is greater than the tolerance, return early\n    if (diff > tolerance)\n        return -1;\n    // Initialize the matrix\n    const matrix = [];\n    for (let i = 0; i <= m; i++) {\n        matrix[i] = [i];\n        for (let j = 1; j <= n; j++) {\n            matrix[i][j] = i === 0 ? j : 0;\n        }\n    }\n    // Fill the matrix\n    for (let i = 1; i <= m; i++) {\n        let rowMin = Infinity;\n        for (let j = 1; j <= n; j++) {\n            if (term[i - 1] === word[j - 1]) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                matrix[i][j] = Math.min(matrix[i - 1][j] + 1, // deletion\n                matrix[i][j - 1] + 1, // insertion\n                matrix[i - 1][j - 1] + 1 // substitution\n                );\n            }\n            rowMin = Math.min(rowMin, matrix[i][j]);\n        }\n        // Early termination if all values in this row exceed tolerance\n        if (rowMin > tolerance) {\n            return -1;\n        }\n    }\n    return matrix[m][n] <= tolerance ? matrix[m][n] : -1;\n}\n/**\n * Computes the Levenshtein distance between two strings (a, b), returning early with -1 if the distance\n * is greater than the given tolerance.\n * It assumes that:\n * - tolerance >= ||a| - |b|| >= 0\n */\nfunction boundedLevenshtein(term, w, tolerance) {\n    const distance = _boundedLevenshtein(term, w, tolerance);\n    return {\n        distance,\n        isBounded: distance >= 0\n    };\n}\n// This is only used internally, keep in sync with the previous one\nfunction syncBoundedLevenshtein(term, w, tolerance) {\n    const distance = _boundedLevenshtein(term, w, tolerance);\n    return {\n        distance,\n        isBounded: distance >= 0\n    };\n}\nfunction levenshtein(a, b) {\n    /* c8 ignore next 3 */\n    if (!a.length) {\n        return b.length;\n    }\n    /* c8 ignore next 3 */\n    if (!b.length) {\n        return a.length;\n    }\n    const swap = a;\n    if (a.length > b.length) {\n        a = b;\n        b = swap;\n    }\n    const row = Array.from({ length: a.length + 1 }, (_, i) => i);\n    let val = 0;\n    for (let i = 1; i <= b.length; i++) {\n        let prev = i;\n        for (let j = 1; j <= a.length; j++) {\n            if (b[i - 1] === a[j - 1]) {\n                val = row[j - 1];\n            }\n            else {\n                val = Math.min(row[j - 1] + 1, Math.min(prev + 1, row[j] + 1));\n            }\n            row[j - 1] = prev;\n            prev = val;\n        }\n        row[a.length] = prev;\n    }\n    return row[a.length];\n}\n//# sourceMappingURL=levenshtein.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvbGV2ZW5zaHRlaW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzQkFBc0I7QUFDbkQ7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQztBQUNBLHdCQUF3QixlQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2VzbS9jb21wb25lbnRzL2xldmVuc2h0ZWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSW5zcGlyZWQgYnk6XG4gKiBodHRwczovL2dpdGh1Yi5jb20vWW9tZ3VpdGhlcmVhbC90YWxpc21hbi9ibG9iLzg2YWU1NWNiZDA0MGZmMDIxZDA1ZTI4MmUwZTZjNzFmMmRkZTIxZjgvc3JjL21ldHJpY3MvbGV2ZW5zaHRlaW4uanMjTDIxOC1MMzQwXG4gKi9cbmZ1bmN0aW9uIF9ib3VuZGVkTGV2ZW5zaHRlaW4odGVybSwgd29yZCwgdG9sZXJhbmNlKSB7XG4gICAgLy8gSGFuZGxlIGJhc2UgY2FzZXNcbiAgICBpZiAodG9sZXJhbmNlIDwgMClcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIGlmICh0ZXJtID09PSB3b3JkKVxuICAgICAgICByZXR1cm4gMDtcbiAgICBjb25zdCBtID0gdGVybS5sZW5ndGg7XG4gICAgY29uc3QgbiA9IHdvcmQubGVuZ3RoO1xuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgZW1wdHkgc3RyaW5nc1xuICAgIGlmIChtID09PSAwKVxuICAgICAgICByZXR1cm4gbiA8PSB0b2xlcmFuY2UgPyBuIDogLTE7XG4gICAgaWYgKG4gPT09IDApXG4gICAgICAgIHJldHVybiBtIDw9IHRvbGVyYW5jZSA/IG0gOiAtMTtcbiAgICAvLyB0ZXJtID0gdGVybS50b0xvd2VyQ2FzZSgpXG4gICAgLy8gd29yZCA9IHdvcmQudG9Mb3dlckNhc2UoKVxuICAgIGNvbnN0IGRpZmYgPSBNYXRoLmFicyhtIC0gbik7XG4gICAgLy8gU3BlY2lhbCBjYXNlIGZvciBwcmVmaXhlc1xuICAgIC8vIElmIHRoZSBzZWFyY2hpbmcgd29yZCBzdGFydHMgd2l0aCB0aGUgaW5kZXhlZCB3b3JkLCByZXR1cm4gZWFybHkuXG4gICAgaWYgKHRlcm0uc3RhcnRzV2l0aCh3b3JkKSkge1xuICAgICAgICAvLyBXZSBqdXN0IGNoZWNrIGlmIHRoZSByZW1haW5pbmcgY2hhcmFjdGVycyBhcmUgd2l0aGluIHRoZSB0b2xlcmFuY2VcbiAgICAgICAgcmV0dXJuIGRpZmYgPD0gdG9sZXJhbmNlID8gZGlmZiA6IC0xO1xuICAgIH1cbiAgICAvLyBJZiB0aGUgaW5kZXhlZCB3b3JkIHN0YXJ0cyB3aXRoIHRoZSBzZWFyY2hpbmcgd29yZCwgcmV0dXJuIGVhcmx5LlxuICAgIGlmICh3b3JkLnN0YXJ0c1dpdGgodGVybSkpIHtcbiAgICAgICAgLy8gYW55IHByZWZpeGVkIHdvcmQgaXMgd2l0aGluIHRoZSB0b2xlcmFuY2VcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfVxuICAgIC8vIElmIHRoZSBsZW5ndGggZGlmZmVyZW5jZSBpcyBncmVhdGVyIHRoYW4gdGhlIHRvbGVyYW5jZSwgcmV0dXJuIGVhcmx5XG4gICAgaWYgKGRpZmYgPiB0b2xlcmFuY2UpXG4gICAgICAgIHJldHVybiAtMTtcbiAgICAvLyBJbml0aWFsaXplIHRoZSBtYXRyaXhcbiAgICBjb25zdCBtYXRyaXggPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBtOyBpKyspIHtcbiAgICAgICAgbWF0cml4W2ldID0gW2ldO1xuICAgICAgICBmb3IgKGxldCBqID0gMTsgaiA8PSBuOyBqKyspIHtcbiAgICAgICAgICAgIG1hdHJpeFtpXVtqXSA9IGkgPT09IDAgPyBqIDogMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBGaWxsIHRoZSBtYXRyaXhcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBtOyBpKyspIHtcbiAgICAgICAgbGV0IHJvd01pbiA9IEluZmluaXR5O1xuICAgICAgICBmb3IgKGxldCBqID0gMTsgaiA8PSBuOyBqKyspIHtcbiAgICAgICAgICAgIGlmICh0ZXJtW2kgLSAxXSA9PT0gd29yZFtqIC0gMV0pIHtcbiAgICAgICAgICAgICAgICBtYXRyaXhbaV1bal0gPSBtYXRyaXhbaSAtIDFdW2ogLSAxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG1hdHJpeFtpXVtqXSA9IE1hdGgubWluKG1hdHJpeFtpIC0gMV1bal0gKyAxLCAvLyBkZWxldGlvblxuICAgICAgICAgICAgICAgIG1hdHJpeFtpXVtqIC0gMV0gKyAxLCAvLyBpbnNlcnRpb25cbiAgICAgICAgICAgICAgICBtYXRyaXhbaSAtIDFdW2ogLSAxXSArIDEgLy8gc3Vic3RpdHV0aW9uXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJvd01pbiA9IE1hdGgubWluKHJvd01pbiwgbWF0cml4W2ldW2pdKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBFYXJseSB0ZXJtaW5hdGlvbiBpZiBhbGwgdmFsdWVzIGluIHRoaXMgcm93IGV4Y2VlZCB0b2xlcmFuY2VcbiAgICAgICAgaWYgKHJvd01pbiA+IHRvbGVyYW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtYXRyaXhbbV1bbl0gPD0gdG9sZXJhbmNlID8gbWF0cml4W21dW25dIDogLTE7XG59XG4vKipcbiAqIENvbXB1dGVzIHRoZSBMZXZlbnNodGVpbiBkaXN0YW5jZSBiZXR3ZWVuIHR3byBzdHJpbmdzIChhLCBiKSwgcmV0dXJuaW5nIGVhcmx5IHdpdGggLTEgaWYgdGhlIGRpc3RhbmNlXG4gKiBpcyBncmVhdGVyIHRoYW4gdGhlIGdpdmVuIHRvbGVyYW5jZS5cbiAqIEl0IGFzc3VtZXMgdGhhdDpcbiAqIC0gdG9sZXJhbmNlID49IHx8YXwgLSB8Ynx8ID49IDBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJvdW5kZWRMZXZlbnNodGVpbih0ZXJtLCB3LCB0b2xlcmFuY2UpIHtcbiAgICBjb25zdCBkaXN0YW5jZSA9IF9ib3VuZGVkTGV2ZW5zaHRlaW4odGVybSwgdywgdG9sZXJhbmNlKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBkaXN0YW5jZSxcbiAgICAgICAgaXNCb3VuZGVkOiBkaXN0YW5jZSA+PSAwXG4gICAgfTtcbn1cbi8vIFRoaXMgaXMgb25seSB1c2VkIGludGVybmFsbHksIGtlZXAgaW4gc3luYyB3aXRoIHRoZSBwcmV2aW91cyBvbmVcbmV4cG9ydCBmdW5jdGlvbiBzeW5jQm91bmRlZExldmVuc2h0ZWluKHRlcm0sIHcsIHRvbGVyYW5jZSkge1xuICAgIGNvbnN0IGRpc3RhbmNlID0gX2JvdW5kZWRMZXZlbnNodGVpbih0ZXJtLCB3LCB0b2xlcmFuY2UpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGRpc3RhbmNlLFxuICAgICAgICBpc0JvdW5kZWQ6IGRpc3RhbmNlID49IDBcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxldmVuc2h0ZWluKGEsIGIpIHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gICAgaWYgKCFhLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gYi5sZW5ndGg7XG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICBpZiAoIWIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBhLmxlbmd0aDtcbiAgICB9XG4gICAgY29uc3Qgc3dhcCA9IGE7XG4gICAgaWYgKGEubGVuZ3RoID4gYi5sZW5ndGgpIHtcbiAgICAgICAgYSA9IGI7XG4gICAgICAgIGIgPSBzd2FwO1xuICAgIH1cbiAgICBjb25zdCByb3cgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBhLmxlbmd0aCArIDEgfSwgKF8sIGkpID0+IGkpO1xuICAgIGxldCB2YWwgPSAwO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IGIubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IHByZXYgPSBpO1xuICAgICAgICBmb3IgKGxldCBqID0gMTsgaiA8PSBhLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICBpZiAoYltpIC0gMV0gPT09IGFbaiAtIDFdKSB7XG4gICAgICAgICAgICAgICAgdmFsID0gcm93W2ogLSAxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHZhbCA9IE1hdGgubWluKHJvd1tqIC0gMV0gKyAxLCBNYXRoLm1pbihwcmV2ICsgMSwgcm93W2pdICsgMSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcm93W2ogLSAxXSA9IHByZXY7XG4gICAgICAgICAgICBwcmV2ID0gdmFsO1xuICAgICAgICB9XG4gICAgICAgIHJvd1thLmxlbmd0aF0gPSBwcmV2O1xuICAgIH1cbiAgICByZXR1cm4gcm93W2EubGVuZ3RoXTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxldmVuc2h0ZWluLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/levenshtein.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/plugins.js":
/*!******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/plugins.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVAILABLE_PLUGIN_HOOKS: () => (/* binding */ AVAILABLE_PLUGIN_HOOKS),\n/* harmony export */   getAllPluginsByHook: () => (/* binding */ getAllPluginsByHook)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n\nconst AVAILABLE_PLUGIN_HOOKS = [\n    'beforeInsert',\n    'afterInsert',\n    'beforeRemove',\n    'afterRemove',\n    'beforeUpdate',\n    'afterUpdate',\n    'beforeUpsert',\n    'afterUpsert',\n    'beforeSearch',\n    'afterSearch',\n    'beforeInsertMultiple',\n    'afterInsertMultiple',\n    'beforeRemoveMultiple',\n    'afterRemoveMultiple',\n    'beforeUpdateMultiple',\n    'afterUpdateMultiple',\n    'beforeUpsertMultiple',\n    'afterUpsertMultiple',\n    'beforeLoad',\n    'afterLoad',\n    'afterCreate'\n];\nfunction getAllPluginsByHook(orama, hook) {\n    const pluginsToRun = [];\n    const pluginsLength = orama.plugins?.length;\n    if (!pluginsLength) {\n        return pluginsToRun;\n    }\n    for (let i = 0; i < pluginsLength; i++) {\n        try {\n            const plugin = orama.plugins[i];\n            if (typeof plugin[hook] === 'function') {\n                pluginsToRun.push(plugin[hook]);\n            }\n        }\n        catch (error) {\n            console.error('Caught error in getAllPluginsByHook:', error);\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_CRASHED');\n        }\n    }\n    return pluginsToRun;\n}\n//# sourceMappingURL=plugins.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvcGx1Z2lucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDcEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vY29tcG9uZW50cy9wbHVnaW5zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmV4cG9ydCBjb25zdCBBVkFJTEFCTEVfUExVR0lOX0hPT0tTID0gW1xuICAgICdiZWZvcmVJbnNlcnQnLFxuICAgICdhZnRlckluc2VydCcsXG4gICAgJ2JlZm9yZVJlbW92ZScsXG4gICAgJ2FmdGVyUmVtb3ZlJyxcbiAgICAnYmVmb3JlVXBkYXRlJyxcbiAgICAnYWZ0ZXJVcGRhdGUnLFxuICAgICdiZWZvcmVVcHNlcnQnLFxuICAgICdhZnRlclVwc2VydCcsXG4gICAgJ2JlZm9yZVNlYXJjaCcsXG4gICAgJ2FmdGVyU2VhcmNoJyxcbiAgICAnYmVmb3JlSW5zZXJ0TXVsdGlwbGUnLFxuICAgICdhZnRlckluc2VydE11bHRpcGxlJyxcbiAgICAnYmVmb3JlUmVtb3ZlTXVsdGlwbGUnLFxuICAgICdhZnRlclJlbW92ZU11bHRpcGxlJyxcbiAgICAnYmVmb3JlVXBkYXRlTXVsdGlwbGUnLFxuICAgICdhZnRlclVwZGF0ZU11bHRpcGxlJyxcbiAgICAnYmVmb3JlVXBzZXJ0TXVsdGlwbGUnLFxuICAgICdhZnRlclVwc2VydE11bHRpcGxlJyxcbiAgICAnYmVmb3JlTG9hZCcsXG4gICAgJ2FmdGVyTG9hZCcsXG4gICAgJ2FmdGVyQ3JlYXRlJ1xuXTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRBbGxQbHVnaW5zQnlIb29rKG9yYW1hLCBob29rKSB7XG4gICAgY29uc3QgcGx1Z2luc1RvUnVuID0gW107XG4gICAgY29uc3QgcGx1Z2luc0xlbmd0aCA9IG9yYW1hLnBsdWdpbnM/Lmxlbmd0aDtcbiAgICBpZiAoIXBsdWdpbnNMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHBsdWdpbnNUb1J1bjtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwbHVnaW5zTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHBsdWdpbiA9IG9yYW1hLnBsdWdpbnNbaV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIHBsdWdpbltob29rXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHBsdWdpbnNUb1J1bi5wdXNoKHBsdWdpbltob29rXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdDYXVnaHQgZXJyb3IgaW4gZ2V0QWxsUGx1Z2luc0J5SG9vazonLCBlcnJvcik7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignUExVR0lOX0NSQVNIRUQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGx1Z2luc1RvUnVuO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGx1Z2lucy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/plugins.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/sorter.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/sorter.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSorter: () => (/* binding */ createSorter),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   save: () => (/* binding */ save)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/defaults.js\");\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tokenizer/languages.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/languages.js\");\n\n\n\n\n\nfunction innerCreate(orama, sharedInternalDocumentStore, schema, sortableDeniedProperties, prefix) {\n    const sorter = {\n        language: orama.tokenizer.language,\n        sharedInternalDocumentStore,\n        enabled: true,\n        isSorted: true,\n        sortableProperties: [],\n        sortablePropertiesWithTypes: {},\n        sorts: {}\n    };\n    for (const [prop, type] of Object.entries(schema)) {\n        const path = `${prefix}${prefix ? '.' : ''}${prop}`;\n        if (sortableDeniedProperties.includes(path)) {\n            continue;\n        }\n        if (typeof type === 'object' && !Array.isArray(type)) {\n            // Nested\n            const ret = innerCreate(orama, sharedInternalDocumentStore, type, sortableDeniedProperties, path);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.safeArrayPush)(sorter.sortableProperties, ret.sortableProperties);\n            sorter.sorts = {\n                ...sorter.sorts,\n                ...ret.sorts\n            };\n            sorter.sortablePropertiesWithTypes = {\n                ...sorter.sortablePropertiesWithTypes,\n                ...ret.sortablePropertiesWithTypes\n            };\n            continue;\n        }\n        if (!(0,_defaults_js__WEBPACK_IMPORTED_MODULE_1__.isVectorType)(type)) {\n            switch (type) {\n                case 'boolean':\n                case 'number':\n                case 'string':\n                    sorter.sortableProperties.push(path);\n                    sorter.sortablePropertiesWithTypes[path] = type;\n                    sorter.sorts[path] = {\n                        docs: new Map(),\n                        orderedDocsToRemove: new Map(),\n                        orderedDocs: [],\n                        type: type\n                    };\n                    break;\n                case 'geopoint':\n                case 'enum':\n                    // We don't allow to sort by enums or geopoints\n                    continue;\n                case 'enum[]':\n                case 'boolean[]':\n                case 'number[]':\n                case 'string[]':\n                    // We don't allow to sort by arrays\n                    continue;\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_SORT_SCHEMA_TYPE', Array.isArray(type) ? 'array' : type, path);\n            }\n        }\n    }\n    return sorter;\n}\nfunction create(orama, sharedInternalDocumentStore, schema, config) {\n    const isSortEnabled = config?.enabled !== false;\n    if (!isSortEnabled) {\n        return {\n            disabled: true\n        };\n    }\n    return innerCreate(orama, sharedInternalDocumentStore, schema, (config || {}).unsortableProperties || [], '');\n}\nfunction insert(sorter, prop, id, value) {\n    if (!sorter.enabled) {\n        return;\n    }\n    sorter.isSorted = false;\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, id);\n    const s = sorter.sorts[prop];\n    // This happen during a document updating\n    // Because we re-use the same internalId\n    // We need to clean-up the data structure before re-inserting\n    // to avoid duplicates in the orderedDocs array\n    // See: https://github.com/oramasearch/orama/issues/629\n    if (s.orderedDocsToRemove.has(internalId)) {\n        ensureOrderedDocsAreDeletedByProperty(sorter, prop);\n    }\n    s.docs.set(internalId, s.orderedDocs.length);\n    s.orderedDocs.push([internalId, value]);\n}\nfunction ensureIsSorted(sorter) {\n    if (sorter.isSorted || !sorter.enabled) {\n        return;\n    }\n    const properties = Object.keys(sorter.sorts);\n    for (const prop of properties) {\n        ensurePropertyIsSorted(sorter, prop);\n    }\n    sorter.isSorted = true;\n}\nfunction stringSort(language, value, d) {\n    return value[1].localeCompare(d[1], (0,_tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_4__.getLocale)(language));\n}\nfunction numberSort(value, d) {\n    return value[1] - d[1];\n}\nfunction booleanSort(value, d) {\n    return d[1] ? -1 : 1;\n}\nfunction ensurePropertyIsSorted(sorter, prop) {\n    const s = sorter.sorts[prop];\n    let predicate;\n    switch (s.type) {\n        case 'string':\n            predicate = stringSort.bind(null, sorter.language);\n            break;\n        case 'number':\n            predicate = numberSort.bind(null);\n            break;\n        case 'boolean':\n            predicate = booleanSort.bind(null);\n            break;\n    }\n    s.orderedDocs.sort(predicate);\n    // Increment position for the greather documents\n    const orderedDocsLength = s.orderedDocs.length;\n    for (let i = 0; i < orderedDocsLength; i++) {\n        const docId = s.orderedDocs[i][0];\n        s.docs.set(docId, i);\n    }\n}\nfunction ensureOrderedDocsAreDeleted(sorter) {\n    const properties = Object.keys(sorter.sorts);\n    for (const prop of properties) {\n        ensureOrderedDocsAreDeletedByProperty(sorter, prop);\n    }\n}\nfunction ensureOrderedDocsAreDeletedByProperty(sorter, prop) {\n    const s = sorter.sorts[prop];\n    if (!s.orderedDocsToRemove.size)\n        return;\n    s.orderedDocs = s.orderedDocs.filter((doc) => !s.orderedDocsToRemove.has(doc[0]));\n    s.orderedDocsToRemove.clear();\n}\nfunction remove(sorter, prop, id) {\n    if (!sorter.enabled) {\n        return;\n    }\n    const s = sorter.sorts[prop];\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, id);\n    const index = s.docs.get(internalId);\n    if (!index)\n        return;\n    s.docs.delete(internalId);\n    s.orderedDocsToRemove.set(internalId, true);\n}\nfunction sortBy(sorter, docIds, by) {\n    if (!sorter.enabled) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('SORT_DISABLED');\n    }\n    const property = by.property;\n    const isDesc = by.order === 'DESC';\n    const s = sorter.sorts[property];\n    if (!s) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('UNABLE_TO_SORT_ON_UNKNOWN_FIELD', property, sorter.sortableProperties.join(', '));\n    }\n    ensureOrderedDocsAreDeletedByProperty(sorter, property);\n    ensureIsSorted(sorter);\n    docIds.sort((a, b) => {\n        // This sort algorithm works leveraging on\n        // that s.docs is a map of docId -> position\n        // If a document is not indexed, it will be not present in the map\n        const indexOfA = s.docs.get((0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, a[0]));\n        const indexOfB = s.docs.get((0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, b[0]));\n        const isAIndexed = typeof indexOfA !== 'undefined';\n        const isBIndexed = typeof indexOfB !== 'undefined';\n        if (!isAIndexed && !isBIndexed) {\n            return 0;\n        }\n        // unindexed documents are always at the end\n        if (!isAIndexed) {\n            return 1;\n        }\n        if (!isBIndexed) {\n            return -1;\n        }\n        return isDesc ? indexOfB - indexOfA : indexOfA - indexOfB;\n    });\n    return docIds;\n}\nfunction getSortableProperties(sorter) {\n    if (!sorter.enabled) {\n        return [];\n    }\n    return sorter.sortableProperties;\n}\nfunction getSortablePropertiesWithTypes(sorter) {\n    if (!sorter.enabled) {\n        return {};\n    }\n    return sorter.sortablePropertiesWithTypes;\n}\nfunction load(sharedInternalDocumentStore, raw) {\n    const rawDocument = raw;\n    if (!rawDocument.enabled) {\n        return {\n            enabled: false\n        };\n    }\n    const sorts = Object.keys(rawDocument.sorts).reduce((acc, prop) => {\n        const { docs, orderedDocs, type } = rawDocument.sorts[prop];\n        acc[prop] = {\n            docs: new Map(Object.entries(docs).map(([k, v]) => [+k, v])),\n            orderedDocsToRemove: new Map(),\n            orderedDocs,\n            type\n        };\n        return acc;\n    }, {});\n    return {\n        sharedInternalDocumentStore,\n        language: rawDocument.language,\n        sortableProperties: rawDocument.sortableProperties,\n        sortablePropertiesWithTypes: rawDocument.sortablePropertiesWithTypes,\n        sorts,\n        enabled: true,\n        isSorted: rawDocument.isSorted\n    };\n}\nfunction save(sorter) {\n    if (!sorter.enabled) {\n        return {\n            enabled: false\n        };\n    }\n    ensureOrderedDocsAreDeleted(sorter);\n    ensureIsSorted(sorter);\n    const sorts = Object.keys(sorter.sorts).reduce((acc, prop) => {\n        const { docs, orderedDocs, type } = sorter.sorts[prop];\n        acc[prop] = {\n            docs: Object.fromEntries(docs.entries()),\n            orderedDocs,\n            type\n        };\n        return acc;\n    }, {});\n    return {\n        language: sorter.language,\n        sortableProperties: sorter.sortableProperties,\n        sortablePropertiesWithTypes: sorter.sortablePropertiesWithTypes,\n        sorts,\n        enabled: sorter.enabled,\n        isSorted: sorter.isSorted\n    };\n}\nfunction createSorter() {\n    return {\n        create,\n        insert,\n        remove,\n        save,\n        load,\n        sortBy,\n        getSortableProperties,\n        getSortablePropertiesWithTypes\n    };\n}\n//# sourceMappingURL=sorter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/sorter.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/diacritics.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/tokenizer/diacritics.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   replaceDiacritics: () => (/* binding */ replaceDiacritics)\n/* harmony export */ });\nconst DIACRITICS_CHARCODE_START = 192;\nconst DIACRITICS_CHARCODE_END = 383;\nconst CHARCODE_REPLACE_MAPPING = [\n    65,\n    65,\n    65,\n    65,\n    65,\n    65,\n    65,\n    67,\n    69,\n    69,\n    69,\n    69,\n    73,\n    73,\n    73,\n    73,\n    69,\n    78,\n    79,\n    79,\n    79,\n    79,\n    79,\n    null,\n    79,\n    85,\n    85,\n    85,\n    85,\n    89,\n    80,\n    115,\n    97,\n    97,\n    97,\n    97,\n    97,\n    97,\n    97,\n    99,\n    101,\n    101,\n    101,\n    101,\n    105,\n    105,\n    105,\n    105,\n    101,\n    110,\n    111,\n    111,\n    111,\n    111,\n    111,\n    null,\n    111,\n    117,\n    117,\n    117,\n    117,\n    121,\n    112,\n    121,\n    65,\n    97,\n    65,\n    97,\n    65,\n    97,\n    67,\n    99,\n    67,\n    99,\n    67,\n    99,\n    67,\n    99,\n    68,\n    100,\n    68,\n    100,\n    69,\n    101,\n    69,\n    101,\n    69,\n    101,\n    69,\n    101,\n    69,\n    101,\n    71,\n    103,\n    71,\n    103,\n    71,\n    103,\n    71,\n    103,\n    72,\n    104,\n    72,\n    104,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    74,\n    106,\n    75,\n    107,\n    107,\n    76,\n    108,\n    76,\n    108,\n    76,\n    108,\n    76,\n    108,\n    76,\n    108,\n    78,\n    110,\n    78,\n    110,\n    78,\n    110,\n    110,\n    78,\n    110,\n    79,\n    111,\n    79,\n    111,\n    79,\n    111,\n    79,\n    111,\n    82,\n    114,\n    82,\n    114,\n    82,\n    114,\n    83,\n    115,\n    83,\n    115,\n    83,\n    115,\n    83,\n    115,\n    84,\n    116,\n    84,\n    116,\n    84,\n    116,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    87,\n    119,\n    89,\n    121,\n    89,\n    90,\n    122,\n    90,\n    122,\n    90,\n    122,\n    115\n];\nfunction replaceChar(charCode) {\n    if (charCode < DIACRITICS_CHARCODE_START || charCode > DIACRITICS_CHARCODE_END)\n        return charCode;\n    /* c8 ignore next  */\n    return CHARCODE_REPLACE_MAPPING[charCode - DIACRITICS_CHARCODE_START] || charCode;\n}\nfunction replaceDiacritics(str) {\n    const stringCharCode = [];\n    for (let idx = 0; idx < str.length; idx++) {\n        stringCharCode[idx] = replaceChar(str.charCodeAt(idx));\n    }\n    return String.fromCharCode(...stringCharCode);\n}\n//# sourceMappingURL=diacritics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvdG9rZW5pemVyL2RpYWNyaXRpY3MuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvdG9rZW5pemVyL2RpYWNyaXRpY3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRElBQ1JJVElDU19DSEFSQ09ERV9TVEFSVCA9IDE5MjtcbmNvbnN0IERJQUNSSVRJQ1NfQ0hBUkNPREVfRU5EID0gMzgzO1xuY29uc3QgQ0hBUkNPREVfUkVQTEFDRV9NQVBQSU5HID0gW1xuICAgIDY1LFxuICAgIDY1LFxuICAgIDY1LFxuICAgIDY1LFxuICAgIDY1LFxuICAgIDY1LFxuICAgIDY1LFxuICAgIDY3LFxuICAgIDY5LFxuICAgIDY5LFxuICAgIDY5LFxuICAgIDY5LFxuICAgIDczLFxuICAgIDczLFxuICAgIDczLFxuICAgIDczLFxuICAgIDY5LFxuICAgIDc4LFxuICAgIDc5LFxuICAgIDc5LFxuICAgIDc5LFxuICAgIDc5LFxuICAgIDc5LFxuICAgIG51bGwsXG4gICAgNzksXG4gICAgODUsXG4gICAgODUsXG4gICAgODUsXG4gICAgODUsXG4gICAgODksXG4gICAgODAsXG4gICAgMTE1LFxuICAgIDk3LFxuICAgIDk3LFxuICAgIDk3LFxuICAgIDk3LFxuICAgIDk3LFxuICAgIDk3LFxuICAgIDk3LFxuICAgIDk5LFxuICAgIDEwMSxcbiAgICAxMDEsXG4gICAgMTAxLFxuICAgIDEwMSxcbiAgICAxMDUsXG4gICAgMTA1LFxuICAgIDEwNSxcbiAgICAxMDUsXG4gICAgMTAxLFxuICAgIDExMCxcbiAgICAxMTEsXG4gICAgMTExLFxuICAgIDExMSxcbiAgICAxMTEsXG4gICAgMTExLFxuICAgIG51bGwsXG4gICAgMTExLFxuICAgIDExNyxcbiAgICAxMTcsXG4gICAgMTE3LFxuICAgIDExNyxcbiAgICAxMjEsXG4gICAgMTEyLFxuICAgIDEyMSxcbiAgICA2NSxcbiAgICA5NyxcbiAgICA2NSxcbiAgICA5NyxcbiAgICA2NSxcbiAgICA5NyxcbiAgICA2NyxcbiAgICA5OSxcbiAgICA2NyxcbiAgICA5OSxcbiAgICA2NyxcbiAgICA5OSxcbiAgICA2NyxcbiAgICA5OSxcbiAgICA2OCxcbiAgICAxMDAsXG4gICAgNjgsXG4gICAgMTAwLFxuICAgIDY5LFxuICAgIDEwMSxcbiAgICA2OSxcbiAgICAxMDEsXG4gICAgNjksXG4gICAgMTAxLFxuICAgIDY5LFxuICAgIDEwMSxcbiAgICA2OSxcbiAgICAxMDEsXG4gICAgNzEsXG4gICAgMTAzLFxuICAgIDcxLFxuICAgIDEwMyxcbiAgICA3MSxcbiAgICAxMDMsXG4gICAgNzEsXG4gICAgMTAzLFxuICAgIDcyLFxuICAgIDEwNCxcbiAgICA3MixcbiAgICAxMDQsXG4gICAgNzMsXG4gICAgMTA1LFxuICAgIDczLFxuICAgIDEwNSxcbiAgICA3MyxcbiAgICAxMDUsXG4gICAgNzMsXG4gICAgMTA1LFxuICAgIDczLFxuICAgIDEwNSxcbiAgICA3MyxcbiAgICAxMDUsXG4gICAgNzQsXG4gICAgMTA2LFxuICAgIDc1LFxuICAgIDEwNyxcbiAgICAxMDcsXG4gICAgNzYsXG4gICAgMTA4LFxuICAgIDc2LFxuICAgIDEwOCxcbiAgICA3NixcbiAgICAxMDgsXG4gICAgNzYsXG4gICAgMTA4LFxuICAgIDc2LFxuICAgIDEwOCxcbiAgICA3OCxcbiAgICAxMTAsXG4gICAgNzgsXG4gICAgMTEwLFxuICAgIDc4LFxuICAgIDExMCxcbiAgICAxMTAsXG4gICAgNzgsXG4gICAgMTEwLFxuICAgIDc5LFxuICAgIDExMSxcbiAgICA3OSxcbiAgICAxMTEsXG4gICAgNzksXG4gICAgMTExLFxuICAgIDc5LFxuICAgIDExMSxcbiAgICA4MixcbiAgICAxMTQsXG4gICAgODIsXG4gICAgMTE0LFxuICAgIDgyLFxuICAgIDExNCxcbiAgICA4MyxcbiAgICAxMTUsXG4gICAgODMsXG4gICAgMTE1LFxuICAgIDgzLFxuICAgIDExNSxcbiAgICA4MyxcbiAgICAxMTUsXG4gICAgODQsXG4gICAgMTE2LFxuICAgIDg0LFxuICAgIDExNixcbiAgICA4NCxcbiAgICAxMTYsXG4gICAgODUsXG4gICAgMTE3LFxuICAgIDg1LFxuICAgIDExNyxcbiAgICA4NSxcbiAgICAxMTcsXG4gICAgODUsXG4gICAgMTE3LFxuICAgIDg1LFxuICAgIDExNyxcbiAgICA4NSxcbiAgICAxMTcsXG4gICAgODcsXG4gICAgMTE5LFxuICAgIDg5LFxuICAgIDEyMSxcbiAgICA4OSxcbiAgICA5MCxcbiAgICAxMjIsXG4gICAgOTAsXG4gICAgMTIyLFxuICAgIDkwLFxuICAgIDEyMixcbiAgICAxMTVcbl07XG5mdW5jdGlvbiByZXBsYWNlQ2hhcihjaGFyQ29kZSkge1xuICAgIGlmIChjaGFyQ29kZSA8IERJQUNSSVRJQ1NfQ0hBUkNPREVfU1RBUlQgfHwgY2hhckNvZGUgPiBESUFDUklUSUNTX0NIQVJDT0RFX0VORClcbiAgICAgICAgcmV0dXJuIGNoYXJDb2RlO1xuICAgIC8qIGM4IGlnbm9yZSBuZXh0ICAqL1xuICAgIHJldHVybiBDSEFSQ09ERV9SRVBMQUNFX01BUFBJTkdbY2hhckNvZGUgLSBESUFDUklUSUNTX0NIQVJDT0RFX1NUQVJUXSB8fCBjaGFyQ29kZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXBsYWNlRGlhY3JpdGljcyhzdHIpIHtcbiAgICBjb25zdCBzdHJpbmdDaGFyQ29kZSA9IFtdO1xuICAgIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IHN0ci5sZW5ndGg7IGlkeCsrKSB7XG4gICAgICAgIHN0cmluZ0NoYXJDb2RlW2lkeF0gPSByZXBsYWNlQ2hhcihzdHIuY2hhckNvZGVBdChpZHgpKTtcbiAgICB9XG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoLi4uc3RyaW5nQ2hhckNvZGUpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlhY3JpdGljcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/diacritics.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/english-stemmer.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/tokenizer/english-stemmer.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stemmer: () => (/* binding */ stemmer)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst step2List = {\n    ational: 'ate',\n    tional: 'tion',\n    enci: 'ence',\n    anci: 'ance',\n    izer: 'ize',\n    bli: 'ble',\n    alli: 'al',\n    entli: 'ent',\n    eli: 'e',\n    ousli: 'ous',\n    ization: 'ize',\n    ation: 'ate',\n    ator: 'ate',\n    alism: 'al',\n    iveness: 'ive',\n    fulness: 'ful',\n    ousness: 'ous',\n    aliti: 'al',\n    iviti: 'ive',\n    biliti: 'ble',\n    logi: 'log'\n};\nconst step3List = {\n    icate: 'ic',\n    ative: '',\n    alize: 'al',\n    iciti: 'ic',\n    ical: 'ic',\n    ful: '',\n    ness: ''\n};\n// Consonant\nconst c = '[^aeiou]';\n// Vowel\nconst v = '[aeiouy]';\n// Consonant sequence\nconst C = c + '[^aeiouy]*';\n// Vowel sequence\nconst V = v + '[aeiou]*';\n// [C]VC... is m>0\nconst mgr0 = '^(' + C + ')?' + V + C;\n// [C]VC[V] is m=1\nconst meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$';\n// [C]VCVC... is m>1\nconst mgr1 = '^(' + C + ')?' + V + C + V + C;\n// vowel in stem\nconst s_v = '^(' + C + ')?' + v;\nfunction stemmer(w) {\n    let stem;\n    let suffix;\n    let re;\n    let re2;\n    let re3;\n    let re4;\n    if (w.length < 3) {\n        return w;\n    }\n    const firstch = w.substring(0, 1);\n    if (firstch == 'y') {\n        w = firstch.toUpperCase() + w.substring(1);\n    }\n    re = /^(.+?)(ss|i)es$/;\n    re2 = /^(.+?)([^s])s$/;\n    if (re.test(w)) {\n        w = w.replace(re, '$1$2');\n    }\n    else if (re2.test(w)) {\n        w = w.replace(re2, '$1$2');\n    }\n    re = /^(.+?)eed$/;\n    re2 = /^(.+?)(ed|ing)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        re = new RegExp(mgr0);\n        if (re.test(fp[1])) {\n            re = /.$/;\n            w = w.replace(re, '');\n        }\n    }\n    else if (re2.test(w)) {\n        const fp = re2.exec(w);\n        stem = fp[1];\n        re2 = new RegExp(s_v);\n        if (re2.test(stem)) {\n            w = stem;\n            re2 = /(at|bl|iz)$/;\n            re3 = new RegExp('([^aeiouylsz])\\\\1$');\n            re4 = new RegExp('^' + C + v + '[^aeiouwxy]$');\n            if (re2.test(w)) {\n                w = w + 'e';\n            }\n            else if (re3.test(w)) {\n                re = /.$/;\n                w = w.replace(re, '');\n            }\n            else if (re4.test(w)) {\n                w = w + 'e';\n            }\n        }\n    }\n    re = /^(.+?)y$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        re = new RegExp(s_v);\n        if (stem && re.test(stem)) {\n            w = stem + 'i';\n        }\n    }\n    re =\n        /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        suffix = fp?.[2];\n        re = new RegExp(mgr0);\n        if (stem && re.test(stem)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            w = stem + step2List[suffix];\n        }\n    }\n    re = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        suffix = fp?.[2];\n        re = new RegExp(mgr0);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (stem && re.test(stem)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            w = stem + step3List[suffix];\n        }\n    }\n    re = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    re2 = /^(.+?)(s|t)(ion)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        re = new RegExp(mgr1);\n        if (stem && re.test(stem)) {\n            w = stem;\n        }\n    }\n    else if (re2.test(w)) {\n        const fp = re2.exec(w);\n        stem = fp?.[1] ?? '' + fp?.[2] ?? '';\n        re2 = new RegExp(mgr1);\n        if (re2.test(stem)) {\n            w = stem;\n        }\n    }\n    re = /^(.+?)e$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        re = new RegExp(mgr1);\n        re2 = new RegExp(meq1);\n        re3 = new RegExp('^' + C + v + '[^aeiouwxy]$');\n        if (stem && (re.test(stem) || (re2.test(stem) && !re3.test(stem)))) {\n            w = stem;\n        }\n    }\n    re = /ll$/;\n    re2 = new RegExp(mgr1);\n    if (re.test(w) && re2.test(w)) {\n        re = /.$/;\n        w = w.replace(re, '');\n    }\n    if (firstch == 'y') {\n        w = firstch.toLowerCase() + w.substring(1);\n    }\n    return w;\n}\n//# sourceMappingURL=english-stemmer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/english-stemmer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/tokenizer/index.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTokenizer: () => (/* binding */ createTokenizer),\n/* harmony export */   normalizeToken: () => (/* binding */ normalizeToken)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _diacritics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./diacritics.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/diacritics.js\");\n/* harmony import */ var _languages_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./languages.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/languages.js\");\n/* harmony import */ var _english_stemmer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./english-stemmer.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/english-stemmer.js\");\n\n\n\n\nfunction normalizeToken(prop, token, withCache = true) {\n    const key = `${this.language}:${prop}:${token}`;\n    if (withCache && this.normalizationCache.has(key)) {\n        return this.normalizationCache.get(key);\n    }\n    // Remove stopwords if enabled\n    if (this.stopWords?.includes(token)) {\n        if (withCache) {\n            this.normalizationCache.set(key, '');\n        }\n        return '';\n    }\n    // Apply stemming if enabled\n    if (this.stemmer && !this.stemmerSkipProperties.has(prop)) {\n        token = this.stemmer(token);\n    }\n    token = (0,_diacritics_js__WEBPACK_IMPORTED_MODULE_1__.replaceDiacritics)(token);\n    if (withCache) {\n        this.normalizationCache.set(key, token);\n    }\n    return token;\n}\n/* c8 ignore next 10 */\nfunction trim(text) {\n    while (text[text.length - 1] === '') {\n        text.pop();\n    }\n    while (text[0] === '') {\n        text.shift();\n    }\n    return text;\n}\nfunction tokenize(input, language, prop, withCache = true) {\n    if (language && language !== this.language) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('LANGUAGE_NOT_SUPPORTED', language);\n    }\n    /* c8 ignore next 3 */\n    if (typeof input !== 'string') {\n        return [input];\n    }\n    const normalizeToken = this.normalizeToken.bind(this, prop ?? '');\n    let tokens;\n    if (prop && this.tokenizeSkipProperties.has(prop)) {\n        tokens = [normalizeToken(input, withCache)];\n    }\n    else {\n        const splitRule = _languages_js__WEBPACK_IMPORTED_MODULE_2__.SPLITTERS[this.language];\n        tokens = input\n            .toLowerCase()\n            .split(splitRule)\n            .map(t => normalizeToken(t, withCache))\n            .filter(Boolean);\n    }\n    const trimTokens = trim(tokens);\n    if (!this.allowDuplicates) {\n        return Array.from(new Set(trimTokens));\n    }\n    return trimTokens;\n}\nfunction createTokenizer(config = {}) {\n    if (!config.language) {\n        config.language = 'english';\n    }\n    else if (!_languages_js__WEBPACK_IMPORTED_MODULE_2__.SUPPORTED_LANGUAGES.includes(config.language)) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('LANGUAGE_NOT_SUPPORTED', config.language);\n    }\n    // Handle stemming - It is disabled by default\n    let stemmer;\n    if (config.stemming || (config.stemmer && !('stemming' in config))) {\n        if (config.stemmer) {\n            if (typeof config.stemmer !== 'function') {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_STEMMER_FUNCTION_TYPE');\n            }\n            stemmer = config.stemmer;\n        }\n        else {\n            if (config.language === 'english') {\n                stemmer = _english_stemmer_js__WEBPACK_IMPORTED_MODULE_3__.stemmer;\n            }\n            else {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('MISSING_STEMMER', config.language);\n            }\n        }\n    }\n    // Handle stopwords\n    let stopWords;\n    if (config.stopWords !== false) {\n        stopWords = [];\n        if (Array.isArray(config.stopWords)) {\n            stopWords = config.stopWords;\n        }\n        else if (typeof config.stopWords === 'function') {\n            stopWords = config.stopWords(stopWords);\n        }\n        else if (config.stopWords) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY');\n        }\n        // Make sure stopWords is just an array of strings\n        if (!Array.isArray(stopWords)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY');\n        }\n        for (const s of stopWords) {\n            if (typeof s !== 'string') {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY');\n            }\n        }\n    }\n    // Create the tokenizer\n    const tokenizer = {\n        tokenize,\n        language: config.language,\n        stemmer,\n        stemmerSkipProperties: new Set(config.stemmerSkipProperties ? [config.stemmerSkipProperties].flat() : []),\n        tokenizeSkipProperties: new Set(config.tokenizeSkipProperties ? [config.tokenizeSkipProperties].flat() : []),\n        stopWords,\n        allowDuplicates: Boolean(config.allowDuplicates),\n        normalizeToken,\n        normalizationCache: new Map()\n    };\n    tokenizer.tokenize = tokenize.bind(tokenizer);\n    tokenizer.normalizeToken = normalizeToken;\n    return tokenizer;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvdG9rZW5pemVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4QztBQUNNO0FBQ1k7QUFDTjtBQUNuRDtBQUNQLG1CQUFtQixjQUFjLEdBQUcsS0FBSyxHQUFHLE1BQU07QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaUVBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHVEQUFXO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0RBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQW1CO0FBQ2pDLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHVEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsd0RBQU87QUFDakM7QUFDQTtBQUNBLHNCQUFzQix1REFBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVEQUFXO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdURBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvdG9rZW5pemVyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVycm9yIH0gZnJvbSAnLi4vLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IHJlcGxhY2VEaWFjcml0aWNzIH0gZnJvbSAnLi9kaWFjcml0aWNzLmpzJztcbmltcG9ydCB7IFNQTElUVEVSUywgU1VQUE9SVEVEX0xBTkdVQUdFUyB9IGZyb20gJy4vbGFuZ3VhZ2VzLmpzJztcbmltcG9ydCB7IHN0ZW1tZXIgYXMgZW5nbGlzaCB9IGZyb20gJy4vZW5nbGlzaC1zdGVtbWVyLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBub3JtYWxpemVUb2tlbihwcm9wLCB0b2tlbiwgd2l0aENhY2hlID0gdHJ1ZSkge1xuICAgIGNvbnN0IGtleSA9IGAke3RoaXMubGFuZ3VhZ2V9OiR7cHJvcH06JHt0b2tlbn1gO1xuICAgIGlmICh3aXRoQ2FjaGUgJiYgdGhpcy5ub3JtYWxpemF0aW9uQ2FjaGUuaGFzKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubm9ybWFsaXphdGlvbkNhY2hlLmdldChrZXkpO1xuICAgIH1cbiAgICAvLyBSZW1vdmUgc3RvcHdvcmRzIGlmIGVuYWJsZWRcbiAgICBpZiAodGhpcy5zdG9wV29yZHM/LmluY2x1ZGVzKHRva2VuKSkge1xuICAgICAgICBpZiAod2l0aENhY2hlKSB7XG4gICAgICAgICAgICB0aGlzLm5vcm1hbGl6YXRpb25DYWNoZS5zZXQoa2V5LCAnJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICAvLyBBcHBseSBzdGVtbWluZyBpZiBlbmFibGVkXG4gICAgaWYgKHRoaXMuc3RlbW1lciAmJiAhdGhpcy5zdGVtbWVyU2tpcFByb3BlcnRpZXMuaGFzKHByb3ApKSB7XG4gICAgICAgIHRva2VuID0gdGhpcy5zdGVtbWVyKHRva2VuKTtcbiAgICB9XG4gICAgdG9rZW4gPSByZXBsYWNlRGlhY3JpdGljcyh0b2tlbik7XG4gICAgaWYgKHdpdGhDYWNoZSkge1xuICAgICAgICB0aGlzLm5vcm1hbGl6YXRpb25DYWNoZS5zZXQoa2V5LCB0b2tlbik7XG4gICAgfVxuICAgIHJldHVybiB0b2tlbjtcbn1cbi8qIGM4IGlnbm9yZSBuZXh0IDEwICovXG5mdW5jdGlvbiB0cmltKHRleHQpIHtcbiAgICB3aGlsZSAodGV4dFt0ZXh0Lmxlbmd0aCAtIDFdID09PSAnJykge1xuICAgICAgICB0ZXh0LnBvcCgpO1xuICAgIH1cbiAgICB3aGlsZSAodGV4dFswXSA9PT0gJycpIHtcbiAgICAgICAgdGV4dC5zaGlmdCgpO1xuICAgIH1cbiAgICByZXR1cm4gdGV4dDtcbn1cbmZ1bmN0aW9uIHRva2VuaXplKGlucHV0LCBsYW5ndWFnZSwgcHJvcCwgd2l0aENhY2hlID0gdHJ1ZSkge1xuICAgIGlmIChsYW5ndWFnZSAmJiBsYW5ndWFnZSAhPT0gdGhpcy5sYW5ndWFnZSkge1xuICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignTEFOR1VBR0VfTk9UX1NVUFBPUlRFRCcsIGxhbmd1YWdlKTtcbiAgICB9XG4gICAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBbaW5wdXRdO1xuICAgIH1cbiAgICBjb25zdCBub3JtYWxpemVUb2tlbiA9IHRoaXMubm9ybWFsaXplVG9rZW4uYmluZCh0aGlzLCBwcm9wID8/ICcnKTtcbiAgICBsZXQgdG9rZW5zO1xuICAgIGlmIChwcm9wICYmIHRoaXMudG9rZW5pemVTa2lwUHJvcGVydGllcy5oYXMocHJvcCkpIHtcbiAgICAgICAgdG9rZW5zID0gW25vcm1hbGl6ZVRva2VuKGlucHV0LCB3aXRoQ2FjaGUpXTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHNwbGl0UnVsZSA9IFNQTElUVEVSU1t0aGlzLmxhbmd1YWdlXTtcbiAgICAgICAgdG9rZW5zID0gaW5wdXRcbiAgICAgICAgICAgIC50b0xvd2VyQ2FzZSgpXG4gICAgICAgICAgICAuc3BsaXQoc3BsaXRSdWxlKVxuICAgICAgICAgICAgLm1hcCh0ID0+IG5vcm1hbGl6ZVRva2VuKHQsIHdpdGhDYWNoZSkpXG4gICAgICAgICAgICAuZmlsdGVyKEJvb2xlYW4pO1xuICAgIH1cbiAgICBjb25zdCB0cmltVG9rZW5zID0gdHJpbSh0b2tlbnMpO1xuICAgIGlmICghdGhpcy5hbGxvd0R1cGxpY2F0ZXMpIHtcbiAgICAgICAgcmV0dXJuIEFycmF5LmZyb20obmV3IFNldCh0cmltVG9rZW5zKSk7XG4gICAgfVxuICAgIHJldHVybiB0cmltVG9rZW5zO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRva2VuaXplcihjb25maWcgPSB7fSkge1xuICAgIGlmICghY29uZmlnLmxhbmd1YWdlKSB7XG4gICAgICAgIGNvbmZpZy5sYW5ndWFnZSA9ICdlbmdsaXNoJztcbiAgICB9XG4gICAgZWxzZSBpZiAoIVNVUFBPUlRFRF9MQU5HVUFHRVMuaW5jbHVkZXMoY29uZmlnLmxhbmd1YWdlKSkge1xuICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignTEFOR1VBR0VfTk9UX1NVUFBPUlRFRCcsIGNvbmZpZy5sYW5ndWFnZSk7XG4gICAgfVxuICAgIC8vIEhhbmRsZSBzdGVtbWluZyAtIEl0IGlzIGRpc2FibGVkIGJ5IGRlZmF1bHRcbiAgICBsZXQgc3RlbW1lcjtcbiAgICBpZiAoY29uZmlnLnN0ZW1taW5nIHx8IChjb25maWcuc3RlbW1lciAmJiAhKCdzdGVtbWluZycgaW4gY29uZmlnKSkpIHtcbiAgICAgICAgaWYgKGNvbmZpZy5zdGVtbWVyKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbmZpZy5zdGVtbWVyICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0lOVkFMSURfU1RFTU1FUl9GVU5DVElPTl9UWVBFJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdGVtbWVyID0gY29uZmlnLnN0ZW1tZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoY29uZmlnLmxhbmd1YWdlID09PSAnZW5nbGlzaCcpIHtcbiAgICAgICAgICAgICAgICBzdGVtbWVyID0gZW5nbGlzaDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdNSVNTSU5HX1NURU1NRVInLCBjb25maWcubGFuZ3VhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIEhhbmRsZSBzdG9wd29yZHNcbiAgICBsZXQgc3RvcFdvcmRzO1xuICAgIGlmIChjb25maWcuc3RvcFdvcmRzICE9PSBmYWxzZSkge1xuICAgICAgICBzdG9wV29yZHMgPSBbXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoY29uZmlnLnN0b3BXb3JkcykpIHtcbiAgICAgICAgICAgIHN0b3BXb3JkcyA9IGNvbmZpZy5zdG9wV29yZHM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGNvbmZpZy5zdG9wV29yZHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHN0b3BXb3JkcyA9IGNvbmZpZy5zdG9wV29yZHMoc3RvcFdvcmRzKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb25maWcuc3RvcFdvcmRzKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignQ1VTVE9NX1NUT1BfV09SRFNfTVVTVF9CRV9GVU5DVElPTl9PUl9BUlJBWScpO1xuICAgICAgICB9XG4gICAgICAgIC8vIE1ha2Ugc3VyZSBzdG9wV29yZHMgaXMganVzdCBhbiBhcnJheSBvZiBzdHJpbmdzXG4gICAgICAgIGlmICghQXJyYXkuaXNBcnJheShzdG9wV29yZHMpKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignQ1VTVE9NX1NUT1BfV09SRFNfTVVTVF9CRV9GVU5DVElPTl9PUl9BUlJBWScpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgcyBvZiBzdG9wV29yZHMpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgcyAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignQ1VTVE9NX1NUT1BfV09SRFNfTVVTVF9CRV9GVU5DVElPTl9PUl9BUlJBWScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIENyZWF0ZSB0aGUgdG9rZW5pemVyXG4gICAgY29uc3QgdG9rZW5pemVyID0ge1xuICAgICAgICB0b2tlbml6ZSxcbiAgICAgICAgbGFuZ3VhZ2U6IGNvbmZpZy5sYW5ndWFnZSxcbiAgICAgICAgc3RlbW1lcixcbiAgICAgICAgc3RlbW1lclNraXBQcm9wZXJ0aWVzOiBuZXcgU2V0KGNvbmZpZy5zdGVtbWVyU2tpcFByb3BlcnRpZXMgPyBbY29uZmlnLnN0ZW1tZXJTa2lwUHJvcGVydGllc10uZmxhdCgpIDogW10pLFxuICAgICAgICB0b2tlbml6ZVNraXBQcm9wZXJ0aWVzOiBuZXcgU2V0KGNvbmZpZy50b2tlbml6ZVNraXBQcm9wZXJ0aWVzID8gW2NvbmZpZy50b2tlbml6ZVNraXBQcm9wZXJ0aWVzXS5mbGF0KCkgOiBbXSksXG4gICAgICAgIHN0b3BXb3JkcyxcbiAgICAgICAgYWxsb3dEdXBsaWNhdGVzOiBCb29sZWFuKGNvbmZpZy5hbGxvd0R1cGxpY2F0ZXMpLFxuICAgICAgICBub3JtYWxpemVUb2tlbixcbiAgICAgICAgbm9ybWFsaXphdGlvbkNhY2hlOiBuZXcgTWFwKClcbiAgICB9O1xuICAgIHRva2VuaXplci50b2tlbml6ZSA9IHRva2VuaXplLmJpbmQodG9rZW5pemVyKTtcbiAgICB0b2tlbml6ZXIubm9ybWFsaXplVG9rZW4gPSBub3JtYWxpemVUb2tlbjtcbiAgICByZXR1cm4gdG9rZW5pemVyO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/languages.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/components/tokenizer/languages.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SPLITTERS: () => (/* binding */ SPLITTERS),\n/* harmony export */   STEMMERS: () => (/* binding */ STEMMERS),\n/* harmony export */   SUPPORTED_LANGUAGES: () => (/* binding */ SUPPORTED_LANGUAGES),\n/* harmony export */   getLocale: () => (/* binding */ getLocale)\n/* harmony export */ });\nconst STEMMERS = {\n    arabic: 'ar',\n    armenian: 'am',\n    bulgarian: 'bg',\n    czech: 'cz',\n    danish: 'dk',\n    dutch: 'nl',\n    english: 'en',\n    finnish: 'fi',\n    french: 'fr',\n    german: 'de',\n    greek: 'gr',\n    hungarian: 'hu',\n    indian: 'in',\n    indonesian: 'id',\n    irish: 'ie',\n    italian: 'it',\n    lithuanian: 'lt',\n    nepali: 'np',\n    norwegian: 'no',\n    portuguese: 'pt',\n    romanian: 'ro',\n    russian: 'ru',\n    serbian: 'rs',\n    slovenian: 'ru',\n    spanish: 'es',\n    swedish: 'se',\n    tamil: 'ta',\n    turkish: 'tr',\n    ukrainian: 'uk',\n    sanskrit: 'sk'\n};\nconst SPLITTERS = {\n    dutch: /[^A-Za-zàèéìòóù0-9_'-]+/gim,\n    english: /[^A-Za-zàèéìòóù0-9_'-]+/gim,\n    french: /[^a-z0-9äâàéèëêïîöôùüûœç-]+/gim,\n    italian: /[^A-Za-zàèéìòóù0-9_'-]+/gim,\n    norwegian: /[^a-z0-9_æøåÆØÅäÄöÖüÜ]+/gim,\n    portuguese: /[^a-z0-9à-úÀ-Ú]/gim,\n    russian: /[^a-z0-9а-яА-ЯёЁ]+/gim,\n    spanish: /[^a-z0-9A-Zá-úÁ-ÚñÑüÜ]+/gim,\n    swedish: /[^a-z0-9_åÅäÄöÖüÜ-]+/gim,\n    german: /[^a-z0-9A-ZäöüÄÖÜß]+/gim,\n    finnish: /[^a-z0-9äöÄÖ]+/gim,\n    danish: /[^a-z0-9æøåÆØÅ]+/gim,\n    hungarian: /[^a-z0-9áéíóöőúüűÁÉÍÓÖŐÚÜŰ]+/gim,\n    romanian: /[^a-z0-9ăâîșțĂÂÎȘȚ]+/gim,\n    serbian: /[^a-z0-9čćžšđČĆŽŠĐ]+/gim,\n    turkish: /[^a-z0-9çÇğĞıİöÖşŞüÜ]+/gim,\n    lithuanian: /[^a-z0-9ąčęėįšųūžĄČĘĖĮŠŲŪŽ]+/gim,\n    arabic: /[^a-z0-9أ-ي]+/gim,\n    nepali: /[^a-z0-9अ-ह]+/gim,\n    irish: /[^a-z0-9áéíóúÁÉÍÓÚ]+/gim,\n    indian: /[^a-z0-9अ-ह]+/gim,\n    armenian: /[^a-z0-9ա-ֆ]+/gim,\n    greek: /[^a-z0-9α-ωά-ώ]+/gim,\n    indonesian: /[^a-z0-9]+/gim,\n    ukrainian: /[^a-z0-9а-яА-ЯіїєІЇЄ]+/gim,\n    slovenian: /[^a-z0-9čžšČŽŠ]+/gim,\n    bulgarian: /[^a-z0-9а-яА-Я]+/gim,\n    tamil: /[^a-z0-9அ-ஹ]+/gim,\n    sanskrit: /[^a-z0-9A-Zāīūṛḷṃṁḥśṣṭḍṇṅñḻḹṝ]+/gim,\n    czech: /[^A-Z0-9a-zěščřžýáíéúůóťďĚŠČŘŽÝÁÍÉÓÚŮŤĎ-]+/gim\n};\nconst SUPPORTED_LANGUAGES = Object.keys(STEMMERS);\nfunction getLocale(language) {\n    return language !== undefined && SUPPORTED_LANGUAGES.includes(language) ? STEMMERS[language] : undefined;\n}\n//# sourceMappingURL=languages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbXBvbmVudHMvdG9rZW5pemVyL2xhbmd1YWdlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vY29tcG9uZW50cy90b2tlbml6ZXIvbGFuZ3VhZ2VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBTVEVNTUVSUyA9IHtcbiAgICBhcmFiaWM6ICdhcicsXG4gICAgYXJtZW5pYW46ICdhbScsXG4gICAgYnVsZ2FyaWFuOiAnYmcnLFxuICAgIGN6ZWNoOiAnY3onLFxuICAgIGRhbmlzaDogJ2RrJyxcbiAgICBkdXRjaDogJ25sJyxcbiAgICBlbmdsaXNoOiAnZW4nLFxuICAgIGZpbm5pc2g6ICdmaScsXG4gICAgZnJlbmNoOiAnZnInLFxuICAgIGdlcm1hbjogJ2RlJyxcbiAgICBncmVlazogJ2dyJyxcbiAgICBodW5nYXJpYW46ICdodScsXG4gICAgaW5kaWFuOiAnaW4nLFxuICAgIGluZG9uZXNpYW46ICdpZCcsXG4gICAgaXJpc2g6ICdpZScsXG4gICAgaXRhbGlhbjogJ2l0JyxcbiAgICBsaXRodWFuaWFuOiAnbHQnLFxuICAgIG5lcGFsaTogJ25wJyxcbiAgICBub3J3ZWdpYW46ICdubycsXG4gICAgcG9ydHVndWVzZTogJ3B0JyxcbiAgICByb21hbmlhbjogJ3JvJyxcbiAgICBydXNzaWFuOiAncnUnLFxuICAgIHNlcmJpYW46ICdycycsXG4gICAgc2xvdmVuaWFuOiAncnUnLFxuICAgIHNwYW5pc2g6ICdlcycsXG4gICAgc3dlZGlzaDogJ3NlJyxcbiAgICB0YW1pbDogJ3RhJyxcbiAgICB0dXJraXNoOiAndHInLFxuICAgIHVrcmFpbmlhbjogJ3VrJyxcbiAgICBzYW5za3JpdDogJ3NrJ1xufTtcbmV4cG9ydCBjb25zdCBTUExJVFRFUlMgPSB7XG4gICAgZHV0Y2g6IC9bXkEtWmEtesOgw6jDqcOsw7LDs8O5MC05XyctXSsvZ2ltLFxuICAgIGVuZ2xpc2g6IC9bXkEtWmEtesOgw6jDqcOsw7LDs8O5MC05XyctXSsvZ2ltLFxuICAgIGZyZW5jaDogL1teYS16MC05w6TDosOgw6nDqMOrw6rDr8Ouw7bDtMO5w7zDu8WTw6ctXSsvZ2ltLFxuICAgIGl0YWxpYW46IC9bXkEtWmEtesOgw6jDqcOsw7LDs8O5MC05XyctXSsvZ2ltLFxuICAgIG5vcndlZ2lhbjogL1teYS16MC05X8Omw7jDpcOGw5jDhcOkw4TDtsOWw7zDnF0rL2dpbSxcbiAgICBwb3J0dWd1ZXNlOiAvW15hLXowLTnDoC3DusOALcOaXS9naW0sXG4gICAgcnVzc2lhbjogL1teYS16MC050LAt0Y/QkC3Qr9GR0IFdKy9naW0sXG4gICAgc3BhbmlzaDogL1teYS16MC05QS1aw6Etw7rDgS3DmsOxw5HDvMOcXSsvZ2ltLFxuICAgIHN3ZWRpc2g6IC9bXmEtejAtOV/DpcOFw6TDhMO2w5bDvMOcLV0rL2dpbSxcbiAgICBnZXJtYW46IC9bXmEtejAtOUEtWsOkw7bDvMOEw5bDnMOfXSsvZ2ltLFxuICAgIGZpbm5pc2g6IC9bXmEtejAtOcOkw7bDhMOWXSsvZ2ltLFxuICAgIGRhbmlzaDogL1teYS16MC05w6bDuMOlw4bDmMOFXSsvZ2ltLFxuICAgIGh1bmdhcmlhbjogL1teYS16MC05w6HDqcOtw7PDtsWRw7rDvMWxw4HDicONw5PDlsWQw5rDnMWwXSsvZ2ltLFxuICAgIHJvbWFuaWFuOiAvW15hLXowLTnEg8Oiw67ImcibxILDgsOOyJjIml0rL2dpbSxcbiAgICBzZXJiaWFuOiAvW15hLXowLTnEjcSHxb7FocSRxIzEhsW9xaDEkF0rL2dpbSxcbiAgICB0dXJraXNoOiAvW15hLXowLTnDp8OHxJ/EnsSxxLDDtsOWxZ/FnsO8w5xdKy9naW0sXG4gICAgbGl0aHVhbmlhbjogL1teYS16MC05xIXEjcSZxJfEr8WhxbPFq8W+xITEjMSYxJbErsWgxbLFqsW9XSsvZ2ltLFxuICAgIGFyYWJpYzogL1teYS16MC052KMt2YpdKy9naW0sXG4gICAgbmVwYWxpOiAvW15hLXowLTngpIUt4KS5XSsvZ2ltLFxuICAgIGlyaXNoOiAvW15hLXowLTnDocOpw63Ds8O6w4HDicONw5PDml0rL2dpbSxcbiAgICBpbmRpYW46IC9bXmEtejAtOeCkhS3gpLldKy9naW0sXG4gICAgYXJtZW5pYW46IC9bXmEtejAtOdWhLdaGXSsvZ2ltLFxuICAgIGdyZWVrOiAvW15hLXowLTnOsS3Pic6sLc+OXSsvZ2ltLFxuICAgIGluZG9uZXNpYW46IC9bXmEtejAtOV0rL2dpbSxcbiAgICB1a3JhaW5pYW46IC9bXmEtejAtOdCwLdGP0JAt0K/RltGX0ZTQhtCH0IRdKy9naW0sXG4gICAgc2xvdmVuaWFuOiAvW15hLXowLTnEjcW+xaHEjMW9xaBdKy9naW0sXG4gICAgYnVsZ2FyaWFuOiAvW15hLXowLTnQsC3Rj9CQLdCvXSsvZ2ltLFxuICAgIHRhbWlsOiAvW15hLXowLTngroUt4K65XSsvZ2ltLFxuICAgIHNhbnNrcml0OiAvW15hLXowLTlBLVrEgcSrxavhuZvhuLfhuYPhuYHhuKXFm+G5o+G5reG4jeG5h+G5hcOx4bi74bi54bmdXSsvZ2ltLFxuICAgIGN6ZWNoOiAvW15BLVowLTlhLXrEm8WhxI3FmcW+w73DocOtw6nDusWvw7PFpcSPxJrFoMSMxZjFvcOdw4HDjcOJw5PDmsWuxaTEji1dKy9naW1cbn07XG5leHBvcnQgY29uc3QgU1VQUE9SVEVEX0xBTkdVQUdFUyA9IE9iamVjdC5rZXlzKFNURU1NRVJTKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2NhbGUobGFuZ3VhZ2UpIHtcbiAgICByZXR1cm4gbGFuZ3VhZ2UgIT09IHVuZGVmaW5lZCAmJiBTVVBQT1JURURfTEFOR1VBR0VTLmluY2x1ZGVzKGxhbmd1YWdlKSA/IFNURU1NRVJTW2xhbmd1YWdlXSA6IHVuZGVmaW5lZDtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxhbmd1YWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/languages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/constants.js":
/*!*********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/constants.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MODE_FULLTEXT_SEARCH: () => (/* binding */ MODE_FULLTEXT_SEARCH),\n/* harmony export */   MODE_HYBRID_SEARCH: () => (/* binding */ MODE_HYBRID_SEARCH),\n/* harmony export */   MODE_VECTOR_SEARCH: () => (/* binding */ MODE_VECTOR_SEARCH)\n/* harmony export */ });\nconst MODE_FULLTEXT_SEARCH = 'fulltext';\nconst MODE_HYBRID_SEARCH = 'hybrid';\nconst MODE_VECTOR_SEARCH = 'vector';\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNBO0FBQ0E7QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2NvbnN0YW50cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgTU9ERV9GVUxMVEVYVF9TRUFSQ0ggPSAnZnVsbHRleHQnO1xuZXhwb3J0IGNvbnN0IE1PREVfSFlCUklEX1NFQVJDSCA9ICdoeWJyaWQnO1xuZXhwb3J0IGNvbnN0IE1PREVfVkVDVE9SX1NFQVJDSCA9ICd2ZWN0b3InO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uc3RhbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/errors.js":
/*!******************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/errors.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createError: () => (/* binding */ createError)\n/* harmony export */ });\n/* harmony import */ var _components_tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/tokenizer/languages.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/languages.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\n\nconst allLanguages = _components_tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_0__.SUPPORTED_LANGUAGES.join('\\n - ');\nconst errors = {\n    NO_LANGUAGE_WITH_CUSTOM_TOKENIZER: 'Do not pass the language option to create when using a custom tokenizer.',\n    LANGUAGE_NOT_SUPPORTED: `Language \"%s\" is not supported.\\nSupported languages are:\\n - ${allLanguages}`,\n    INVALID_STEMMER_FUNCTION_TYPE: `config.stemmer property must be a function.`,\n    MISSING_STEMMER: `As of version 1.0.0 @orama/orama does not ship non English stemmers by default. To solve this, please explicitly import and specify the \"%s\" stemmer from the package @orama/stemmers. See https://docs.orama.com/open-source/text-analysis/stemming for more information.`,\n    CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY: 'Custom stop words array must only contain strings.',\n    UNSUPPORTED_COMPONENT: `Unsupported component \"%s\".`,\n    COMPONENT_MUST_BE_FUNCTION: `The component \"%s\" must be a function.`,\n    COMPONENT_MUST_BE_FUNCTION_OR_ARRAY_FUNCTIONS: `The component \"%s\" must be a function or an array of functions.`,\n    INVALID_SCHEMA_TYPE: `Unsupported schema type \"%s\" at \"%s\". Expected \"string\", \"boolean\" or \"number\" or array of them.`,\n    DOCUMENT_ID_MUST_BE_STRING: `Document id must be of type \"string\". Got \"%s\" instead.`,\n    DOCUMENT_ALREADY_EXISTS: `A document with id \"%s\" already exists.`,\n    DOCUMENT_DOES_NOT_EXIST: `A document with id \"%s\" does not exists.`,\n    MISSING_DOCUMENT_PROPERTY: `Missing searchable property \"%s\".`,\n    INVALID_DOCUMENT_PROPERTY: `Invalid document property \"%s\": expected \"%s\", got \"%s\"`,\n    UNKNOWN_INDEX: `Invalid property name \"%s\". Expected a wildcard string (\"*\") or array containing one of the following properties: %s`,\n    INVALID_BOOST_VALUE: `Boost value must be a number greater than, or less than 0.`,\n    INVALID_FILTER_OPERATION: `You can only use one operation per filter, you requested %d.`,\n    SCHEMA_VALIDATION_FAILURE: `Cannot insert document due schema validation failure on \"%s\" property.`,\n    INVALID_SORT_SCHEMA_TYPE: `Unsupported sort schema type \"%s\" at \"%s\". Expected \"string\" or \"number\".`,\n    CANNOT_SORT_BY_ARRAY: `Cannot configure sort for \"%s\" because it is an array (%s).`,\n    UNABLE_TO_SORT_ON_UNKNOWN_FIELD: `Unable to sort on unknown field \"%s\". Allowed fields: %s`,\n    SORT_DISABLED: `Sort is disabled. Please read the documentation at https://docs.oramasearch for more information.`,\n    UNKNOWN_GROUP_BY_PROPERTY: `Unknown groupBy property \"%s\".`,\n    INVALID_GROUP_BY_PROPERTY: `Invalid groupBy property \"%s\". Allowed types: \"%s\", but given \"%s\".`,\n    UNKNOWN_FILTER_PROPERTY: `Unknown filter property \"%s\".`,\n    INVALID_VECTOR_SIZE: `Vector size must be a number greater than 0. Got \"%s\" instead.`,\n    INVALID_VECTOR_VALUE: `Vector value must be a number greater than 0. Got \"%s\" instead.`,\n    INVALID_INPUT_VECTOR: `Property \"%s\" was declared as a %s-dimensional vector, but got a %s-dimensional vector instead.\\nInput vectors must be of the size declared in the schema, as calculating similarity between vectors of different sizes can lead to unexpected results.`,\n    WRONG_SEARCH_PROPERTY_TYPE: `Property \"%s\" is not searchable. Only \"string\" properties are searchable.`,\n    FACET_NOT_SUPPORTED: `Facet doens't support the type \"%s\".`,\n    INVALID_DISTANCE_SUFFIX: `Invalid distance suffix \"%s\". Valid suffixes are: cm, m, km, mi, yd, ft.`,\n    INVALID_SEARCH_MODE: `Invalid search mode \"%s\". Valid modes are: \"fulltext\", \"vector\", \"hybrid\".`,\n    MISSING_VECTOR_AND_SECURE_PROXY: `No vector was provided and no secure proxy was configured. Please provide a vector or configure an Orama Secure Proxy to perform hybrid search.`,\n    MISSING_TERM: `\"term\" is a required parameter when performing hybrid search. Please provide a search term.`,\n    INVALID_VECTOR_INPUT: `Invalid \"vector\" property. Expected an object with \"value\" and \"property\" properties, but got \"%s\" instead.`,\n    PLUGIN_CRASHED: `A plugin crashed during initialization. Please check the error message for more information:`,\n    PLUGIN_SECURE_PROXY_NOT_FOUND: `Could not find '@orama/secure-proxy-plugin' installed in your Orama instance.\\nPlease install it before proceeding with creating an answer session.\\nRead more at https://docs.orama.com/open-source/plugins/plugin-secure-proxy#plugin-secure-proxy\\n`,\n    PLUGIN_SECURE_PROXY_MISSING_CHAT_MODEL: `Could not find a chat model defined in the secure proxy plugin configuration.\\nPlease provide a chat model before proceeding with creating an answer session.\\nRead more at https://docs.orama.com/open-source/plugins/plugin-secure-proxy#plugin-secure-proxy\\n`,\n    ANSWER_SESSION_LAST_MESSAGE_IS_NOT_ASSISTANT: `The last message in the session is not an assistant message. Cannot regenerate non-assistant messages.`,\n    PLUGIN_COMPONENT_CONFLICT: `The component \"%s\" is already defined. The plugin \"%s\" is trying to redefine it.`,\n};\nfunction createError(code, ...args) {\n    const error = new Error((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sprintf)(errors[code] ?? `Unsupported Orama Error code: ${code}`, ...args));\n    error.code = code;\n    if ('captureStackTrace' in Error.prototype) {\n        Error.captureStackTrace(error);\n    }\n    return error;\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnswerSession: () => (/* reexport safe */ _methods_answer_session_js__WEBPACK_IMPORTED_MODULE_9__.AnswerSession),\n/* harmony export */   MODE_FULLTEXT_SEARCH: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.MODE_FULLTEXT_SEARCH),\n/* harmony export */   MODE_HYBRID_SEARCH: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.MODE_HYBRID_SEARCH),\n/* harmony export */   MODE_VECTOR_SEARCH: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.MODE_VECTOR_SEARCH),\n/* harmony export */   components: () => (/* reexport module object */ _components_js__WEBPACK_IMPORTED_MODULE_11__),\n/* harmony export */   count: () => (/* reexport safe */ _methods_docs_js__WEBPACK_IMPORTED_MODULE_1__.count),\n/* harmony export */   create: () => (/* reexport safe */ _methods_create_js__WEBPACK_IMPORTED_MODULE_0__.create),\n/* harmony export */   getByID: () => (/* reexport safe */ _methods_docs_js__WEBPACK_IMPORTED_MODULE_1__.getByID),\n/* harmony export */   insert: () => (/* reexport safe */ _methods_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert),\n/* harmony export */   insertMultiple: () => (/* reexport safe */ _methods_insert_js__WEBPACK_IMPORTED_MODULE_2__.insertMultiple),\n/* harmony export */   internals: () => (/* reexport module object */ _internals_js__WEBPACK_IMPORTED_MODULE_12__),\n/* harmony export */   kInsertions: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.kInsertions),\n/* harmony export */   kRemovals: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.kRemovals),\n/* harmony export */   load: () => (/* reexport safe */ _methods_serialization_js__WEBPACK_IMPORTED_MODULE_6__.load),\n/* harmony export */   remove: () => (/* reexport safe */ _methods_remove_js__WEBPACK_IMPORTED_MODULE_3__.remove),\n/* harmony export */   removeMultiple: () => (/* reexport safe */ _methods_remove_js__WEBPACK_IMPORTED_MODULE_3__.removeMultiple),\n/* harmony export */   save: () => (/* reexport safe */ _methods_serialization_js__WEBPACK_IMPORTED_MODULE_6__.save),\n/* harmony export */   search: () => (/* reexport safe */ _methods_search_js__WEBPACK_IMPORTED_MODULE_4__.search),\n/* harmony export */   searchVector: () => (/* reexport safe */ _methods_search_vector_js__WEBPACK_IMPORTED_MODULE_5__.searchVector),\n/* harmony export */   update: () => (/* reexport safe */ _methods_update_js__WEBPACK_IMPORTED_MODULE_7__.update),\n/* harmony export */   updateMultiple: () => (/* reexport safe */ _methods_update_js__WEBPACK_IMPORTED_MODULE_7__.updateMultiple),\n/* harmony export */   upsert: () => (/* reexport safe */ _methods_upsert_js__WEBPACK_IMPORTED_MODULE_8__.upsert),\n/* harmony export */   upsertMultiple: () => (/* reexport safe */ _methods_upsert_js__WEBPACK_IMPORTED_MODULE_8__.upsertMultiple)\n/* harmony export */ });\n/* harmony import */ var _methods_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./methods/create.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/create.js\");\n/* harmony import */ var _methods_docs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./methods/docs.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/docs.js\");\n/* harmony import */ var _methods_insert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./methods/insert.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/insert.js\");\n/* harmony import */ var _methods_remove_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./methods/remove.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/remove.js\");\n/* harmony import */ var _methods_search_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./methods/search.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search.js\");\n/* harmony import */ var _methods_search_vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./methods/search-vector.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-vector.js\");\n/* harmony import */ var _methods_serialization_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./methods/serialization.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/serialization.js\");\n/* harmony import */ var _methods_update_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./methods/update.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/update.js\");\n/* harmony import */ var _methods_upsert_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./methods/upsert.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/upsert.js\");\n/* harmony import */ var _methods_answer_session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./methods/answer-session.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/answer-session.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./types.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/types.js\");\n/* harmony import */ var _components_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components.js\");\n/* harmony import */ var _internals_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./internals.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/internals.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QztBQUNNO0FBQ1U7QUFDQTtBQUNoQjtBQUNhO0FBQ0Y7QUFDSztBQUNBO0FBQ0Q7QUFDakM7QUFDbUI7QUFDRjtBQUM1QyIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGNyZWF0ZSB9IGZyb20gJy4vbWV0aG9kcy9jcmVhdGUuanMnO1xuZXhwb3J0IHsgY291bnQsIGdldEJ5SUQgfSBmcm9tICcuL21ldGhvZHMvZG9jcy5qcyc7XG5leHBvcnQgeyBpbnNlcnQsIGluc2VydE11bHRpcGxlIH0gZnJvbSAnLi9tZXRob2RzL2luc2VydC5qcyc7XG5leHBvcnQgeyByZW1vdmUsIHJlbW92ZU11bHRpcGxlIH0gZnJvbSAnLi9tZXRob2RzL3JlbW92ZS5qcyc7XG5leHBvcnQgeyBzZWFyY2ggfSBmcm9tICcuL21ldGhvZHMvc2VhcmNoLmpzJztcbmV4cG9ydCB7IHNlYXJjaFZlY3RvciB9IGZyb20gJy4vbWV0aG9kcy9zZWFyY2gtdmVjdG9yLmpzJztcbmV4cG9ydCB7IGxvYWQsIHNhdmUgfSBmcm9tICcuL21ldGhvZHMvc2VyaWFsaXphdGlvbi5qcyc7XG5leHBvcnQgeyB1cGRhdGUsIHVwZGF0ZU11bHRpcGxlIH0gZnJvbSAnLi9tZXRob2RzL3VwZGF0ZS5qcyc7XG5leHBvcnQgeyB1cHNlcnQsIHVwc2VydE11bHRpcGxlIH0gZnJvbSAnLi9tZXRob2RzL3Vwc2VydC5qcyc7XG5leHBvcnQgeyBBbnN3ZXJTZXNzaW9uIH0gZnJvbSAnLi9tZXRob2RzL2Fuc3dlci1zZXNzaW9uLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMuanMnO1xuZXhwb3J0ICogYXMgY29tcG9uZW50cyBmcm9tICcuL2NvbXBvbmVudHMuanMnO1xuZXhwb3J0ICogYXMgaW50ZXJuYWxzIGZyb20gJy4vaW50ZXJuYWxzLmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/internals.js":
/*!*********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/internals.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boundedLevenshtein: () => (/* reexport safe */ _components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__.boundedLevenshtein),\n/* harmony export */   convertDistanceToMeters: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.convertDistanceToMeters),\n/* harmony export */   formatBytes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.formatBytes),\n/* harmony export */   formatNanoseconds: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.formatNanoseconds),\n/* harmony export */   getNanosecondsTime: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.getNanosecondsTime),\n/* harmony export */   normalizeToken: () => (/* reexport safe */ _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_2__.normalizeToken),\n/* harmony export */   safeArrayPush: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.safeArrayPush),\n/* harmony export */   setDifference: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.setDifference),\n/* harmony export */   setIntersection: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.setIntersection),\n/* harmony export */   setUnion: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.setUnion),\n/* harmony export */   uniqueId: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.uniqueId)\n/* harmony export */ });\n/* harmony import */ var _components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/levenshtein.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/levenshtein.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/tokenizer/index.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/index.js\");\n\n\n\n//# sourceMappingURL=internals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2ludGVybmFscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFpRTtBQUMyRztBQUMzRztBQUNqRSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL2ludGVybmFscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBib3VuZGVkTGV2ZW5zaHRlaW4gfSBmcm9tICcuL2NvbXBvbmVudHMvbGV2ZW5zaHRlaW4uanMnO1xuZXhwb3J0IHsgZm9ybWF0Qnl0ZXMsIGZvcm1hdE5hbm9zZWNvbmRzLCBnZXROYW5vc2Vjb25kc1RpbWUsIHVuaXF1ZUlkLCBjb252ZXJ0RGlzdGFuY2VUb01ldGVycywgc2FmZUFycmF5UHVzaCwgc2V0SW50ZXJzZWN0aW9uLCBzZXRVbmlvbiwgc2V0RGlmZmVyZW5jZSB9IGZyb20gJy4vdXRpbHMuanMnO1xuZXhwb3J0IHsgbm9ybWFsaXplVG9rZW4gfSBmcm9tICcuL2NvbXBvbmVudHMvdG9rZW5pemVyL2luZGV4LmpzJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVybmFscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/internals.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/answer-session.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/answer-session.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnswerSession: () => (/* binding */ AnswerSession)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search.js\");\n\n\nconst ORAMA_SECURE_PROXY_PLUGIN_NAME = 'orama-secure-proxy';\nclass AnswerSession {\n    db;\n    proxy = null;\n    config;\n    abortController = null;\n    lastInteractionParams = null;\n    chatModel = null;\n    conversationID;\n    messages = [];\n    events;\n    initPromise;\n    state = [];\n    constructor(db, config) {\n        this.db = db;\n        this.config = config;\n        this.init();\n        this.messages = config.initialMessages || [];\n        this.events = config.events || {};\n        this.conversationID = config.conversationID || this.generateRandomID();\n    }\n    async ask(query) {\n        await this.initPromise;\n        let output = '';\n        for await (const msg of await this.askStream(query)) {\n            output += msg;\n        }\n        return output;\n    }\n    async askStream(query) {\n        await this.initPromise;\n        return this.fetchAnswer(query);\n    }\n    abortAnswer() {\n        this.abortController?.abort();\n        this.state[this.state.length - 1].aborted = true;\n        this.triggerStateChange();\n    }\n    getMessages() {\n        return this.messages;\n    }\n    clearSession() {\n        this.messages = [];\n        this.state = [];\n    }\n    regenerateLast({ stream = true }) {\n        if (this.state.length === 0 || this.messages.length === 0) {\n            throw new Error('No messages to regenerate');\n        }\n        const isLastMessageAssistant = this.messages.at(-1)?.role === 'assistant';\n        if (!isLastMessageAssistant) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('ANSWER_SESSION_LAST_MESSAGE_IS_NOT_ASSISTANT');\n        }\n        this.messages.pop();\n        this.state.pop();\n        if (stream) {\n            return this.askStream(this.lastInteractionParams);\n        }\n        return this.ask(this.lastInteractionParams);\n    }\n    async *fetchAnswer(params) {\n        if (!this.chatModel) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_SECURE_PROXY_MISSING_CHAT_MODEL');\n        }\n        this.abortController = new AbortController();\n        this.lastInteractionParams = params;\n        const interactionId = this.generateRandomID();\n        this.messages.push({ role: 'user', content: params.term ?? '' });\n        this.state.push({\n            interactionId,\n            aborted: false,\n            loading: true,\n            query: params.term ?? '',\n            response: '',\n            sources: null,\n            translatedQuery: null,\n            error: false,\n            errorMessage: null\n        });\n        const stateIdx = this.state.length - 1;\n        this.addEmptyAssistantMessage();\n        this.triggerStateChange();\n        try {\n            const sources = await (0,_search_js__WEBPACK_IMPORTED_MODULE_1__.search)(this.db, params);\n            this.state[stateIdx].sources = sources;\n            this.triggerStateChange();\n            for await (const msg of this.proxy.chatStream({ model: this.chatModel, messages: this.messages })) {\n                yield msg;\n                this.state[stateIdx].response += msg;\n                this.messages.findLast((msg) => msg.role === 'assistant').content += msg;\n                this.triggerStateChange();\n            }\n        }\n        catch (err) {\n            if (err.name === 'AbortError') {\n                this.state[stateIdx].aborted = true;\n            }\n            else {\n                this.state[stateIdx].error = true;\n                this.state[stateIdx].errorMessage = err.toString();\n            }\n            this.triggerStateChange();\n        }\n        this.state[stateIdx].loading = false;\n        this.triggerStateChange();\n        return this.state[stateIdx].response;\n    }\n    generateRandomID(length = 24) {\n        return Array.from({ length }, () => Math.floor(Math.random() * 36).toString(36)).join('');\n    }\n    triggerStateChange() {\n        if (this.events.onStateChange) {\n            this.events.onStateChange(this.state);\n        }\n    }\n    async init() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        async function getPlugin() {\n            return await self.db.plugins.find((plugin) => plugin.name === ORAMA_SECURE_PROXY_PLUGIN_NAME);\n        }\n        const plugin = await getPlugin();\n        if (!plugin) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_SECURE_PROXY_NOT_FOUND');\n        }\n        const pluginExtras = plugin.extra;\n        this.proxy = pluginExtras.proxy;\n        if (this.config.systemPrompt) {\n            this.messages.push({ role: 'system', content: this.config.systemPrompt });\n        }\n        if (pluginExtras?.pluginParams?.chat?.model) {\n            this.chatModel = pluginExtras.pluginParams.chat.model;\n        }\n        else {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_SECURE_PROXY_MISSING_CHAT_MODEL');\n        }\n    }\n    addEmptyAssistantMessage() {\n        this.messages.push({ role: 'assistant', content: '' });\n    }\n}\n//# sourceMappingURL=answer-session.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/answer-session.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/create.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/create.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create)\n/* harmony export */ });\n/* harmony import */ var _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/defaults.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/defaults.js\");\n/* harmony import */ var _components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/documents-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/documents-store.js\");\n/* harmony import */ var _components_plugins_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/plugins.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/plugins.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/index.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/index.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n/* harmony import */ var _components_sorter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/sorter.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/sorter.js\");\n/* harmony import */ var _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/tokenizer/index.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/tokenizer/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\n\n\n\n\n\n\n\n\n\nfunction validateComponents(components) {\n    const defaultComponents = {\n        formatElapsedTime: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.formatElapsedTime,\n        getDocumentIndexId: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIndexId,\n        getDocumentProperties: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentProperties,\n        validateSchema: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.validateSchema\n    };\n    for (const rawKey of _components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.FUNCTION_COMPONENTS) {\n        const key = rawKey;\n        if (components[key]) {\n            if (typeof components[key] !== 'function') {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('COMPONENT_MUST_BE_FUNCTION', key);\n            }\n        }\n        else {\n            // @ts-expect-error TSC is unable to resolve this\n            components[key] = defaultComponents[key];\n        }\n    }\n    for (const rawKey of Object.keys(components)) {\n        if (!_components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.OBJECT_COMPONENTS.includes(rawKey) && !_components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.FUNCTION_COMPONENTS.includes(rawKey)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('UNSUPPORTED_COMPONENT', rawKey);\n        }\n    }\n}\nfunction create({ schema, sort, language, components, id, plugins }) {\n    if (!components) {\n        components = {};\n    }\n    for (const plugin of plugins ?? []) {\n        if (!('getComponents' in plugin)) {\n            continue;\n        }\n        if (typeof plugin.getComponents !== 'function') {\n            continue;\n        }\n        const pluginComponents = plugin.getComponents(schema);\n        const keys = Object.keys(pluginComponents);\n        for (const key of keys) {\n            if (components[key]) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('PLUGIN_COMPONENT_CONFLICT', key, plugin.name);\n            }\n        }\n        components = {\n            ...components,\n            ...pluginComponents\n        };\n    }\n    if (!id) {\n        id = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.uniqueId)();\n    }\n    let tokenizer = components.tokenizer;\n    let index = components.index;\n    let documentsStore = components.documentsStore;\n    let sorter = components.sorter;\n    if (!tokenizer) {\n        // Use the default tokenizer\n        tokenizer = (0,_components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.createTokenizer)({ language: language ?? 'english' });\n    }\n    else if (!tokenizer.tokenize) {\n        // If there is no tokenizer function, we assume this is a TokenizerConfig\n        tokenizer = (0,_components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.createTokenizer)(tokenizer);\n    }\n    else {\n        const customTokenizer = tokenizer;\n        tokenizer = customTokenizer;\n    }\n    if (components.tokenizer && language) {\n        // Accept language only if a tokenizer is not provided\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('NO_LANGUAGE_WITH_CUSTOM_TOKENIZER');\n    }\n    const internalDocumentStore = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__.createInternalDocumentIDStore)();\n    index ||= (0,_components_index_js__WEBPACK_IMPORTED_MODULE_4__.createIndex)();\n    sorter ||= (0,_components_sorter_js__WEBPACK_IMPORTED_MODULE_6__.createSorter)();\n    documentsStore ||= (0,_components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__.createDocumentsStore)();\n    // Validate all other components\n    validateComponents(components);\n    // Assign only recognized components and hooks\n    const { getDocumentProperties, getDocumentIndexId, validateSchema, formatElapsedTime } = components;\n    const orama = {\n        data: {},\n        caches: {},\n        schema,\n        tokenizer,\n        index,\n        sorter,\n        documentsStore,\n        internalDocumentIDStore: internalDocumentStore,\n        getDocumentProperties,\n        getDocumentIndexId,\n        validateSchema,\n        beforeInsert: [],\n        afterInsert: [],\n        beforeRemove: [],\n        afterRemove: [],\n        beforeUpdate: [],\n        afterUpdate: [],\n        beforeUpsert: [],\n        afterUpsert: [],\n        beforeSearch: [],\n        afterSearch: [],\n        beforeInsertMultiple: [],\n        afterInsertMultiple: [],\n        beforeRemoveMultiple: [],\n        afterRemoveMultiple: [],\n        beforeUpdateMultiple: [],\n        afterUpdateMultiple: [],\n        beforeUpsertMultiple: [],\n        afterUpsertMultiple: [],\n        afterCreate: [],\n        formatElapsedTime,\n        id,\n        plugins,\n        version: getVersion()\n    };\n    orama.data = {\n        index: orama.index.create(orama, internalDocumentStore, schema),\n        docs: orama.documentsStore.create(orama, internalDocumentStore),\n        sorting: orama.sorter.create(orama, internalDocumentStore, schema, sort)\n    };\n    for (const hook of _components_plugins_js__WEBPACK_IMPORTED_MODULE_2__.AVAILABLE_PLUGIN_HOOKS) {\n        orama[hook] = (orama[hook] ?? []).concat((0,_components_plugins_js__WEBPACK_IMPORTED_MODULE_2__.getAllPluginsByHook)(orama, hook));\n    }\n    const afterCreate = orama['afterCreate'];\n    if (afterCreate) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.runAfterCreate)(afterCreate, orama);\n    }\n    return orama;\n}\nfunction getVersion() {\n    return '{{VERSION}}';\n}\n//# sourceMappingURL=create.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/create.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/docs.js":
/*!************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/docs.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   count: () => (/* binding */ count),\n/* harmony export */   getByID: () => (/* binding */ getByID)\n/* harmony export */ });\nfunction getByID(db, id) {\n    return db.documentsStore.get(db.data.docs, id);\n}\nfunction count(db) {\n    return db.documentsStore.count(db.data.docs);\n}\n//# sourceMappingURL=docs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL21ldGhvZHMvZG9jcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vbWV0aG9kcy9kb2NzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBnZXRCeUlEKGRiLCBpZCkge1xuICAgIHJldHVybiBkYi5kb2N1bWVudHNTdG9yZS5nZXQoZGIuZGF0YS5kb2NzLCBpZCk7XG59XG5leHBvcnQgZnVuY3Rpb24gY291bnQoZGIpIHtcbiAgICByZXR1cm4gZGIuZG9jdW1lbnRzU3RvcmUuY291bnQoZGIuZGF0YS5kb2NzKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvY3MuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/docs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/insert.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/insert.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   innerInsertMultiple: () => (/* binding */ innerInsertMultiple),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertMultiple: () => (/* binding */ insertMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n\n\n\n\n\nfunction insert(orama, doc, language, skipHooks, options) {\n    const errorProperty = orama.validateSchema(doc, orama.schema);\n    if (errorProperty) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n    }\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return innerInsertAsync(orama, doc, language, skipHooks, options);\n    }\n    return innerInsertSync(orama, doc, language, skipHooks, options);\n}\nconst ENUM_TYPE = new Set(['enum', 'enum[]']);\nconst STRING_NUMBER_TYPE = new Set(['string', 'number']);\nasync function innerInsertAsync(orama, doc, language, skipHooks, options) {\n    const { index, docs } = orama.data;\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    if (!orama.documentsStore.store(docs, id, internalId, doc)) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ALREADY_EXISTS', id);\n    }\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.beforeInsert, orama, id, doc);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const indexableValues = orama.getDocumentProperties(doc, indexableProperties);\n    for (const [key, value] of Object.entries(indexableValues)) {\n        if (typeof value === 'undefined')\n            continue;\n        const actualType = typeof value;\n        const expectedType = indexablePropertiesWithTypes[key];\n        validateDocumentProperty(actualType, expectedType, key, value);\n    }\n    await indexAndSortDocument(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.afterInsert, orama, id, doc);\n    }\n    return id;\n}\nfunction innerInsertSync(orama, doc, language, skipHooks, options) {\n    const { index, docs } = orama.data;\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    if (!orama.documentsStore.store(docs, id, internalId, doc)) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ALREADY_EXISTS', id);\n    }\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.beforeInsert, orama, id, doc);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const indexableValues = orama.getDocumentProperties(doc, indexableProperties);\n    for (const [key, value] of Object.entries(indexableValues)) {\n        if (typeof value === 'undefined')\n            continue;\n        const actualType = typeof value;\n        const expectedType = indexablePropertiesWithTypes[key];\n        validateDocumentProperty(actualType, expectedType, key, value);\n    }\n    indexAndSortDocumentSync(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.afterInsert, orama, id, doc);\n    }\n    return id;\n}\nfunction validateDocumentProperty(actualType, expectedType, key, value) {\n    if ((0,_components_js__WEBPACK_IMPORTED_MODULE_0__.isGeoPointType)(expectedType) &&\n        typeof value === 'object' &&\n        typeof value.lon === 'number' &&\n        typeof value.lat === 'number') {\n        return;\n    }\n    if ((0,_components_js__WEBPACK_IMPORTED_MODULE_0__.isVectorType)(expectedType) && Array.isArray(value))\n        return;\n    if ((0,_components_js__WEBPACK_IMPORTED_MODULE_0__.isArrayType)(expectedType) && Array.isArray(value))\n        return;\n    if (ENUM_TYPE.has(expectedType) && STRING_NUMBER_TYPE.has(actualType))\n        return;\n    if (actualType !== expectedType) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('INVALID_DOCUMENT_PROPERTY', key, expectedType, actualType);\n    }\n}\nasync function indexAndSortDocument(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options) {\n    for (const prop of indexableProperties) {\n        const value = indexableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.index.getSearchablePropertiesWithTypes(orama.data.index)[prop];\n        await orama.index.beforeInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n        const internalId = orama.internalDocumentIDStore.idToInternalId.get(id);\n        await orama.index.insert(orama.index, orama.data.index, prop, id, internalId, value, expectedType, language, orama.tokenizer, docsCount, options);\n        await orama.index.afterInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        const value = sortableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.sorter.getSortablePropertiesWithTypes(orama.data.sorting)[prop];\n        orama.sorter.insert(orama.data.sorting, prop, id, value, expectedType, language);\n    }\n}\nfunction indexAndSortDocumentSync(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options) {\n    for (const prop of indexableProperties) {\n        const value = indexableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.index.getSearchablePropertiesWithTypes(orama.data.index)[prop];\n        const internalDocumentId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n        orama.index.beforeInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n        orama.index.insert(orama.index, orama.data.index, prop, id, internalDocumentId, value, expectedType, language, orama.tokenizer, docsCount, options);\n        orama.index.afterInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        const value = sortableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.sorter.getSortablePropertiesWithTypes(orama.data.sorting)[prop];\n        orama.sorter.insert(orama.data.sorting, prop, id, value, expectedType, language);\n    }\n}\nfunction insertMultiple(orama, docs, batchSize, language, skipHooks, timeout) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.afterInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.beforeInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return innerInsertMultipleAsync(orama, docs, batchSize, language, skipHooks, timeout);\n    }\n    return innerInsertMultipleSync(orama, docs, batchSize, language, skipHooks, timeout);\n}\nasync function innerInsertMultipleAsync(orama, docs, batchSize = 1000, language, skipHooks, timeout = 0) {\n    const ids = [];\n    const processNextBatch = async (startIndex) => {\n        const endIndex = Math.min(startIndex + batchSize, docs.length);\n        const batch = docs.slice(startIndex, endIndex);\n        for (const doc of batch) {\n            const options = { avlRebalanceThreshold: batch.length };\n            const id = await insert(orama, doc, language, skipHooks, options);\n            ids.push(id);\n        }\n        return endIndex;\n    };\n    const processAllBatches = async () => {\n        let currentIndex = 0;\n        while (currentIndex < docs.length) {\n            const startTime = Date.now();\n            currentIndex = await processNextBatch(currentIndex);\n            if (timeout > 0) {\n                const elapsedTime = Date.now() - startTime;\n                const waitTime = timeout - elapsedTime;\n                if (waitTime > 0) {\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sleep)(waitTime);\n                }\n            }\n        }\n    };\n    await processAllBatches();\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runMultipleHook)(orama.afterInsertMultiple, orama, docs);\n    }\n    return ids;\n}\nfunction innerInsertMultipleSync(orama, docs, batchSize = 1000, language, skipHooks, timeout = 0) {\n    const ids = [];\n    let i = 0;\n    function processNextBatch() {\n        const batch = docs.slice(i * batchSize, (i + 1) * batchSize);\n        if (batch.length === 0)\n            return false;\n        for (const doc of batch) {\n            const options = { avlRebalanceThreshold: batch.length };\n            const id = insert(orama, doc, language, skipHooks, options);\n            ids.push(id);\n        }\n        i++;\n        return true;\n    }\n    function processAllBatches() {\n        const startTime = Date.now();\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const hasMoreBatches = processNextBatch();\n            if (!hasMoreBatches)\n                break;\n            if (timeout > 0) {\n                const elapsedTime = Date.now() - startTime;\n                if (elapsedTime >= timeout) {\n                    const remainingTime = timeout - (elapsedTime % timeout);\n                    if (remainingTime > 0) {\n                        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sleep)(remainingTime);\n                    }\n                }\n            }\n        }\n    }\n    processAllBatches();\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runMultipleHook)(orama.afterInsertMultiple, orama, docs);\n    }\n    return ids;\n}\nfunction innerInsertMultiple(orama, docs, batchSize, language, skipHooks, timeout) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return innerInsertMultipleAsync(orama, docs, batchSize, language, skipHooks, timeout);\n    }\n    return innerInsertMultipleSync(orama, docs, batchSize, language, skipHooks, timeout);\n}\n//# sourceMappingURL=insert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/insert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/remove.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/remove.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeMultiple: () => (/* binding */ removeMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\n\n\nfunction remove(orama, id, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.remove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.afterRemove);\n    if (asyncNeeded) {\n        return removeAsync(orama, id, language, skipHooks);\n    }\n    return removeSync(orama, id, language, skipHooks);\n}\nasync function removeAsync(orama, id, language, skipHooks) {\n    let result = true;\n    const { index, docs } = orama.data;\n    const doc = orama.documentsStore.get(docs, id);\n    if (!doc) {\n        return false;\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    const docId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, internalId);\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeRemove, orama, docId);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const values = orama.getDocumentProperties(doc, indexableProperties);\n    for (const prop of indexableProperties) {\n        const value = values[prop];\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        const schemaType = indexablePropertiesWithTypes[prop];\n        await orama.index.beforeRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n        if (!(await orama.index.remove(orama.index, orama.data.index, prop, id, internalId, value, schemaType, language, orama.tokenizer, docsCount))) {\n            result = false;\n        }\n        await orama.index.afterRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = await orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = await orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        if (typeof sortableValues[prop] === 'undefined') {\n            continue;\n        }\n        orama.sorter.remove(orama.data.sorting, prop, id);\n    }\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterRemove, orama, docId);\n    }\n    orama.documentsStore.remove(orama.data.docs, id, internalId);\n    return result;\n}\nfunction removeSync(orama, id, language, skipHooks) {\n    let result = true;\n    const { index, docs } = orama.data;\n    const doc = orama.documentsStore.get(docs, id);\n    if (!doc) {\n        return false;\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    const docId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, internalId);\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeRemove, orama, docId);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const values = orama.getDocumentProperties(doc, indexableProperties);\n    for (const prop of indexableProperties) {\n        const value = values[prop];\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        const schemaType = indexablePropertiesWithTypes[prop];\n        orama.index.beforeRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n        if (!orama.index.remove(orama.index, orama.data.index, prop, id, internalId, value, schemaType, language, orama.tokenizer, docsCount)) {\n            result = false;\n        }\n        orama.index.afterRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        if (typeof sortableValues[prop] === 'undefined') {\n            continue;\n        }\n        orama.sorter.remove(orama.data.sorting, prop, id);\n    }\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterRemove, orama, docId);\n    }\n    orama.documentsStore.remove(orama.data.docs, id, internalId);\n    return result;\n}\nfunction removeMultiple(orama, ids, batchSize, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.remove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.beforeRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.afterRemoveMultiple);\n    if (asyncNeeded) {\n        return removeMultipleAsync(orama, ids, batchSize, language, skipHooks);\n    }\n    return removeMultipleSync(orama, ids, batchSize, language, skipHooks);\n}\nasync function removeMultipleAsync(orama, ids, batchSize, language, skipHooks) {\n    let result = 0;\n    if (!batchSize) {\n        batchSize = 1000;\n    }\n    const docIdsForHooks = skipHooks\n        ? []\n        : ids.map((id) => (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id)));\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeRemoveMultiple, orama, docIdsForHooks);\n    }\n    await new Promise((resolve, reject) => {\n        let i = 0;\n        async function _removeMultiple() {\n            const batch = ids.slice(i * batchSize, ++i * batchSize);\n            if (!batch.length) {\n                return resolve();\n            }\n            for (const doc of batch) {\n                try {\n                    if (await remove(orama, doc, language, skipHooks)) {\n                        result++;\n                    }\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }\n            setTimeout(_removeMultiple, 0);\n        }\n        setTimeout(_removeMultiple, 0);\n    });\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterRemoveMultiple, orama, docIdsForHooks);\n    }\n    return result;\n}\nfunction removeMultipleSync(orama, ids, batchSize, language, skipHooks) {\n    let result = 0;\n    if (!batchSize) {\n        batchSize = 1000;\n    }\n    const docIdsForHooks = skipHooks\n        ? []\n        : ids.map((id) => (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id)));\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeRemoveMultiple, orama, docIdsForHooks);\n    }\n    let i = 0;\n    function _removeMultipleSync() {\n        const batch = ids.slice(i * batchSize, ++i * batchSize);\n        if (!batch.length)\n            return;\n        for (const doc of batch) {\n            if (remove(orama, doc, language, skipHooks)) {\n                result++;\n            }\n        }\n        setTimeout(_removeMultipleSync, 0);\n    }\n    _removeMultipleSync();\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterRemoveMultiple, orama, docIdsForHooks);\n    }\n    return result;\n}\n//# sourceMappingURL=remove.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/remove.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-fulltext.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/search-fulltext.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultBM25Params: () => (/* binding */ defaultBM25Params),\n/* harmony export */   fullTextSearch: () => (/* binding */ fullTextSearch),\n/* harmony export */   innerFullTextSearch: () => (/* binding */ innerFullTextSearch)\n/* harmony export */ });\n/* harmony import */ var _components_facets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/facets.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/facets.js\");\n/* harmony import */ var _components_groups_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/groups.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/groups.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _docs_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./docs.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/docs.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./search.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search.js\");\n\n\n\n\n\n\n\n\nfunction innerFullTextSearch(orama, params, language) {\n    const { term, properties } = params;\n    const index = orama.data.index;\n    // Get searchable string properties\n    let propertiesToSearch = orama.caches['propertiesToSearch'];\n    if (!propertiesToSearch) {\n        const propertiesToSearchWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n        propertiesToSearch = orama.index.getSearchableProperties(index);\n        propertiesToSearch = propertiesToSearch.filter((prop) => propertiesToSearchWithTypes[prop].startsWith('string'));\n        orama.caches['propertiesToSearch'] = propertiesToSearch;\n    }\n    if (properties && properties !== '*') {\n        for (const prop of properties) {\n            if (!propertiesToSearch.includes(prop)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.createError)('UNKNOWN_INDEX', prop, propertiesToSearch.join(', '));\n            }\n        }\n        propertiesToSearch = propertiesToSearch.filter((prop) => properties.includes(prop));\n    }\n    // If filters are enabled, we need to get the IDs of the documents that match the filters.\n    const hasFilters = Object.keys(params.where ?? {}).length > 0;\n    let whereFiltersIDs;\n    if (hasFilters) {\n        whereFiltersIDs = orama.index.searchByWhereClause(index, orama.tokenizer, params.where, language);\n    }\n    let uniqueDocsIDs;\n    // We need to perform the search if:\n    // - we have a search term\n    // - or we have properties to search\n    //   in this case, we need to return all the documents that contains at least one of the given properties\n    const threshold = params.threshold !== undefined && params.threshold !== null ? params.threshold : 1;\n    if (term || properties) {\n        const docsCount = (0,_docs_js__WEBPACK_IMPORTED_MODULE_6__.count)(orama);\n        uniqueDocsIDs = orama.index.search(index, term || '', orama.tokenizer, language, propertiesToSearch, params.exact || false, params.tolerance || 0, params.boost || {}, applyDefault(params.relevance), docsCount, whereFiltersIDs, threshold);\n    }\n    else {\n        // Tokenizer returns empty array and the search term is empty as well.\n        // We return all the documents.\n        const docIds = whereFiltersIDs\n            ? Array.from(whereFiltersIDs)\n            : Object.keys(orama.documentsStore.getAll(orama.data.docs));\n        uniqueDocsIDs = docIds.map((k) => [+k, 0]);\n    }\n    return uniqueDocsIDs;\n}\nfunction fullTextSearch(orama, params, language) {\n    const timeStart = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getNanosecondsTime)();\n    function performSearchLogic() {\n        const vectorProperties = Object.keys(orama.data.index.vectorIndexes);\n        const shouldCalculateFacets = params.facets && Object.keys(params.facets).length > 0;\n        const { limit = 10, offset = 0, distinctOn, includeVectors = false } = params;\n        const isPreflight = params.preflight === true;\n        let uniqueDocsArray = innerFullTextSearch(orama, params, language);\n        if (params.sortBy) {\n            if (typeof params.sortBy === 'function') {\n                const ids = uniqueDocsArray.map(([id]) => id);\n                const docs = orama.documentsStore.getMultiple(orama.data.docs, ids);\n                const docsWithIdAndScore = docs.map((d, i) => [\n                    uniqueDocsArray[i][0],\n                    uniqueDocsArray[i][1],\n                    d\n                ]);\n                docsWithIdAndScore.sort(params.sortBy);\n                uniqueDocsArray = docsWithIdAndScore.map(([id, score]) => [id, score]);\n            }\n            else {\n                uniqueDocsArray = orama.sorter\n                    .sortBy(orama.data.sorting, uniqueDocsArray, params.sortBy)\n                    .map(([id, score]) => [(0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_3__.getInternalDocumentId)(orama.internalDocumentIDStore, id), score]);\n            }\n        }\n        else {\n            uniqueDocsArray = uniqueDocsArray.sort(_utils_js__WEBPACK_IMPORTED_MODULE_5__.sortTokenScorePredicate);\n        }\n        let results;\n        if (!isPreflight) {\n            results = distinctOn\n                ? (0,_search_js__WEBPACK_IMPORTED_MODULE_7__.fetchDocumentsWithDistinct)(orama, uniqueDocsArray, offset, limit, distinctOn)\n                : (0,_search_js__WEBPACK_IMPORTED_MODULE_7__.fetchDocuments)(orama, uniqueDocsArray, offset, limit);\n        }\n        const searchResult = {\n            elapsed: {\n                formatted: '',\n                raw: 0\n            },\n            hits: [],\n            count: uniqueDocsArray.length\n        };\n        if (typeof results !== 'undefined') {\n            searchResult.hits = results.filter(Boolean);\n            if (!includeVectors) {\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.removeVectorsFromHits)(searchResult, vectorProperties);\n            }\n        }\n        if (shouldCalculateFacets) {\n            const facets = (0,_components_facets_js__WEBPACK_IMPORTED_MODULE_0__.getFacets)(orama, uniqueDocsArray, params.facets);\n            searchResult.facets = facets;\n        }\n        if (params.groupBy) {\n            searchResult.groups = (0,_components_groups_js__WEBPACK_IMPORTED_MODULE_1__.getGroups)(orama, uniqueDocsArray, params.groupBy);\n        }\n        searchResult.elapsed = orama.formatElapsedTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getNanosecondsTime)() - timeStart);\n        return searchResult;\n    }\n    async function executeSearchAsync() {\n        if (orama.beforeSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runBeforeSearch)(orama.beforeSearch, orama, params, language);\n        }\n        const searchResult = performSearchLogic();\n        if (orama.afterSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runAfterSearch)(orama.afterSearch, orama, params, language, searchResult);\n        }\n        return searchResult;\n    }\n    const asyncNeeded = orama.beforeSearch?.length || orama.afterSearch?.length;\n    if (asyncNeeded) {\n        return executeSearchAsync();\n    }\n    return performSearchLogic();\n}\nconst defaultBM25Params = {\n    k: 1.2,\n    b: 0.75,\n    d: 0.5\n};\nfunction applyDefault(bm25Relevance) {\n    const r = bm25Relevance ?? {};\n    r.k = r.k ?? defaultBM25Params.k;\n    r.b = r.b ?? defaultBM25Params.b;\n    r.d = r.d ?? defaultBM25Params.d;\n    return r;\n}\n//# sourceMappingURL=search-fulltext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-fulltext.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-hybrid.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/search-hybrid.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hybridSearch: () => (/* binding */ hybridSearch),\n/* harmony export */   innerHybridSearch: () => (/* binding */ innerHybridSearch)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _components_facets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/facets.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/facets.js\");\n/* harmony import */ var _components_groups_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/groups.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/groups.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search.js\");\n/* harmony import */ var _search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search-fulltext.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-fulltext.js\");\n/* harmony import */ var _search_vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./search-vector.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-vector.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n\n\n\n\n\n\n\nfunction innerHybridSearch(orama, params, language) {\n    const fullTextIDs = minMaxScoreNormalization((0,_search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__.innerFullTextSearch)(orama, params, language));\n    const vectorIDs = (0,_search_vector_js__WEBPACK_IMPORTED_MODULE_5__.innerVectorSearch)(orama, params, language);\n    const hybridWeights = params.hybridWeights;\n    return mergeAndRankResults(fullTextIDs, vectorIDs, params.term ?? '', hybridWeights);\n}\nfunction hybridSearch(orama, params, language) {\n    const timeStart = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n    function performSearchLogic() {\n        const uniqueTokenScores = innerHybridSearch(orama, params, language);\n        let facetsResults;\n        const shouldCalculateFacets = params.facets && Object.keys(params.facets).length > 0;\n        if (shouldCalculateFacets) {\n            facetsResults = (0,_components_facets_js__WEBPACK_IMPORTED_MODULE_1__.getFacets)(orama, uniqueTokenScores, params.facets);\n        }\n        let groups;\n        if (params.groupBy) {\n            groups = (0,_components_groups_js__WEBPACK_IMPORTED_MODULE_2__.getGroups)(orama, uniqueTokenScores, params.groupBy);\n        }\n        const offset = params.offset ?? 0;\n        const limit = params.limit ?? 10;\n        const results = (0,_search_js__WEBPACK_IMPORTED_MODULE_3__.fetchDocuments)(orama, uniqueTokenScores, offset, limit).filter(Boolean);\n        const timeEnd = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n        const returningResults = {\n            count: uniqueTokenScores.length,\n            elapsed: {\n                raw: Number(timeEnd - timeStart),\n                formatted: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.formatNanoseconds)(timeEnd - timeStart)\n            },\n            hits: results,\n            ...(facetsResults ? { facets: facetsResults } : {}),\n            ...(groups ? { groups } : {})\n        };\n        const includeVectors = params.includeVectors ?? false;\n        if (!includeVectors) {\n            const vectorProperties = Object.keys(orama.data.index.vectorIndexes);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.removeVectorsFromHits)(returningResults, vectorProperties);\n        }\n        return returningResults;\n    }\n    async function executeSearchAsync() {\n        if (orama.beforeSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_6__.runBeforeSearch)(orama.beforeSearch, orama, params, language);\n        }\n        const results = performSearchLogic();\n        if (orama.afterSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_6__.runAfterSearch)(orama.afterSearch, orama, params, language, results);\n        }\n        return results;\n    }\n    const asyncNeeded = orama.beforeSearch?.length || orama.afterSearch?.length;\n    if (asyncNeeded) {\n        return executeSearchAsync();\n    }\n    return performSearchLogic();\n}\nfunction extractScore(token) {\n    return token[1];\n}\nfunction minMaxScoreNormalization(results) {\n    // In this case I disabled the `prefer-spread` rule because spread seems to be slower\n    // eslint-disable-next-line prefer-spread\n    const maxScore = Math.max.apply(Math, results.map(extractScore));\n    return results.map(([id, score]) => [id, score / maxScore]);\n}\nfunction normalizeScore(score, maxScore) {\n    return score / maxScore;\n}\nfunction hybridScoreBuilder(textWeight, vectorWeight) {\n    return (textScore, vectorScore) => textScore * textWeight + vectorScore * vectorWeight;\n}\nfunction mergeAndRankResults(textResults, vectorResults, query, hybridWeights) {\n    // eslint-disable-next-line prefer-spread\n    const maxTextScore = Math.max.apply(Math, textResults.map(extractScore));\n    // eslint-disable-next-line prefer-spread\n    const maxVectorScore = Math.max.apply(Math, vectorResults.map(extractScore));\n    const hasHybridWeights = hybridWeights && hybridWeights.text && hybridWeights.vector;\n    const { text: textWeight, vector: vectorWeight } = hasHybridWeights ? hybridWeights : getQueryWeights(query);\n    const mergedResults = new Map();\n    const textResultsLength = textResults.length;\n    const hybridScore = hybridScoreBuilder(textWeight, vectorWeight);\n    for (let i = 0; i < textResultsLength; i++) {\n        const [id, score] = textResults[i];\n        const normalizedScore = normalizeScore(score, maxTextScore);\n        const hybridScoreValue = hybridScore(normalizedScore, 0);\n        mergedResults.set(id, hybridScoreValue);\n    }\n    const vectorResultsLength = vectorResults.length;\n    for (let i = 0; i < vectorResultsLength; i++) {\n        const [resultId, score] = vectorResults[i];\n        const normalizedScore = normalizeScore(score, maxVectorScore);\n        const existingRes = mergedResults.get(resultId) ?? 0;\n        mergedResults.set(resultId, existingRes + hybridScore(0, normalizedScore));\n    }\n    return [...mergedResults].sort((a, b) => b[1] - a[1]);\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction getQueryWeights(query) {\n    // In the next versions of Orama, we will ship a plugin containing a ML model to adjust the weights\n    // based on whether the query is keyword-focused, conceptual, etc.\n    // For now, we just return a fixed value.\n    return {\n        text: 0.5,\n        vector: 0.5\n    };\n}\n//# sourceMappingURL=search-hybrid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-hybrid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-vector.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/search-vector.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   innerVectorSearch: () => (/* binding */ innerVectorSearch),\n/* harmony export */   searchVector: () => (/* binding */ searchVector)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _components_facets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/facets.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/facets.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _components_groups_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/groups.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/groups.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n/* harmony import */ var _trees_vector_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../trees/vector.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/trees/vector.js\");\n\n\n\n\n\n\n\nfunction innerVectorSearch(orama, params, language) {\n    const vector = params.vector;\n    if (vector && (!('value' in vector) || !('property' in vector))) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.createError)('INVALID_VECTOR_INPUT', Object.keys(vector).join(', '));\n    }\n    const vectorIndex = orama.data.index.vectorIndexes[vector.property];\n    const vectorSize = vectorIndex.node.size;\n    if (vector?.value.length !== vectorSize) {\n        if (vector?.property === undefined || vector?.value.length === undefined) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.createError)('INVALID_INPUT_VECTOR', 'undefined', vectorSize, 'undefined');\n        }\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.createError)('INVALID_INPUT_VECTOR', vector.property, vectorSize, vector.value.length);\n    }\n    const index = orama.data.index;\n    let whereFiltersIDs;\n    const hasFilters = Object.keys(params.where ?? {}).length > 0;\n    if (hasFilters) {\n        whereFiltersIDs = orama.index.searchByWhereClause(index, orama.tokenizer, params.where, language);\n    }\n    return vectorIndex.node.find(vector.value, params.similarity ?? _trees_vector_js__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_SIMILARITY, whereFiltersIDs);\n}\nfunction searchVector(orama, params, language = 'english') {\n    const timeStart = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n    function performSearchLogic() {\n        const results = innerVectorSearch(orama, params, language)\n            .sort(_utils_js__WEBPACK_IMPORTED_MODULE_0__.sortTokenScorePredicate);\n        let facetsResults = [];\n        const shouldCalculateFacets = params.facets && Object.keys(params.facets).length > 0;\n        if (shouldCalculateFacets) {\n            const facets = (0,_components_facets_js__WEBPACK_IMPORTED_MODULE_1__.getFacets)(orama, results, params.facets);\n            facetsResults = facets;\n        }\n        const vectorProperty = params.vector.property;\n        const includeVectors = params.includeVectors ?? false;\n        const limit = params.limit ?? 10;\n        const offset = params.offset ?? 0;\n        const docs = Array.from({ length: limit });\n        for (let i = 0; i < limit; i++) {\n            const result = results[i + offset];\n            if (!result) {\n                break;\n            }\n            const doc = orama.data.docs.docs[result[0]];\n            if (doc) {\n                if (!includeVectors) {\n                    doc[vectorProperty] = null;\n                }\n                const newDoc = {\n                    id: (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, result[0]),\n                    score: result[1],\n                    document: doc\n                };\n                docs[i] = newDoc;\n            }\n        }\n        let groups = [];\n        if (params.groupBy) {\n            groups = (0,_components_groups_js__WEBPACK_IMPORTED_MODULE_3__.getGroups)(orama, results, params.groupBy);\n        }\n        const timeEnd = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n        const elapsedTime = timeEnd - timeStart;\n        return {\n            count: results.length,\n            hits: docs.filter(Boolean),\n            elapsed: {\n                raw: Number(elapsedTime),\n                formatted: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.formatNanoseconds)(elapsedTime)\n            },\n            ...(facetsResults ? { facets: facetsResults } : {}),\n            ...(groups ? { groups } : {})\n        };\n    }\n    async function executeSearchAsync() {\n        if (orama.beforeSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_5__.runBeforeSearch)(orama.beforeSearch, orama, params, language);\n        }\n        const results = performSearchLogic();\n        if (orama.afterSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_5__.runAfterSearch)(orama.afterSearch, orama, params, language, results);\n        }\n        return results;\n    }\n    const asyncNeeded = orama.beforeSearch?.length || orama.afterSearch?.length;\n    if (asyncNeeded) {\n        return executeSearchAsync();\n    }\n    // Sync path\n    return performSearchLogic();\n}\n//# sourceMappingURL=search-vector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL21ldGhvZHMvc2VhcmNoLXZlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkY7QUFDekM7QUFDVDtBQUNTO0FBQ3NDO0FBQ2pCO0FBQ2pCO0FBQ2pEO0FBQ1A7QUFDQTtBQUNBLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxnRUFBa0I7QUFDdEY7QUFDTztBQUNQLHNCQUFzQiw2REFBa0I7QUFDeEM7QUFDQTtBQUNBLGtCQUFrQiw4REFBdUI7QUFDekM7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGdFQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pELHdCQUF3QixXQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNHQUEyQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdFQUFTO0FBQzlCO0FBQ0Esd0JBQXdCLDZEQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsNERBQWlCO0FBQzVDLGFBQWE7QUFDYixrQ0FBa0Msd0JBQXdCLElBQUk7QUFDOUQsMkJBQTJCLFNBQVMsSUFBSTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixxRUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0VBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL21ldGhvZHMvc2VhcmNoLXZlY3Rvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW5vc2Vjb25kc1RpbWUsIGZvcm1hdE5hbm9zZWNvbmRzLCBzb3J0VG9rZW5TY29yZVByZWRpY2F0ZSB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB7IGdldEZhY2V0cyB9IGZyb20gJy4uL2NvbXBvbmVudHMvZmFjZXRzLmpzJztcbmltcG9ydCB7IGNyZWF0ZUVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGdldEdyb3VwcyB9IGZyb20gJy4uL2NvbXBvbmVudHMvZ3JvdXBzLmpzJztcbmltcG9ydCB7IGdldERvY3VtZW50SWRGcm9tSW50ZXJuYWxJZCB9IGZyb20gJy4uL2NvbXBvbmVudHMvaW50ZXJuYWwtZG9jdW1lbnQtaWQtc3RvcmUuanMnO1xuaW1wb3J0IHsgcnVuQmVmb3JlU2VhcmNoLCBydW5BZnRlclNlYXJjaCB9IGZyb20gJy4uL2NvbXBvbmVudHMvaG9va3MuanMnO1xuaW1wb3J0IHsgREVGQVVMVF9TSU1JTEFSSVRZIH0gZnJvbSAnLi4vdHJlZXMvdmVjdG9yLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBpbm5lclZlY3RvclNlYXJjaChvcmFtYSwgcGFyYW1zLCBsYW5ndWFnZSkge1xuICAgIGNvbnN0IHZlY3RvciA9IHBhcmFtcy52ZWN0b3I7XG4gICAgaWYgKHZlY3RvciAmJiAoISgndmFsdWUnIGluIHZlY3RvcikgfHwgISgncHJvcGVydHknIGluIHZlY3RvcikpKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdJTlZBTElEX1ZFQ1RPUl9JTlBVVCcsIE9iamVjdC5rZXlzKHZlY3Rvcikuam9pbignLCAnKSk7XG4gICAgfVxuICAgIGNvbnN0IHZlY3RvckluZGV4ID0gb3JhbWEuZGF0YS5pbmRleC52ZWN0b3JJbmRleGVzW3ZlY3Rvci5wcm9wZXJ0eV07XG4gICAgY29uc3QgdmVjdG9yU2l6ZSA9IHZlY3RvckluZGV4Lm5vZGUuc2l6ZTtcbiAgICBpZiAodmVjdG9yPy52YWx1ZS5sZW5ndGggIT09IHZlY3RvclNpemUpIHtcbiAgICAgICAgaWYgKHZlY3Rvcj8ucHJvcGVydHkgPT09IHVuZGVmaW5lZCB8fCB2ZWN0b3I/LnZhbHVlLmxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignSU5WQUxJRF9JTlBVVF9WRUNUT1InLCAndW5kZWZpbmVkJywgdmVjdG9yU2l6ZSwgJ3VuZGVmaW5lZCcpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdJTlZBTElEX0lOUFVUX1ZFQ1RPUicsIHZlY3Rvci5wcm9wZXJ0eSwgdmVjdG9yU2l6ZSwgdmVjdG9yLnZhbHVlLmxlbmd0aCk7XG4gICAgfVxuICAgIGNvbnN0IGluZGV4ID0gb3JhbWEuZGF0YS5pbmRleDtcbiAgICBsZXQgd2hlcmVGaWx0ZXJzSURzO1xuICAgIGNvbnN0IGhhc0ZpbHRlcnMgPSBPYmplY3Qua2V5cyhwYXJhbXMud2hlcmUgPz8ge30pLmxlbmd0aCA+IDA7XG4gICAgaWYgKGhhc0ZpbHRlcnMpIHtcbiAgICAgICAgd2hlcmVGaWx0ZXJzSURzID0gb3JhbWEuaW5kZXguc2VhcmNoQnlXaGVyZUNsYXVzZShpbmRleCwgb3JhbWEudG9rZW5pemVyLCBwYXJhbXMud2hlcmUsIGxhbmd1YWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHZlY3RvckluZGV4Lm5vZGUuZmluZCh2ZWN0b3IudmFsdWUsIHBhcmFtcy5zaW1pbGFyaXR5ID8/IERFRkFVTFRfU0lNSUxBUklUWSwgd2hlcmVGaWx0ZXJzSURzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2hWZWN0b3Iob3JhbWEsIHBhcmFtcywgbGFuZ3VhZ2UgPSAnZW5nbGlzaCcpIHtcbiAgICBjb25zdCB0aW1lU3RhcnQgPSBnZXROYW5vc2Vjb25kc1RpbWUoKTtcbiAgICBmdW5jdGlvbiBwZXJmb3JtU2VhcmNoTG9naWMoKSB7XG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSBpbm5lclZlY3RvclNlYXJjaChvcmFtYSwgcGFyYW1zLCBsYW5ndWFnZSlcbiAgICAgICAgICAgIC5zb3J0KHNvcnRUb2tlblNjb3JlUHJlZGljYXRlKTtcbiAgICAgICAgbGV0IGZhY2V0c1Jlc3VsdHMgPSBbXTtcbiAgICAgICAgY29uc3Qgc2hvdWxkQ2FsY3VsYXRlRmFjZXRzID0gcGFyYW1zLmZhY2V0cyAmJiBPYmplY3Qua2V5cyhwYXJhbXMuZmFjZXRzKS5sZW5ndGggPiAwO1xuICAgICAgICBpZiAoc2hvdWxkQ2FsY3VsYXRlRmFjZXRzKSB7XG4gICAgICAgICAgICBjb25zdCBmYWNldHMgPSBnZXRGYWNldHMob3JhbWEsIHJlc3VsdHMsIHBhcmFtcy5mYWNldHMpO1xuICAgICAgICAgICAgZmFjZXRzUmVzdWx0cyA9IGZhY2V0cztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2ZWN0b3JQcm9wZXJ0eSA9IHBhcmFtcy52ZWN0b3IucHJvcGVydHk7XG4gICAgICAgIGNvbnN0IGluY2x1ZGVWZWN0b3JzID0gcGFyYW1zLmluY2x1ZGVWZWN0b3JzID8/IGZhbHNlO1xuICAgICAgICBjb25zdCBsaW1pdCA9IHBhcmFtcy5saW1pdCA/PyAxMDtcbiAgICAgICAgY29uc3Qgb2Zmc2V0ID0gcGFyYW1zLm9mZnNldCA/PyAwO1xuICAgICAgICBjb25zdCBkb2NzID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogbGltaXQgfSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGltaXQ7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gcmVzdWx0c1tpICsgb2Zmc2V0XTtcbiAgICAgICAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBkb2MgPSBvcmFtYS5kYXRhLmRvY3MuZG9jc1tyZXN1bHRbMF1dO1xuICAgICAgICAgICAgaWYgKGRvYykge1xuICAgICAgICAgICAgICAgIGlmICghaW5jbHVkZVZlY3RvcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9jW3ZlY3RvclByb3BlcnR5XSA9IG51bGw7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IG5ld0RvYyA9IHtcbiAgICAgICAgICAgICAgICAgICAgaWQ6IGdldERvY3VtZW50SWRGcm9tSW50ZXJuYWxJZChvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZSwgcmVzdWx0WzBdKSxcbiAgICAgICAgICAgICAgICAgICAgc2NvcmU6IHJlc3VsdFsxXSxcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQ6IGRvY1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgZG9jc1tpXSA9IG5ld0RvYztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBsZXQgZ3JvdXBzID0gW107XG4gICAgICAgIGlmIChwYXJhbXMuZ3JvdXBCeSkge1xuICAgICAgICAgICAgZ3JvdXBzID0gZ2V0R3JvdXBzKG9yYW1hLCByZXN1bHRzLCBwYXJhbXMuZ3JvdXBCeSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdGltZUVuZCA9IGdldE5hbm9zZWNvbmRzVGltZSgpO1xuICAgICAgICBjb25zdCBlbGFwc2VkVGltZSA9IHRpbWVFbmQgLSB0aW1lU3RhcnQ7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb3VudDogcmVzdWx0cy5sZW5ndGgsXG4gICAgICAgICAgICBoaXRzOiBkb2NzLmZpbHRlcihCb29sZWFuKSxcbiAgICAgICAgICAgIGVsYXBzZWQ6IHtcbiAgICAgICAgICAgICAgICByYXc6IE51bWJlcihlbGFwc2VkVGltZSksXG4gICAgICAgICAgICAgICAgZm9ybWF0dGVkOiBmb3JtYXROYW5vc2Vjb25kcyhlbGFwc2VkVGltZSlcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAuLi4oZmFjZXRzUmVzdWx0cyA/IHsgZmFjZXRzOiBmYWNldHNSZXN1bHRzIH0gOiB7fSksXG4gICAgICAgICAgICAuLi4oZ3JvdXBzID8geyBncm91cHMgfSA6IHt9KVxuICAgICAgICB9O1xuICAgIH1cbiAgICBhc3luYyBmdW5jdGlvbiBleGVjdXRlU2VhcmNoQXN5bmMoKSB7XG4gICAgICAgIGlmIChvcmFtYS5iZWZvcmVTZWFyY2gpIHtcbiAgICAgICAgICAgIGF3YWl0IHJ1bkJlZm9yZVNlYXJjaChvcmFtYS5iZWZvcmVTZWFyY2gsIG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHRzID0gcGVyZm9ybVNlYXJjaExvZ2ljKCk7XG4gICAgICAgIGlmIChvcmFtYS5hZnRlclNlYXJjaCkge1xuICAgICAgICAgICAgYXdhaXQgcnVuQWZ0ZXJTZWFyY2gob3JhbWEuYWZ0ZXJTZWFyY2gsIG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlLCByZXN1bHRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9XG4gICAgY29uc3QgYXN5bmNOZWVkZWQgPSBvcmFtYS5iZWZvcmVTZWFyY2g/Lmxlbmd0aCB8fCBvcmFtYS5hZnRlclNlYXJjaD8ubGVuZ3RoO1xuICAgIGlmIChhc3luY05lZWRlZCkge1xuICAgICAgICByZXR1cm4gZXhlY3V0ZVNlYXJjaEFzeW5jKCk7XG4gICAgfVxuICAgIC8vIFN5bmMgcGF0aFxuICAgIHJldHVybiBwZXJmb3JtU2VhcmNoTG9naWMoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaC12ZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-vector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/search.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/search.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchDocuments: () => (/* binding */ fetchDocuments),\n/* harmony export */   fetchDocumentsWithDistinct: () => (/* binding */ fetchDocumentsWithDistinct),\n/* harmony export */   search: () => (/* binding */ search)\n/* harmony export */ });\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/internal-document-id-store.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/constants.js\");\n/* harmony import */ var _search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search-fulltext.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-fulltext.js\");\n/* harmony import */ var _search_vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./search-vector.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-vector.js\");\n/* harmony import */ var _search_hybrid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./search-hybrid.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/search-hybrid.js\");\n\n\n\n\n\n\n\nfunction search(orama, params, language) {\n    const mode = params.mode ?? _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_FULLTEXT_SEARCH;\n    if (mode === _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_FULLTEXT_SEARCH) {\n        return (0,_search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__.fullTextSearch)(orama, params, language);\n    }\n    if (mode === _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_VECTOR_SEARCH) {\n        return (0,_search_vector_js__WEBPACK_IMPORTED_MODULE_5__.searchVector)(orama, params);\n    }\n    if (mode === _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_HYBRID_SEARCH) {\n        return (0,_search_hybrid_js__WEBPACK_IMPORTED_MODULE_6__.hybridSearch)(orama, params);\n    }\n    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('INVALID_SEARCH_MODE', mode);\n}\nfunction fetchDocumentsWithDistinct(orama, uniqueDocsArray, offset, limit, distinctOn) {\n    const docs = orama.data.docs;\n    // Keep track which values we already seen\n    const values = new Map();\n    // We cannot know how many results we will have in the end,\n    // so we need cannot pre-allocate the array.\n    const results = [];\n    const resultIDs = new Set();\n    const uniqueDocsArrayLength = uniqueDocsArray.length;\n    let count = 0;\n    for (let i = 0; i < uniqueDocsArrayLength; i++) {\n        const idAndScore = uniqueDocsArray[i];\n        // If there are no more results, just break the loop\n        if (typeof idAndScore === 'undefined') {\n            continue;\n        }\n        const [id, score] = idAndScore;\n        if (resultIDs.has(id)) {\n            continue;\n        }\n        const doc = orama.documentsStore.get(docs, id);\n        const value = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getNested)(doc, distinctOn);\n        if (typeof value === 'undefined' || values.has(value)) {\n            continue;\n        }\n        values.set(value, true);\n        count++;\n        // We shouldn't consider the document if it's not in the offset range\n        if (count <= offset) {\n            continue;\n        }\n        results.push({ id: (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, id), score, document: doc });\n        resultIDs.add(id);\n        // reached the limit, break the loop\n        if (count >= offset + limit) {\n            break;\n        }\n    }\n    return results;\n}\nfunction fetchDocuments(orama, uniqueDocsArray, offset, limit) {\n    const docs = orama.data.docs;\n    const results = Array.from({\n        length: limit\n    });\n    const resultIDs = new Set();\n    // We already have the list of ALL the document IDs containing the search terms.\n    // We loop over them starting from a positional value \"offset\" and ending at \"offset + limit\"\n    // to provide pagination capabilities to the search.\n    for (let i = offset; i < limit + offset; i++) {\n        const idAndScore = uniqueDocsArray[i];\n        // If there are no more results, just break the loop\n        if (typeof idAndScore === 'undefined') {\n            break;\n        }\n        const [id, score] = idAndScore;\n        if (!resultIDs.has(id)) {\n            // We retrieve the full document only AFTER making sure that we really want it.\n            // We never retrieve the full document preventively.\n            const fullDoc = orama.documentsStore.get(docs, id);\n            results[i] = { id: (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, id), score, document: fullDoc };\n            resultIDs.add(id);\n        }\n    }\n    return results;\n}\n//# sourceMappingURL=search.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL21ldGhvZHMvc2VhcmNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMEY7QUFDL0M7QUFDSDtBQUN1RDtBQUN6QztBQUNKO0FBQ0E7QUFDM0M7QUFDUCxnQ0FBZ0MsK0RBQW9CO0FBQ3BELGlCQUFpQiwrREFBb0I7QUFDckMsZUFBZSxtRUFBYztBQUM3QjtBQUNBLGlCQUFpQiw2REFBa0I7QUFDbkMsZUFBZSwrREFBWTtBQUMzQjtBQUNBLGlCQUFpQiw2REFBa0I7QUFDbkMsZUFBZSwrREFBWTtBQUMzQjtBQUNBLFVBQVUsdURBQVc7QUFDckI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwyQkFBMkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0RBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLElBQUksc0dBQTJCLDJEQUEyRDtBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsb0JBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLElBQUksc0dBQTJCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL21ldGhvZHMvc2VhcmNoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldERvY3VtZW50SWRGcm9tSW50ZXJuYWxJZCB9IGZyb20gJy4uL2NvbXBvbmVudHMvaW50ZXJuYWwtZG9jdW1lbnQtaWQtc3RvcmUuanMnO1xuaW1wb3J0IHsgY3JlYXRlRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgZ2V0TmVzdGVkIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuaW1wb3J0IHsgTU9ERV9GVUxMVEVYVF9TRUFSQ0gsIE1PREVfSFlCUklEX1NFQVJDSCwgTU9ERV9WRUNUT1JfU0VBUkNIIH0gZnJvbSAnLi4vY29uc3RhbnRzLmpzJztcbmltcG9ydCB7IGZ1bGxUZXh0U2VhcmNoIH0gZnJvbSAnLi9zZWFyY2gtZnVsbHRleHQuanMnO1xuaW1wb3J0IHsgc2VhcmNoVmVjdG9yIH0gZnJvbSAnLi9zZWFyY2gtdmVjdG9yLmpzJztcbmltcG9ydCB7IGh5YnJpZFNlYXJjaCB9IGZyb20gJy4vc2VhcmNoLWh5YnJpZC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoKG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlKSB7XG4gICAgY29uc3QgbW9kZSA9IHBhcmFtcy5tb2RlID8/IE1PREVfRlVMTFRFWFRfU0VBUkNIO1xuICAgIGlmIChtb2RlID09PSBNT0RFX0ZVTExURVhUX1NFQVJDSCkge1xuICAgICAgICByZXR1cm4gZnVsbFRleHRTZWFyY2gob3JhbWEsIHBhcmFtcywgbGFuZ3VhZ2UpO1xuICAgIH1cbiAgICBpZiAobW9kZSA9PT0gTU9ERV9WRUNUT1JfU0VBUkNIKSB7XG4gICAgICAgIHJldHVybiBzZWFyY2hWZWN0b3Iob3JhbWEsIHBhcmFtcyk7XG4gICAgfVxuICAgIGlmIChtb2RlID09PSBNT0RFX0hZQlJJRF9TRUFSQ0gpIHtcbiAgICAgICAgcmV0dXJuIGh5YnJpZFNlYXJjaChvcmFtYSwgcGFyYW1zKTtcbiAgICB9XG4gICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0lOVkFMSURfU0VBUkNIX01PREUnLCBtb2RlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaERvY3VtZW50c1dpdGhEaXN0aW5jdChvcmFtYSwgdW5pcXVlRG9jc0FycmF5LCBvZmZzZXQsIGxpbWl0LCBkaXN0aW5jdE9uKSB7XG4gICAgY29uc3QgZG9jcyA9IG9yYW1hLmRhdGEuZG9jcztcbiAgICAvLyBLZWVwIHRyYWNrIHdoaWNoIHZhbHVlcyB3ZSBhbHJlYWR5IHNlZW5cbiAgICBjb25zdCB2YWx1ZXMgPSBuZXcgTWFwKCk7XG4gICAgLy8gV2UgY2Fubm90IGtub3cgaG93IG1hbnkgcmVzdWx0cyB3ZSB3aWxsIGhhdmUgaW4gdGhlIGVuZCxcbiAgICAvLyBzbyB3ZSBuZWVkIGNhbm5vdCBwcmUtYWxsb2NhdGUgdGhlIGFycmF5LlxuICAgIGNvbnN0IHJlc3VsdHMgPSBbXTtcbiAgICBjb25zdCByZXN1bHRJRHMgPSBuZXcgU2V0KCk7XG4gICAgY29uc3QgdW5pcXVlRG9jc0FycmF5TGVuZ3RoID0gdW5pcXVlRG9jc0FycmF5Lmxlbmd0aDtcbiAgICBsZXQgY291bnQgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdW5pcXVlRG9jc0FycmF5TGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgaWRBbmRTY29yZSA9IHVuaXF1ZURvY3NBcnJheVtpXTtcbiAgICAgICAgLy8gSWYgdGhlcmUgYXJlIG5vIG1vcmUgcmVzdWx0cywganVzdCBicmVhayB0aGUgbG9vcFxuICAgICAgICBpZiAodHlwZW9mIGlkQW5kU2NvcmUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbaWQsIHNjb3JlXSA9IGlkQW5kU2NvcmU7XG4gICAgICAgIGlmIChyZXN1bHRJRHMuaGFzKGlkKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZG9jID0gb3JhbWEuZG9jdW1lbnRzU3RvcmUuZ2V0KGRvY3MsIGlkKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBnZXROZXN0ZWQoZG9jLCBkaXN0aW5jdE9uKTtcbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3VuZGVmaW5lZCcgfHwgdmFsdWVzLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHZhbHVlcy5zZXQodmFsdWUsIHRydWUpO1xuICAgICAgICBjb3VudCsrO1xuICAgICAgICAvLyBXZSBzaG91bGRuJ3QgY29uc2lkZXIgdGhlIGRvY3VtZW50IGlmIGl0J3Mgbm90IGluIHRoZSBvZmZzZXQgcmFuZ2VcbiAgICAgICAgaWYgKGNvdW50IDw9IG9mZnNldCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0cy5wdXNoKHsgaWQ6IGdldERvY3VtZW50SWRGcm9tSW50ZXJuYWxJZChvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZSwgaWQpLCBzY29yZSwgZG9jdW1lbnQ6IGRvYyB9KTtcbiAgICAgICAgcmVzdWx0SURzLmFkZChpZCk7XG4gICAgICAgIC8vIHJlYWNoZWQgdGhlIGxpbWl0LCBicmVhayB0aGUgbG9vcFxuICAgICAgICBpZiAoY291bnQgPj0gb2Zmc2V0ICsgbGltaXQpIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoRG9jdW1lbnRzKG9yYW1hLCB1bmlxdWVEb2NzQXJyYXksIG9mZnNldCwgbGltaXQpIHtcbiAgICBjb25zdCBkb2NzID0gb3JhbWEuZGF0YS5kb2NzO1xuICAgIGNvbnN0IHJlc3VsdHMgPSBBcnJheS5mcm9tKHtcbiAgICAgICAgbGVuZ3RoOiBsaW1pdFxuICAgIH0pO1xuICAgIGNvbnN0IHJlc3VsdElEcyA9IG5ldyBTZXQoKTtcbiAgICAvLyBXZSBhbHJlYWR5IGhhdmUgdGhlIGxpc3Qgb2YgQUxMIHRoZSBkb2N1bWVudCBJRHMgY29udGFpbmluZyB0aGUgc2VhcmNoIHRlcm1zLlxuICAgIC8vIFdlIGxvb3Agb3ZlciB0aGVtIHN0YXJ0aW5nIGZyb20gYSBwb3NpdGlvbmFsIHZhbHVlIFwib2Zmc2V0XCIgYW5kIGVuZGluZyBhdCBcIm9mZnNldCArIGxpbWl0XCJcbiAgICAvLyB0byBwcm92aWRlIHBhZ2luYXRpb24gY2FwYWJpbGl0aWVzIHRvIHRoZSBzZWFyY2guXG4gICAgZm9yIChsZXQgaSA9IG9mZnNldDsgaSA8IGxpbWl0ICsgb2Zmc2V0OyBpKyspIHtcbiAgICAgICAgY29uc3QgaWRBbmRTY29yZSA9IHVuaXF1ZURvY3NBcnJheVtpXTtcbiAgICAgICAgLy8gSWYgdGhlcmUgYXJlIG5vIG1vcmUgcmVzdWx0cywganVzdCBicmVhayB0aGUgbG9vcFxuICAgICAgICBpZiAodHlwZW9mIGlkQW5kU2NvcmUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbaWQsIHNjb3JlXSA9IGlkQW5kU2NvcmU7XG4gICAgICAgIGlmICghcmVzdWx0SURzLmhhcyhpZCkpIHtcbiAgICAgICAgICAgIC8vIFdlIHJldHJpZXZlIHRoZSBmdWxsIGRvY3VtZW50IG9ubHkgQUZURVIgbWFraW5nIHN1cmUgdGhhdCB3ZSByZWFsbHkgd2FudCBpdC5cbiAgICAgICAgICAgIC8vIFdlIG5ldmVyIHJldHJpZXZlIHRoZSBmdWxsIGRvY3VtZW50IHByZXZlbnRpdmVseS5cbiAgICAgICAgICAgIGNvbnN0IGZ1bGxEb2MgPSBvcmFtYS5kb2N1bWVudHNTdG9yZS5nZXQoZG9jcywgaWQpO1xuICAgICAgICAgICAgcmVzdWx0c1tpXSA9IHsgaWQ6IGdldERvY3VtZW50SWRGcm9tSW50ZXJuYWxJZChvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZSwgaWQpLCBzY29yZSwgZG9jdW1lbnQ6IGZ1bGxEb2MgfTtcbiAgICAgICAgICAgIHJlc3VsdElEcy5hZGQoaWQpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/serialization.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/serialization.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   save: () => (/* binding */ save)\n/* harmony export */ });\nfunction load(orama, raw) {\n    orama.internalDocumentIDStore.load(orama, raw.internalDocumentIDStore);\n    orama.data.index = orama.index.load(orama.internalDocumentIDStore, raw.index);\n    orama.data.docs = orama.documentsStore.load(orama.internalDocumentIDStore, raw.docs);\n    orama.data.sorting = orama.sorter.load(orama.internalDocumentIDStore, raw.sorting);\n    orama.tokenizer.language = raw.language;\n}\nfunction save(orama) {\n    return {\n        internalDocumentIDStore: orama.internalDocumentIDStore.save(orama.internalDocumentIDStore),\n        index: orama.index.save(orama.data.index),\n        docs: orama.documentsStore.save(orama.data.docs),\n        sorting: orama.sorter.save(orama.data.sorting),\n        language: orama.tokenizer.language\n    };\n}\n//# sourceMappingURL=serialization.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL21ldGhvZHMvc2VyaWFsaXphdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2VzbS9tZXRob2RzL3NlcmlhbGl6YXRpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGxvYWQob3JhbWEsIHJhdykge1xuICAgIG9yYW1hLmludGVybmFsRG9jdW1lbnRJRFN0b3JlLmxvYWQob3JhbWEsIHJhdy5pbnRlcm5hbERvY3VtZW50SURTdG9yZSk7XG4gICAgb3JhbWEuZGF0YS5pbmRleCA9IG9yYW1hLmluZGV4LmxvYWQob3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUsIHJhdy5pbmRleCk7XG4gICAgb3JhbWEuZGF0YS5kb2NzID0gb3JhbWEuZG9jdW1lbnRzU3RvcmUubG9hZChvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZSwgcmF3LmRvY3MpO1xuICAgIG9yYW1hLmRhdGEuc29ydGluZyA9IG9yYW1hLnNvcnRlci5sb2FkKG9yYW1hLmludGVybmFsRG9jdW1lbnRJRFN0b3JlLCByYXcuc29ydGluZyk7XG4gICAgb3JhbWEudG9rZW5pemVyLmxhbmd1YWdlID0gcmF3Lmxhbmd1YWdlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNhdmUob3JhbWEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBpbnRlcm5hbERvY3VtZW50SURTdG9yZTogb3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUuc2F2ZShvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZSksXG4gICAgICAgIGluZGV4OiBvcmFtYS5pbmRleC5zYXZlKG9yYW1hLmRhdGEuaW5kZXgpLFxuICAgICAgICBkb2NzOiBvcmFtYS5kb2N1bWVudHNTdG9yZS5zYXZlKG9yYW1hLmRhdGEuZG9jcyksXG4gICAgICAgIHNvcnRpbmc6IG9yYW1hLnNvcnRlci5zYXZlKG9yYW1hLmRhdGEuc29ydGluZyksXG4gICAgICAgIGxhbmd1YWdlOiBvcmFtYS50b2tlbml6ZXIubGFuZ3VhZ2VcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXphdGlvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/serialization.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/update.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/update.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   update: () => (/* binding */ update),\n/* harmony export */   updateMultiple: () => (/* binding */ updateMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _insert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./insert.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/insert.js\");\n/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remove.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/remove.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\n\n\n\n\nfunction update(orama, id, doc, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate);\n    if (asyncNeeded) {\n        return updateAsync(orama, id, doc, language, skipHooks);\n    }\n    return updateSync(orama, id, doc, language, skipHooks);\n}\nasync function updateAsync(orama, id, doc, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpdate) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpdate, orama, id);\n    }\n    await (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.remove)(orama, id, language, skipHooks);\n    const newId = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks);\n    if (!skipHooks && orama.afterUpdate) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpdate, orama, newId);\n    }\n    return newId;\n}\nfunction updateSync(orama, id, doc, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpdate) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpdate, orama, id);\n    }\n    (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.remove)(orama, id, language, skipHooks);\n    const newId = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks);\n    if (!skipHooks && orama.afterUpdate) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpdate, orama, newId);\n    }\n    return newId;\n}\nfunction updateMultiple(orama, ids, docs, batchSize, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsertMultiple);\n    if (asyncNeeded) {\n        return updateMultipleAsync(orama, ids, docs, batchSize, language, skipHooks);\n    }\n    return updateMultipleSync(orama, ids, docs, batchSize, language, skipHooks);\n}\nasync function updateMultipleAsync(orama, ids, docs, batchSize, language, skipHooks) {\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpdateMultiple, orama, ids);\n    }\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    await (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.removeMultiple)(orama, ids, batchSize, language, skipHooks);\n    const newIds = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docs, batchSize, language, skipHooks);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpdateMultiple, orama, newIds);\n    }\n    return newIds;\n}\nfunction updateMultipleSync(orama, ids, docs, batchSize, language, skipHooks) {\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpdateMultiple, orama, ids);\n    }\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.removeMultiple)(orama, ids, batchSize, language, skipHooks);\n    const newIds = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docs, batchSize, language, skipHooks);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpdateMultiple, orama, newIds);\n    }\n    return newIds;\n}\n//# sourceMappingURL=update.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL21ldGhvZHMvdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0U7QUFDN0I7QUFDZTtBQUNMO0FBQ1A7QUFDdkM7QUFDUCx3QkFBd0IsMERBQWU7QUFDdkMsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtRUFBYTtBQUMzQjtBQUNBLFVBQVUsa0RBQU07QUFDaEIsd0JBQXdCLGtEQUFNO0FBQzlCO0FBQ0EsY0FBYyxtRUFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtRUFBYTtBQUNyQjtBQUNBLElBQUksa0RBQU07QUFDVixrQkFBa0Isa0RBQU07QUFDeEI7QUFDQSxRQUFRLG1FQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asd0JBQXdCLDBEQUFlO0FBQ3ZDLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUVBQWU7QUFDN0I7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0EsVUFBVSwwREFBYztBQUN4Qix5QkFBeUIsK0RBQW1CO0FBQzVDO0FBQ0EsY0FBYyxxRUFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxRUFBZTtBQUN2QjtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0Esa0JBQWtCLHVEQUFXO0FBQzdCO0FBQ0E7QUFDQSxJQUFJLDBEQUFjO0FBQ2xCLG1CQUFtQiwrREFBbUI7QUFDdEM7QUFDQSxRQUFRLHFFQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vbWV0aG9kcy91cGRhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcnVuTXVsdGlwbGVIb29rLCBydW5TaW5nbGVIb29rIH0gZnJvbSAnLi4vY29tcG9uZW50cy9ob29rcy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVFcnJvciB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBpbm5lckluc2VydE11bHRpcGxlLCBpbnNlcnQgfSBmcm9tICcuL2luc2VydC5qcyc7XG5pbXBvcnQgeyByZW1vdmUsIHJlbW92ZU11bHRpcGxlIH0gZnJvbSAnLi9yZW1vdmUuanMnO1xuaW1wb3J0IHsgaXNBc3luY0Z1bmN0aW9uIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZShvcmFtYSwgaWQsIGRvYywgbGFuZ3VhZ2UsIHNraXBIb29rcykge1xuICAgIGNvbnN0IGFzeW5jTmVlZGVkID0gaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmFmdGVySW5zZXJ0KSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYmVmb3JlSW5zZXJ0KSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYWZ0ZXJSZW1vdmUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5iZWZvcmVSZW1vdmUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5iZWZvcmVVcGRhdGUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5hZnRlclVwZGF0ZSk7XG4gICAgaWYgKGFzeW5jTmVlZGVkKSB7XG4gICAgICAgIHJldHVybiB1cGRhdGVBc3luYyhvcmFtYSwgaWQsIGRvYywgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgfVxuICAgIHJldHVybiB1cGRhdGVTeW5jKG9yYW1hLCBpZCwgZG9jLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZUFzeW5jKG9yYW1hLCBpZCwgZG9jLCBsYW5ndWFnZSwgc2tpcEhvb2tzKSB7XG4gICAgaWYgKCFza2lwSG9va3MgJiYgb3JhbWEuYmVmb3JlVXBkYXRlKSB7XG4gICAgICAgIGF3YWl0IHJ1blNpbmdsZUhvb2sob3JhbWEuYmVmb3JlVXBkYXRlLCBvcmFtYSwgaWQpO1xuICAgIH1cbiAgICBhd2FpdCByZW1vdmUob3JhbWEsIGlkLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbiAgICBjb25zdCBuZXdJZCA9IGF3YWl0IGluc2VydChvcmFtYSwgZG9jLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbiAgICBpZiAoIXNraXBIb29rcyAmJiBvcmFtYS5hZnRlclVwZGF0ZSkge1xuICAgICAgICBhd2FpdCBydW5TaW5nbGVIb29rKG9yYW1hLmFmdGVyVXBkYXRlLCBvcmFtYSwgbmV3SWQpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3SWQ7XG59XG5mdW5jdGlvbiB1cGRhdGVTeW5jKG9yYW1hLCBpZCwgZG9jLCBsYW5ndWFnZSwgc2tpcEhvb2tzKSB7XG4gICAgaWYgKCFza2lwSG9va3MgJiYgb3JhbWEuYmVmb3JlVXBkYXRlKSB7XG4gICAgICAgIHJ1blNpbmdsZUhvb2sob3JhbWEuYmVmb3JlVXBkYXRlLCBvcmFtYSwgaWQpO1xuICAgIH1cbiAgICByZW1vdmUob3JhbWEsIGlkLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbiAgICBjb25zdCBuZXdJZCA9IGluc2VydChvcmFtYSwgZG9jLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbiAgICBpZiAoIXNraXBIb29rcyAmJiBvcmFtYS5hZnRlclVwZGF0ZSkge1xuICAgICAgICBydW5TaW5nbGVIb29rKG9yYW1hLmFmdGVyVXBkYXRlLCBvcmFtYSwgbmV3SWQpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3SWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlTXVsdGlwbGUob3JhbWEsIGlkcywgZG9jcywgYmF0Y2hTaXplLCBsYW5ndWFnZSwgc2tpcEhvb2tzKSB7XG4gICAgY29uc3QgYXN5bmNOZWVkZWQgPSBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYWZ0ZXJJbnNlcnQpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5iZWZvcmVJbnNlcnQpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5hZnRlclJlbW92ZSkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmJlZm9yZVJlbW92ZSkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmJlZm9yZVVwZGF0ZSkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmFmdGVyVXBkYXRlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYmVmb3JlVXBkYXRlTXVsdGlwbGUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5hZnRlclVwZGF0ZU11bHRpcGxlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYmVmb3JlUmVtb3ZlTXVsdGlwbGUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5hZnRlclJlbW92ZU11bHRpcGxlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYmVmb3JlSW5zZXJ0TXVsdGlwbGUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5hZnRlckluc2VydE11bHRpcGxlKTtcbiAgICBpZiAoYXN5bmNOZWVkZWQpIHtcbiAgICAgICAgcmV0dXJuIHVwZGF0ZU11bHRpcGxlQXN5bmMob3JhbWEsIGlkcywgZG9jcywgYmF0Y2hTaXplLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbiAgICB9XG4gICAgcmV0dXJuIHVwZGF0ZU11bHRpcGxlU3luYyhvcmFtYSwgaWRzLCBkb2NzLCBiYXRjaFNpemUsIGxhbmd1YWdlLCBza2lwSG9va3MpO1xufVxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlTXVsdGlwbGVBc3luYyhvcmFtYSwgaWRzLCBkb2NzLCBiYXRjaFNpemUsIGxhbmd1YWdlLCBza2lwSG9va3MpIHtcbiAgICBpZiAoIXNraXBIb29rcykge1xuICAgICAgICBhd2FpdCBydW5NdWx0aXBsZUhvb2sob3JhbWEuYmVmb3JlVXBkYXRlTXVsdGlwbGUsIG9yYW1hLCBpZHMpO1xuICAgIH1cbiAgICBjb25zdCBkb2NzTGVuZ3RoID0gZG9jcy5sZW5ndGg7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkb2NzTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgZXJyb3JQcm9wZXJ0eSA9IG9yYW1hLnZhbGlkYXRlU2NoZW1hKGRvY3NbaV0sIG9yYW1hLnNjaGVtYSk7XG4gICAgICAgIGlmIChlcnJvclByb3BlcnR5KSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignU0NIRU1BX1ZBTElEQVRJT05fRkFJTFVSRScsIGVycm9yUHJvcGVydHkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGF3YWl0IHJlbW92ZU11bHRpcGxlKG9yYW1hLCBpZHMsIGJhdGNoU2l6ZSwgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgY29uc3QgbmV3SWRzID0gYXdhaXQgaW5uZXJJbnNlcnRNdWx0aXBsZShvcmFtYSwgZG9jcywgYmF0Y2hTaXplLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbiAgICBpZiAoIXNraXBIb29rcykge1xuICAgICAgICBhd2FpdCBydW5NdWx0aXBsZUhvb2sob3JhbWEuYWZ0ZXJVcGRhdGVNdWx0aXBsZSwgb3JhbWEsIG5ld0lkcyk7XG4gICAgfVxuICAgIHJldHVybiBuZXdJZHM7XG59XG5mdW5jdGlvbiB1cGRhdGVNdWx0aXBsZVN5bmMob3JhbWEsIGlkcywgZG9jcywgYmF0Y2hTaXplLCBsYW5ndWFnZSwgc2tpcEhvb2tzKSB7XG4gICAgaWYgKCFza2lwSG9va3MpIHtcbiAgICAgICAgcnVuTXVsdGlwbGVIb29rKG9yYW1hLmJlZm9yZVVwZGF0ZU11bHRpcGxlLCBvcmFtYSwgaWRzKTtcbiAgICB9XG4gICAgY29uc3QgZG9jc0xlbmd0aCA9IGRvY3MubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZG9jc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGVycm9yUHJvcGVydHkgPSBvcmFtYS52YWxpZGF0ZVNjaGVtYShkb2NzW2ldLCBvcmFtYS5zY2hlbWEpO1xuICAgICAgICBpZiAoZXJyb3JQcm9wZXJ0eSkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ1NDSEVNQV9WQUxJREFUSU9OX0ZBSUxVUkUnLCBlcnJvclByb3BlcnR5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW1vdmVNdWx0aXBsZShvcmFtYSwgaWRzLCBiYXRjaFNpemUsIGxhbmd1YWdlLCBza2lwSG9va3MpO1xuICAgIGNvbnN0IG5ld0lkcyA9IGlubmVySW5zZXJ0TXVsdGlwbGUob3JhbWEsIGRvY3MsIGJhdGNoU2l6ZSwgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgaWYgKCFza2lwSG9va3MpIHtcbiAgICAgICAgcnVuTXVsdGlwbGVIb29rKG9yYW1hLmFmdGVyVXBkYXRlTXVsdGlwbGUsIG9yYW1hLCBuZXdJZHMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3SWRzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXBkYXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/update.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/methods/upsert.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/methods/upsert.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   upsert: () => (/* binding */ upsert),\n/* harmony export */   upsertMultiple: () => (/* binding */ upsertMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/hooks.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/hooks.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n/* harmony import */ var _insert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./insert.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/insert.js\");\n/* harmony import */ var _update_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./update.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/methods/update.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\n\n\n\n\nfunction upsert(orama, doc, language, skipHooks, options) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return upsertAsync(orama, doc, language, skipHooks, options);\n    }\n    return upsertSync(orama, doc, language, skipHooks, options);\n}\nasync function upsertAsync(orama, doc, language, skipHooks, options) {\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    if (!skipHooks && orama.beforeUpsert) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpsert, orama, id, doc);\n    }\n    // Check if document exists\n    const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n    let resultId;\n    if (existingDoc) {\n        // Document exists, update it\n        resultId = await (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.update)(orama, id, doc, language, skipHooks);\n    }\n    else {\n        // Document doesn't exist, insert it\n        resultId = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks, options);\n    }\n    if (!skipHooks && orama.afterUpsert) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpsert, orama, resultId, doc);\n    }\n    return resultId;\n}\nfunction upsertSync(orama, doc, language, skipHooks, options) {\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    if (!skipHooks && orama.beforeUpsert) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpsert, orama, id, doc);\n    }\n    // Check if document exists\n    const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n    let resultId;\n    if (existingDoc) {\n        // Document exists, update it\n        resultId = (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.update)(orama, id, doc, language, skipHooks);\n    }\n    else {\n        // Document doesn't exist, insert it\n        resultId = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks, options);\n    }\n    if (!skipHooks && orama.afterUpsert) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpsert, orama, resultId, doc);\n    }\n    return resultId;\n}\nfunction upsertMultiple(orama, docs, batchSize, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return upsertMultipleAsync(orama, docs, batchSize, language, skipHooks);\n    }\n    return upsertMultipleSync(orama, docs, batchSize, language, skipHooks);\n}\nasync function upsertMultipleAsync(orama, docs, batchSize, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpsertMultiple) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpsertMultiple, orama, docs);\n    }\n    // Validate all documents first\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    // Separate documents into insert and update arrays\n    const docsToInsert = [];\n    const docsToUpdate = [];\n    const idsToUpdate = [];\n    for (const doc of docs) {\n        const id = orama.getDocumentIndexId(doc);\n        if (typeof id !== 'string') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n        }\n        const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n        if (existingDoc) {\n            docsToUpdate.push(doc);\n            idsToUpdate.push(id);\n        }\n        else {\n            docsToInsert.push(doc);\n        }\n    }\n    // Perform bulk operations\n    const results = [];\n    if (docsToUpdate.length > 0) {\n        const updateResults = await (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.updateMultiple)(orama, idsToUpdate, docsToUpdate, batchSize, language, skipHooks);\n        results.push(...updateResults);\n    }\n    if (docsToInsert.length > 0) {\n        const insertResults = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docsToInsert, batchSize, language, skipHooks);\n        results.push(...insertResults);\n    }\n    if (!skipHooks && orama.afterUpsertMultiple) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpsertMultiple, orama, results);\n    }\n    return results;\n}\nfunction upsertMultipleSync(orama, docs, batchSize, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpsertMultiple) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpsertMultiple, orama, docs);\n    }\n    // Validate all documents first\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    // Separate documents into insert and update arrays\n    const docsToInsert = [];\n    const docsToUpdate = [];\n    const idsToUpdate = [];\n    for (const doc of docs) {\n        const id = orama.getDocumentIndexId(doc);\n        if (typeof id !== 'string') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n        }\n        const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n        if (existingDoc) {\n            docsToUpdate.push(doc);\n            idsToUpdate.push(id);\n        }\n        else {\n            docsToInsert.push(doc);\n        }\n    }\n    // Perform bulk operations\n    const results = [];\n    if (docsToUpdate.length > 0) {\n        const updateResults = (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.updateMultiple)(orama, idsToUpdate, docsToUpdate, batchSize, language, skipHooks);\n        results.push(...updateResults);\n    }\n    if (docsToInsert.length > 0) {\n        const insertResults = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docsToInsert, batchSize, language, skipHooks);\n        results.push(...insertResults);\n    }\n    if (!skipHooks && orama.afterUpsertMultiple) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpsertMultiple, orama, results);\n    }\n    return results;\n}\n//# sourceMappingURL=upsert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/methods/upsert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/trees/avl.js":
/*!*********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/trees/avl.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVLNode: () => (/* binding */ AVLNode),\n/* harmony export */   AVLTree: () => (/* binding */ AVLTree)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n\nclass AVLNode {\n    k;\n    v;\n    l = null;\n    r = null;\n    h = 1;\n    constructor(key, value) {\n        this.k = key;\n        this.v = new Set(value);\n    }\n    updateHeight() {\n        this.h = Math.max(AVLNode.getHeight(this.l), AVLNode.getHeight(this.r)) + 1;\n    }\n    static getHeight(node) {\n        return node ? node.h : 0;\n    }\n    getBalanceFactor() {\n        return AVLNode.getHeight(this.l) - AVLNode.getHeight(this.r);\n    }\n    rotateLeft() {\n        const newRoot = this.r;\n        this.r = newRoot.l;\n        newRoot.l = this;\n        this.updateHeight();\n        newRoot.updateHeight();\n        return newRoot;\n    }\n    rotateRight() {\n        const newRoot = this.l;\n        this.l = newRoot.r;\n        newRoot.r = this;\n        this.updateHeight();\n        newRoot.updateHeight();\n        return newRoot;\n    }\n    toJSON() {\n        return {\n            k: this.k,\n            v: Array.from(this.v),\n            l: this.l ? this.l.toJSON() : null,\n            r: this.r ? this.r.toJSON() : null,\n            h: this.h\n        };\n    }\n    static fromJSON(json) {\n        const node = new AVLNode(json.k, json.v);\n        node.l = json.l ? AVLNode.fromJSON(json.l) : null;\n        node.r = json.r ? AVLNode.fromJSON(json.r) : null;\n        node.h = json.h;\n        return node;\n    }\n}\nclass AVLTree {\n    root = null;\n    insertCount = 0;\n    constructor(key, value) {\n        if (key !== undefined && value !== undefined) {\n            this.root = new AVLNode(key, value);\n        }\n    }\n    insert(key, value, rebalanceThreshold = 1000) {\n        this.root = this.insertNode(this.root, key, value, rebalanceThreshold);\n    }\n    insertMultiple(key, value, rebalanceThreshold = 1000) {\n        for (const v of value) {\n            this.insert(key, v, rebalanceThreshold);\n        }\n    }\n    // Rebalance the tree if the insert count reaches the threshold.\n    // This will improve insertion performance since we won't be rebalancing the tree on every insert.\n    // When inserting docs using `insertMultiple`, the threshold will be set to the number of docs being inserted.\n    // We can force rebalancing the tree by setting the threshold to 1 (default).\n    rebalance() {\n        if (this.root) {\n            this.root = this.rebalanceNode(this.root);\n        }\n    }\n    toJSON() {\n        return {\n            root: this.root ? this.root.toJSON() : null,\n            insertCount: this.insertCount\n        };\n    }\n    static fromJSON(json) {\n        const tree = new AVLTree();\n        tree.root = json.root ? AVLNode.fromJSON(json.root) : null;\n        tree.insertCount = json.insertCount || 0;\n        return tree;\n    }\n    insertNode(node, key, value, rebalanceThreshold) {\n        if (node === null) {\n            return new AVLNode(key, [value]);\n        }\n        const path = [];\n        let current = node;\n        let parent = null;\n        while (current !== null) {\n            path.push({ parent, node: current });\n            if (key < current.k) {\n                if (current.l === null) {\n                    current.l = new AVLNode(key, [value]);\n                    path.push({ parent: current, node: current.l });\n                    break;\n                }\n                else {\n                    parent = current;\n                    current = current.l;\n                }\n            }\n            else if (key > current.k) {\n                if (current.r === null) {\n                    current.r = new AVLNode(key, [value]);\n                    path.push({ parent: current, node: current.r });\n                    break;\n                }\n                else {\n                    parent = current;\n                    current = current.r;\n                }\n            }\n            else {\n                // Key already exists\n                current.v.add(value);\n                /*\n                if (Array.isArray(current.v)) {\n                  if (Array.isArray(value)) {\n                    ;(current.v as any[]).push(...(value as V[]))\n                  } else {\n                    ;(current.v as any[]).push(value)\n                  }\n                } else {\n                  current.v = new Set([value])\n                }\n                */\n                return node;\n            }\n        }\n        // Update heights and rebalance if necessary\n        let needRebalance = false;\n        if (this.insertCount++ % rebalanceThreshold === 0) {\n            needRebalance = true;\n        }\n        for (let i = path.length - 1; i >= 0; i--) {\n            const { parent, node: currentNode } = path[i];\n            currentNode.updateHeight();\n            if (needRebalance) {\n                const rebalancedNode = this.rebalanceNode(currentNode);\n                if (parent) {\n                    if (parent.l === currentNode) {\n                        parent.l = rebalancedNode;\n                    }\n                    else if (parent.r === currentNode) {\n                        parent.r = rebalancedNode;\n                    }\n                }\n                else {\n                    // This is the root node\n                    node = rebalancedNode;\n                }\n            }\n        }\n        return node;\n    }\n    rebalanceNode(node) {\n        const balanceFactor = node.getBalanceFactor();\n        if (balanceFactor > 1) {\n            // Left heavy\n            if (node.l && node.l.getBalanceFactor() >= 0) {\n                // Left Left Case\n                return node.rotateRight();\n            }\n            else if (node.l) {\n                // Left Right Case\n                node.l = node.l.rotateLeft();\n                return node.rotateRight();\n            }\n        }\n        if (balanceFactor < -1) {\n            // Right heavy\n            if (node.r && node.r.getBalanceFactor() <= 0) {\n                // Right Right Case\n                return node.rotateLeft();\n            }\n            else if (node.r) {\n                // Right Left Case\n                node.r = node.r.rotateRight();\n                return node.rotateLeft();\n            }\n        }\n        return node;\n    }\n    find(key) {\n        const node = this.findNodeByKey(key);\n        return node ? node.v : null;\n    }\n    contains(key) {\n        return this.find(key) !== null;\n    }\n    getSize() {\n        let count = 0;\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.l;\n            }\n            current = stack.pop();\n            count++;\n            current = current.r;\n        }\n        return count;\n    }\n    isBalanced() {\n        if (!this.root)\n            return true;\n        const stack = [this.root];\n        while (stack.length > 0) {\n            const node = stack.pop();\n            const balanceFactor = node.getBalanceFactor();\n            if (Math.abs(balanceFactor) > 1) {\n                return false;\n            }\n            if (node.l)\n                stack.push(node.l);\n            if (node.r)\n                stack.push(node.r);\n        }\n        return true;\n    }\n    remove(key) {\n        this.root = this.removeNode(this.root, key);\n    }\n    removeDocument(key, id) {\n        const node = this.findNodeByKey(key);\n        if (!node) {\n            return;\n        }\n        if (node.v.size === 1) {\n            this.root = this.removeNode(this.root, key);\n        }\n        else {\n            node.v = new Set([...node.v.values()].filter((v) => v !== id));\n        }\n    }\n    findNodeByKey(key) {\n        let node = this.root;\n        while (node) {\n            if (key < node.k) {\n                node = node.l;\n            }\n            else if (key > node.k) {\n                node = node.r;\n            }\n            else {\n                return node;\n            }\n        }\n        return null;\n    }\n    removeNode(node, key) {\n        if (node === null)\n            return null;\n        const path = [];\n        let current = node;\n        while (current !== null && current.k !== key) {\n            path.push(current);\n            if (key < current.k) {\n                current = current.l;\n            }\n            else {\n                current = current.r;\n            }\n        }\n        if (current === null) {\n            // Key not found\n            return node;\n        }\n        // Node with only one child or no child\n        if (current.l === null || current.r === null) {\n            const child = current.l ? current.l : current.r;\n            if (path.length === 0) {\n                // Node to be deleted is root\n                node = child;\n            }\n            else {\n                const parent = path[path.length - 1];\n                if (parent.l === current) {\n                    parent.l = child;\n                }\n                else {\n                    parent.r = child;\n                }\n            }\n        }\n        else {\n            // Node with two children: Get the inorder successor\n            let successorParent = current;\n            let successor = current.r;\n            while (successor.l !== null) {\n                successorParent = successor;\n                successor = successor.l;\n            }\n            // Copy the successor's content to current node\n            current.k = successor.k;\n            current.v = successor.v;\n            // Delete the successor\n            if (successorParent.l === successor) {\n                successorParent.l = successor.r;\n            }\n            else {\n                successorParent.r = successor.r;\n            }\n            current = successorParent;\n        }\n        // Update heights and rebalance\n        path.push(current);\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentNode = path[i];\n            currentNode.updateHeight();\n            const rebalancedNode = this.rebalanceNode(currentNode);\n            if (i > 0) {\n                const parent = path[i - 1];\n                if (parent.l === currentNode) {\n                    parent.l = rebalancedNode;\n                }\n                else if (parent.r === currentNode) {\n                    parent.r = rebalancedNode;\n                }\n            }\n            else {\n                // Root node\n                node = rebalancedNode;\n            }\n        }\n        return node;\n    }\n    rangeSearch(min, max) {\n        let result = new Set();\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.l;\n            }\n            current = stack.pop();\n            if (current.k >= min && current.k <= max) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.setUnion)(result, current.v);\n            }\n            if (current.k > max) {\n                break;\n            }\n            current = current.r;\n        }\n        return result;\n    }\n    greaterThan(key, inclusive = false) {\n        let result = new Set();\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.r; // Traverse right subtree first\n            }\n            current = stack.pop();\n            if ((inclusive && current.k >= key) || (!inclusive && current.k > key)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.setUnion)(result, current.v);\n            }\n            else if (current.k <= key) {\n                break; // Since we're traversing in descending order, we can break early\n            }\n            current = current.l;\n        }\n        return result;\n    }\n    lessThan(key, inclusive = false) {\n        let result = new Set();\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.l;\n            }\n            current = stack.pop();\n            if ((inclusive && current.k <= key) || (!inclusive && current.k < key)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.setUnion)(result, current.v);\n            }\n            else if (current.k > key) {\n                break; // Since we're traversing in ascending order, we can break early\n            }\n            current = current.r;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=avl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/trees/avl.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/trees/bkd.js":
/*!*********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/trees/bkd.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BKDTree: () => (/* binding */ BKDTree)\n/* harmony export */ });\nconst K = 2; // 2D points\nconst EARTH_RADIUS = 6371e3; // Earth radius in meters\nclass BKDNode {\n    point;\n    docIDs;\n    left;\n    right;\n    parent;\n    constructor(point, docIDs) {\n        this.point = point;\n        this.docIDs = new Set(docIDs);\n        this.left = null;\n        this.right = null;\n        this.parent = null;\n    }\n    toJSON() {\n        return {\n            point: this.point,\n            docIDs: Array.from(this.docIDs),\n            left: this.left ? this.left.toJSON() : null,\n            right: this.right ? this.right.toJSON() : null\n        };\n    }\n    static fromJSON(json, parent = null) {\n        const node = new BKDNode(json.point, json.docIDs);\n        node.parent = parent;\n        if (json.left) {\n            node.left = BKDNode.fromJSON(json.left, node);\n        }\n        if (json.right) {\n            node.right = BKDNode.fromJSON(json.right, node);\n        }\n        return node;\n    }\n}\nclass BKDTree {\n    root;\n    nodeMap;\n    constructor() {\n        this.root = null;\n        this.nodeMap = new Map();\n    }\n    getPointKey(point) {\n        return `${point.lon},${point.lat}`;\n    }\n    insert(point, docIDs) {\n        const pointKey = this.getPointKey(point);\n        const existingNode = this.nodeMap.get(pointKey);\n        if (existingNode) {\n            docIDs.forEach((id) => existingNode.docIDs.add(id));\n            return;\n        }\n        const newNode = new BKDNode(point, docIDs);\n        this.nodeMap.set(pointKey, newNode);\n        if (this.root == null) {\n            this.root = newNode;\n            return;\n        }\n        let node = this.root;\n        let depth = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const axis = depth % K;\n            if (axis === 0) {\n                if (point.lon < node.point.lon) {\n                    if (node.left == null) {\n                        node.left = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.left;\n                }\n                else {\n                    if (node.right == null) {\n                        node.right = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.right;\n                }\n            }\n            else {\n                if (point.lat < node.point.lat) {\n                    if (node.left == null) {\n                        node.left = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.left;\n                }\n                else {\n                    if (node.right == null) {\n                        node.right = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.right;\n                }\n            }\n            depth++;\n        }\n    }\n    contains(point) {\n        const pointKey = this.getPointKey(point);\n        return this.nodeMap.has(pointKey);\n    }\n    getDocIDsByCoordinates(point) {\n        const pointKey = this.getPointKey(point);\n        const node = this.nodeMap.get(pointKey);\n        if (node) {\n            return Array.from(node.docIDs);\n        }\n        return null;\n    }\n    removeDocByID(point, docID) {\n        const pointKey = this.getPointKey(point);\n        const node = this.nodeMap.get(pointKey);\n        if (node) {\n            node.docIDs.delete(docID);\n            if (node.docIDs.size === 0) {\n                this.nodeMap.delete(pointKey);\n                this.deleteNode(node);\n            }\n        }\n    }\n    deleteNode(node) {\n        const parent = node.parent;\n        const child = node.left ? node.left : node.right;\n        if (child) {\n            child.parent = parent;\n        }\n        if (parent) {\n            if (parent.left === node) {\n                parent.left = child;\n            }\n            else if (parent.right === node) {\n                parent.right = child;\n            }\n        }\n        else {\n            this.root = child;\n            if (this.root) {\n                this.root.parent = null;\n            }\n        }\n    }\n    searchByRadius(center, radius, inclusive = true, sort = 'asc', highPrecision = false) {\n        const distanceFn = highPrecision ? BKDTree.vincentyDistance : BKDTree.haversineDistance;\n        const stack = [{ node: this.root, depth: 0 }];\n        const result = [];\n        while (stack.length > 0) {\n            const { node, depth } = stack.pop();\n            if (node == null)\n                continue;\n            const dist = distanceFn(center, node.point);\n            if (inclusive ? dist <= radius : dist > radius) {\n                result.push({ point: node.point, docIDs: Array.from(node.docIDs) });\n            }\n            if (node.left != null) {\n                stack.push({ node: node.left, depth: depth + 1 });\n            }\n            if (node.right != null) {\n                stack.push({ node: node.right, depth: depth + 1 });\n            }\n        }\n        if (sort) {\n            result.sort((a, b) => {\n                const distA = distanceFn(center, a.point);\n                const distB = distanceFn(center, b.point);\n                return sort.toLowerCase() === 'asc' ? distA - distB : distB - distA;\n            });\n        }\n        return result;\n    }\n    searchByPolygon(polygon, inclusive = true, sort = null, highPrecision = false) {\n        const stack = [{ node: this.root, depth: 0 }];\n        const result = [];\n        while (stack.length > 0) {\n            const { node, depth } = stack.pop();\n            if (node == null)\n                continue;\n            if (node.left != null) {\n                stack.push({ node: node.left, depth: depth + 1 });\n            }\n            if (node.right != null) {\n                stack.push({ node: node.right, depth: depth + 1 });\n            }\n            const isInsidePolygon = BKDTree.isPointInPolygon(polygon, node.point);\n            if ((isInsidePolygon && inclusive) || (!isInsidePolygon && !inclusive)) {\n                result.push({ point: node.point, docIDs: Array.from(node.docIDs) });\n            }\n        }\n        const centroid = BKDTree.calculatePolygonCentroid(polygon);\n        if (sort) {\n            const distanceFn = highPrecision ? BKDTree.vincentyDistance : BKDTree.haversineDistance;\n            result.sort((a, b) => {\n                const distA = distanceFn(centroid, a.point);\n                const distB = distanceFn(centroid, b.point);\n                return sort.toLowerCase() === 'asc' ? distA - distB : distB - distA;\n            });\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            root: this.root ? this.root.toJSON() : null\n        };\n    }\n    static fromJSON(json) {\n        const tree = new BKDTree();\n        if (json.root) {\n            tree.root = BKDNode.fromJSON(json.root);\n            tree.buildNodeMap(tree.root);\n        }\n        return tree;\n    }\n    buildNodeMap(node) {\n        if (node == null)\n            return;\n        const pointKey = this.getPointKey(node.point);\n        this.nodeMap.set(pointKey, node);\n        if (node.left) {\n            this.buildNodeMap(node.left);\n        }\n        if (node.right) {\n            this.buildNodeMap(node.right);\n        }\n    }\n    static calculatePolygonCentroid(polygon) {\n        let totalArea = 0;\n        let centroidX = 0;\n        let centroidY = 0;\n        const polygonLength = polygon.length;\n        for (let i = 0, j = polygonLength - 1; i < polygonLength; j = i++) {\n            const xi = polygon[i].lon;\n            const yi = polygon[i].lat;\n            const xj = polygon[j].lon;\n            const yj = polygon[j].lat;\n            const areaSegment = xi * yj - xj * yi;\n            totalArea += areaSegment;\n            centroidX += (xi + xj) * areaSegment;\n            centroidY += (yi + yj) * areaSegment;\n        }\n        totalArea /= 2;\n        const centroidCoordinate = 6 * totalArea;\n        centroidX /= centroidCoordinate;\n        centroidY /= centroidCoordinate;\n        return { lon: centroidX, lat: centroidY };\n    }\n    static isPointInPolygon(polygon, point) {\n        let isInside = false;\n        const x = point.lon;\n        const y = point.lat;\n        const polygonLength = polygon.length;\n        for (let i = 0, j = polygonLength - 1; i < polygonLength; j = i++) {\n            const xi = polygon[i].lon;\n            const yi = polygon[i].lat;\n            const xj = polygon[j].lon;\n            const yj = polygon[j].lat;\n            const intersect = yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n            if (intersect)\n                isInside = !isInside;\n        }\n        return isInside;\n    }\n    static haversineDistance(coord1, coord2) {\n        const P = Math.PI / 180;\n        const lat1 = coord1.lat * P;\n        const lat2 = coord2.lat * P;\n        const deltaLat = (coord2.lat - coord1.lat) * P;\n        const deltaLon = (coord2.lon - coord1.lon) * P;\n        const a = Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +\n            Math.cos(lat1) * Math.cos(lat2) * Math.sin(deltaLon / 2) * Math.sin(deltaLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return EARTH_RADIUS * c;\n    }\n    static vincentyDistance(coord1, coord2) {\n        const a = 6378137;\n        const f = 1 / 298.257223563;\n        const b = (1 - f) * a;\n        const P = Math.PI / 180;\n        const lat1 = coord1.lat * P;\n        const lat2 = coord2.lat * P;\n        const deltaLon = (coord2.lon - coord1.lon) * P;\n        const U1 = Math.atan((1 - f) * Math.tan(lat1));\n        const U2 = Math.atan((1 - f) * Math.tan(lat2));\n        const sinU1 = Math.sin(U1);\n        const cosU1 = Math.cos(U1);\n        const sinU2 = Math.sin(U2);\n        const cosU2 = Math.cos(U2);\n        let lambda = deltaLon;\n        let prevLambda;\n        let iterationLimit = 1000;\n        let sinSigma;\n        let cosSigma;\n        let sigma;\n        let sinAlpha;\n        let cos2Alpha;\n        let cos2SigmaM;\n        do {\n            const sinLambda = Math.sin(lambda);\n            const cosLambda = Math.cos(lambda);\n            sinSigma = Math.sqrt(cosU2 * sinLambda * (cosU2 * sinLambda) +\n                (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda) * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda));\n            if (sinSigma === 0)\n                return 0; // co-incident points\n            cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n            sigma = Math.atan2(sinSigma, cosSigma);\n            sinAlpha = (cosU1 * cosU2 * sinLambda) / sinSigma;\n            cos2Alpha = 1 - sinAlpha * sinAlpha;\n            cos2SigmaM = cosSigma - (2 * sinU1 * sinU2) / cos2Alpha;\n            if (isNaN(cos2SigmaM))\n                cos2SigmaM = 0;\n            const C = (f / 16) * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n            prevLambda = lambda;\n            lambda =\n                deltaLon +\n                    (1 - C) *\n                        f *\n                        sinAlpha *\n                        (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n        } while (Math.abs(lambda - prevLambda) > 1e-12 && --iterationLimit > 0);\n        if (iterationLimit === 0) {\n            return NaN;\n        }\n        const uSquared = (cos2Alpha * (a * a - b * b)) / (b * b);\n        const A = 1 + (uSquared / 16384) * (4096 + uSquared * (-768 + uSquared * (320 - 175 * uSquared)));\n        const B = (uSquared / 1024) * (256 + uSquared * (-128 + uSquared * (74 - 47 * uSquared)));\n        const deltaSigma = B *\n            sinSigma *\n            (cos2SigmaM +\n                (B / 4) *\n                    (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM) -\n                        (B / 6) * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n        const s = b * A * (sigma - deltaSigma);\n        return s;\n    }\n}\n//# sourceMappingURL=bkd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/trees/bkd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/trees/bool.js":
/*!**********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/trees/bool.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoolNode: () => (/* binding */ BoolNode)\n/* harmony export */ });\nclass BoolNode {\n    true;\n    false;\n    constructor() {\n        this.true = new Set();\n        this.false = new Set();\n    }\n    insert(value, bool) {\n        if (bool) {\n            this.true.add(value);\n        }\n        else {\n            this.false.add(value);\n        }\n    }\n    delete(value, bool) {\n        if (bool) {\n            this.true.delete(value);\n        }\n        else {\n            this.false.delete(value);\n        }\n    }\n    getSize() {\n        return this.true.size + this.false.size;\n    }\n    toJSON() {\n        return {\n            true: Array.from(this.true),\n            false: Array.from(this.false)\n        };\n    }\n    static fromJSON(json) {\n        const node = new BoolNode();\n        node.true = new Set(json.true);\n        node.false = new Set(json.false);\n        return node;\n    }\n}\n//# sourceMappingURL=bool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL3RyZWVzL2Jvb2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vdHJlZXMvYm9vbC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgQm9vbE5vZGUge1xuICAgIHRydWU7XG4gICAgZmFsc2U7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMudHJ1ZSA9IG5ldyBTZXQoKTtcbiAgICAgICAgdGhpcy5mYWxzZSA9IG5ldyBTZXQoKTtcbiAgICB9XG4gICAgaW5zZXJ0KHZhbHVlLCBib29sKSB7XG4gICAgICAgIGlmIChib29sKSB7XG4gICAgICAgICAgICB0aGlzLnRydWUuYWRkKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZmFsc2UuYWRkKHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBkZWxldGUodmFsdWUsIGJvb2wpIHtcbiAgICAgICAgaWYgKGJvb2wpIHtcbiAgICAgICAgICAgIHRoaXMudHJ1ZS5kZWxldGUodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5mYWxzZS5kZWxldGUodmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldFNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRydWUuc2l6ZSArIHRoaXMuZmFsc2Uuc2l6ZTtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHJ1ZTogQXJyYXkuZnJvbSh0aGlzLnRydWUpLFxuICAgICAgICAgICAgZmFsc2U6IEFycmF5LmZyb20odGhpcy5mYWxzZSlcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21KU09OKGpzb24pIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IG5ldyBCb29sTm9kZSgpO1xuICAgICAgICBub2RlLnRydWUgPSBuZXcgU2V0KGpzb24udHJ1ZSk7XG4gICAgICAgIG5vZGUuZmFsc2UgPSBuZXcgU2V0KGpzb24uZmFsc2UpO1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ib29sLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/trees/bool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/trees/flat.js":
/*!**********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/trees/flat.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlatTree: () => (/* binding */ FlatTree)\n/* harmony export */ });\nclass FlatTree {\n    numberToDocumentId;\n    constructor() {\n        this.numberToDocumentId = new Map();\n    }\n    insert(key, value) {\n        if (this.numberToDocumentId.has(key)) {\n            this.numberToDocumentId.get(key).add(value);\n        }\n        else {\n            this.numberToDocumentId.set(key, new Set([value]));\n        }\n    }\n    find(key) {\n        const idSet = this.numberToDocumentId.get(key);\n        return idSet ? Array.from(idSet) : null;\n    }\n    remove(key) {\n        this.numberToDocumentId.delete(key);\n    }\n    removeDocument(id, key) {\n        const idSet = this.numberToDocumentId.get(key);\n        if (idSet) {\n            idSet.delete(id);\n            if (idSet.size === 0) {\n                this.numberToDocumentId.delete(key);\n            }\n        }\n    }\n    contains(key) {\n        return this.numberToDocumentId.has(key);\n    }\n    getSize() {\n        let size = 0;\n        for (const idSet of this.numberToDocumentId.values()) {\n            size += idSet.size;\n        }\n        return size;\n    }\n    filter(operation) {\n        const operationKeys = Object.keys(operation);\n        if (operationKeys.length !== 1) {\n            throw new Error('Invalid operation');\n        }\n        const operationType = operationKeys[0];\n        switch (operationType) {\n            case 'eq': {\n                const value = operation[operationType];\n                const idSet = this.numberToDocumentId.get(value);\n                return idSet ? Array.from(idSet) : [];\n            }\n            case 'in': {\n                const values = operation[operationType];\n                const resultSet = new Set();\n                for (const value of values) {\n                    const idSet = this.numberToDocumentId.get(value);\n                    if (idSet) {\n                        for (const id of idSet) {\n                            resultSet.add(id);\n                        }\n                    }\n                }\n                return Array.from(resultSet);\n            }\n            case 'nin': {\n                const excludeValues = new Set(operation[operationType]);\n                const resultSet = new Set();\n                for (const [key, idSet] of this.numberToDocumentId.entries()) {\n                    if (!excludeValues.has(key)) {\n                        for (const id of idSet) {\n                            resultSet.add(id);\n                        }\n                    }\n                }\n                return Array.from(resultSet);\n            }\n            default:\n                throw new Error('Invalid operation');\n        }\n    }\n    filterArr(operation) {\n        const operationKeys = Object.keys(operation);\n        if (operationKeys.length !== 1) {\n            throw new Error('Invalid operation');\n        }\n        const operationType = operationKeys[0];\n        switch (operationType) {\n            case 'containsAll': {\n                const values = operation[operationType];\n                const idSets = values.map((value) => this.numberToDocumentId.get(value) ?? new Set());\n                if (idSets.length === 0)\n                    return [];\n                const intersection = idSets.reduce((prev, curr) => {\n                    return new Set([...prev].filter((id) => curr.has(id)));\n                });\n                return Array.from(intersection);\n            }\n            case 'containsAny': {\n                const values = operation[operationType];\n                const idSets = values.map((value) => this.numberToDocumentId.get(value) ?? new Set());\n                if (idSets.length === 0)\n                    return [];\n                const union = idSets.reduce((prev, curr) => {\n                    return new Set([...prev, ...curr]);\n                });\n                return Array.from(union);\n            }\n            default:\n                throw new Error('Invalid operation');\n        }\n    }\n    static fromJSON(json) {\n        if (!json.numberToDocumentId) {\n            throw new Error('Invalid Flat Tree JSON');\n        }\n        const tree = new FlatTree();\n        for (const [key, ids] of json.numberToDocumentId) {\n            tree.numberToDocumentId.set(key, new Set(ids));\n        }\n        return tree;\n    }\n    toJSON() {\n        return {\n            numberToDocumentId: Array.from(this.numberToDocumentId.entries()).map(([key, idSet]) => [key, Array.from(idSet)])\n        };\n    }\n}\n//# sourceMappingURL=flat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL3RyZWVzL2ZsYXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vdHJlZXMvZmxhdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRmxhdFRyZWUge1xuICAgIG51bWJlclRvRG9jdW1lbnRJZDtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5udW1iZXJUb0RvY3VtZW50SWQgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIGluc2VydChrZXksIHZhbHVlKSB7XG4gICAgICAgIGlmICh0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5oYXMoa2V5KSkge1xuICAgICAgICAgICAgdGhpcy5udW1iZXJUb0RvY3VtZW50SWQuZ2V0KGtleSkuYWRkKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLnNldChrZXksIG5ldyBTZXQoW3ZhbHVlXSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZpbmQoa2V5KSB7XG4gICAgICAgIGNvbnN0IGlkU2V0ID0gdGhpcy5udW1iZXJUb0RvY3VtZW50SWQuZ2V0KGtleSk7XG4gICAgICAgIHJldHVybiBpZFNldCA/IEFycmF5LmZyb20oaWRTZXQpIDogbnVsbDtcbiAgICB9XG4gICAgcmVtb3ZlKGtleSkge1xuICAgICAgICB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5kZWxldGUoa2V5KTtcbiAgICB9XG4gICAgcmVtb3ZlRG9jdW1lbnQoaWQsIGtleSkge1xuICAgICAgICBjb25zdCBpZFNldCA9IHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmdldChrZXkpO1xuICAgICAgICBpZiAoaWRTZXQpIHtcbiAgICAgICAgICAgIGlkU2V0LmRlbGV0ZShpZCk7XG4gICAgICAgICAgICBpZiAoaWRTZXQuc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnRhaW5zKGtleSkge1xuICAgICAgICByZXR1cm4gdGhpcy5udW1iZXJUb0RvY3VtZW50SWQuaGFzKGtleSk7XG4gICAgfVxuICAgIGdldFNpemUoKSB7XG4gICAgICAgIGxldCBzaXplID0gMDtcbiAgICAgICAgZm9yIChjb25zdCBpZFNldCBvZiB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgc2l6ZSArPSBpZFNldC5zaXplO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzaXplO1xuICAgIH1cbiAgICBmaWx0ZXIob3BlcmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IG9wZXJhdGlvbktleXMgPSBPYmplY3Qua2V5cyhvcGVyYXRpb24pO1xuICAgICAgICBpZiAob3BlcmF0aW9uS2V5cy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBvcGVyYXRpb24nKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBvcGVyYXRpb25UeXBlID0gb3BlcmF0aW9uS2V5c1swXTtcbiAgICAgICAgc3dpdGNoIChvcGVyYXRpb25UeXBlKSB7XG4gICAgICAgICAgICBjYXNlICdlcSc6IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IG9wZXJhdGlvbltvcGVyYXRpb25UeXBlXTtcbiAgICAgICAgICAgICAgICBjb25zdCBpZFNldCA9IHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmdldCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlkU2V0ID8gQXJyYXkuZnJvbShpZFNldCkgOiBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2luJzoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IG9wZXJhdGlvbltvcGVyYXRpb25UeXBlXTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRTZXQgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWRTZXQgPSB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5nZXQodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaWRTZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaWQgb2YgaWRTZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRTZXQuYWRkKGlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHRTZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAnbmluJzoge1xuICAgICAgICAgICAgICAgIGNvbnN0IGV4Y2x1ZGVWYWx1ZXMgPSBuZXcgU2V0KG9wZXJhdGlvbltvcGVyYXRpb25UeXBlXSk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0U2V0ID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgaWRTZXRdIG9mIHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWV4Y2x1ZGVWYWx1ZXMuaGFzKGtleSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaWQgb2YgaWRTZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHRTZXQuYWRkKGlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShyZXN1bHRTZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgb3BlcmF0aW9uJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZmlsdGVyQXJyKG9wZXJhdGlvbikge1xuICAgICAgICBjb25zdCBvcGVyYXRpb25LZXlzID0gT2JqZWN0LmtleXMob3BlcmF0aW9uKTtcbiAgICAgICAgaWYgKG9wZXJhdGlvbktleXMubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgb3BlcmF0aW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uVHlwZSA9IG9wZXJhdGlvbktleXNbMF07XG4gICAgICAgIHN3aXRjaCAob3BlcmF0aW9uVHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnY29udGFpbnNBbGwnOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gb3BlcmF0aW9uW29wZXJhdGlvblR5cGVdO1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkU2V0cyA9IHZhbHVlcy5tYXAoKHZhbHVlKSA9PiB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5nZXQodmFsdWUpID8/IG5ldyBTZXQoKSk7XG4gICAgICAgICAgICAgICAgaWYgKGlkU2V0cy5sZW5ndGggPT09IDApXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgICAgICBjb25zdCBpbnRlcnNlY3Rpb24gPSBpZFNldHMucmVkdWNlKChwcmV2LCBjdXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU2V0KFsuLi5wcmV2XS5maWx0ZXIoKGlkKSA9PiBjdXJyLmhhcyhpZCkpKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShpbnRlcnNlY3Rpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2FzZSAnY29udGFpbnNBbnknOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gb3BlcmF0aW9uW29wZXJhdGlvblR5cGVdO1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkU2V0cyA9IHZhbHVlcy5tYXAoKHZhbHVlKSA9PiB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5nZXQodmFsdWUpID8/IG5ldyBTZXQoKSk7XG4gICAgICAgICAgICAgICAgaWYgKGlkU2V0cy5sZW5ndGggPT09IDApXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgICAgICBjb25zdCB1bmlvbiA9IGlkU2V0cy5yZWR1Y2UoKHByZXYsIGN1cnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBTZXQoWy4uLnByZXYsIC4uLmN1cnJdKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh1bmlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBvcGVyYXRpb24nKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xuICAgICAgICBpZiAoIWpzb24ubnVtYmVyVG9Eb2N1bWVudElkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgRmxhdCBUcmVlIEpTT04nKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0cmVlID0gbmV3IEZsYXRUcmVlKCk7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgaWRzXSBvZiBqc29uLm51bWJlclRvRG9jdW1lbnRJZCkge1xuICAgICAgICAgICAgdHJlZS5udW1iZXJUb0RvY3VtZW50SWQuc2V0KGtleSwgbmV3IFNldChpZHMpKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJlZTtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbnVtYmVyVG9Eb2N1bWVudElkOiBBcnJheS5mcm9tKHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmVudHJpZXMoKSkubWFwKChba2V5LCBpZFNldF0pID0+IFtrZXksIEFycmF5LmZyb20oaWRTZXQpXSlcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mbGF0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/trees/flat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/trees/radix.js":
/*!***********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/trees/radix.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RadixNode: () => (/* binding */ RadixNode),\n/* harmony export */   RadixTree: () => (/* binding */ RadixTree)\n/* harmony export */ });\n/* harmony import */ var _components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/levenshtein.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/components/levenshtein.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\");\n/* eslint-disable @typescript-eslint/no-this-alias */\n\n\nclass RadixNode {\n    // Node key\n    k;\n    // Node subword\n    s;\n    // Node children\n    c = new Map();\n    // Node documents\n    d = new Set();\n    // Node end\n    e;\n    // Node word\n    w = '';\n    constructor(key, subWord, end) {\n        this.k = key;\n        this.s = subWord;\n        this.e = end;\n    }\n    updateParent(parent) {\n        this.w = parent.w + this.s;\n    }\n    addDocument(docID) {\n        this.d.add(docID);\n    }\n    removeDocument(docID) {\n        return this.d.delete(docID);\n    }\n    findAllWords(output, term, exact, tolerance) {\n        const stack = [this];\n        while (stack.length > 0) {\n            const node = stack.pop();\n            if (node.e) {\n                const { w, d: docIDs } = node;\n                if (exact && w !== term) {\n                    continue;\n                }\n                // check if _output[w] exists and then add the doc to it\n                // always check in own property to prevent access to inherited properties\n                // fix https://github.com/oramasearch/orama/issues/137\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getOwnProperty)(output, w) !== null) {\n                    if (tolerance) {\n                        const difference = Math.abs(term.length - w.length);\n                        if (difference <= tolerance && (0,_components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__.syncBoundedLevenshtein)(term, w, tolerance).isBounded) {\n                            output[w] = [];\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    else {\n                        output[w] = [];\n                    }\n                }\n                // check if _output[w] exists and then add the doc to it\n                // always check in own property to prevent access to inherited properties\n                // fix https://github.com/oramasearch/orama/issues/137\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getOwnProperty)(output, w) != null && docIDs.size > 0) {\n                    const docs = output[w];\n                    for (const docID of docIDs) {\n                        if (!docs.includes(docID)) {\n                            docs.push(docID);\n                        }\n                    }\n                }\n            }\n            if (node.c.size > 0) {\n                stack.push(...node.c.values());\n            }\n        }\n        return output;\n    }\n    insert(word, docId) {\n        let node = this;\n        let i = 0;\n        const wordLength = word.length;\n        while (i < wordLength) {\n            const currentCharacter = word[i];\n            const childNode = node.c.get(currentCharacter);\n            if (childNode) {\n                const edgeLabel = childNode.s;\n                const edgeLabelLength = edgeLabel.length;\n                let j = 0;\n                // Find the common prefix length between edgeLabel and the remaining word\n                while (j < edgeLabelLength && i + j < wordLength && edgeLabel[j] === word[i + j]) {\n                    j++;\n                }\n                if (j === edgeLabelLength) {\n                    // Edge label fully matches; proceed to the child node\n                    node = childNode;\n                    i += j;\n                    if (i === wordLength) {\n                        // The word is a prefix of an existing word\n                        if (!childNode.e) {\n                            childNode.e = true;\n                        }\n                        childNode.addDocument(docId);\n                        return;\n                    }\n                    continue;\n                }\n                // Split the edgeLabel at the common prefix\n                const commonPrefix = edgeLabel.slice(0, j);\n                const newEdgeLabel = edgeLabel.slice(j);\n                const newWordLabel = word.slice(i + j);\n                // Create an intermediate node for the common prefix\n                const inbetweenNode = new RadixNode(commonPrefix[0], commonPrefix, false);\n                node.c.set(commonPrefix[0], inbetweenNode);\n                inbetweenNode.updateParent(node);\n                // Update the existing childNode\n                childNode.s = newEdgeLabel;\n                childNode.k = newEdgeLabel[0];\n                inbetweenNode.c.set(newEdgeLabel[0], childNode);\n                childNode.updateParent(inbetweenNode);\n                if (newWordLabel) {\n                    // Create a new node for the remaining part of the word\n                    const newNode = new RadixNode(newWordLabel[0], newWordLabel, true);\n                    newNode.addDocument(docId);\n                    inbetweenNode.c.set(newWordLabel[0], newNode);\n                    newNode.updateParent(inbetweenNode);\n                }\n                else {\n                    // The word ends at the inbetweenNode\n                    inbetweenNode.e = true;\n                    inbetweenNode.addDocument(docId);\n                }\n                return;\n            }\n            else {\n                // No matching child; create a new node\n                const newNode = new RadixNode(currentCharacter, word.slice(i), true);\n                newNode.addDocument(docId);\n                node.c.set(currentCharacter, newNode);\n                newNode.updateParent(node);\n                return;\n            }\n        }\n        // If we reach here, the word already exists in the tree\n        if (!node.e) {\n            node.e = true;\n        }\n        node.addDocument(docId);\n    }\n    _findLevenshtein(term, index, tolerance, originalTolerance, output) {\n        const stack = [{ node: this, index, tolerance }];\n        while (stack.length > 0) {\n            const { node, index, tolerance } = stack.pop();\n            if (node.w.startsWith(term)) {\n                node.findAllWords(output, term, false, 0);\n                continue;\n            }\n            if (tolerance < 0) {\n                continue;\n            }\n            if (node.e) {\n                const { w, d: docIDs } = node;\n                if (w) {\n                    if ((0,_components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__.syncBoundedLevenshtein)(term, w, originalTolerance).isBounded) {\n                        output[w] = [];\n                    }\n                    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getOwnProperty)(output, w) !== undefined && docIDs.size > 0) {\n                        const docs = new Set(output[w]);\n                        for (const docID of docIDs) {\n                            docs.add(docID);\n                        }\n                        output[w] = Array.from(docs);\n                    }\n                }\n            }\n            if (index >= term.length) {\n                continue;\n            }\n            const currentChar = term[index];\n            // 1. If node has child matching term[index], push { node: childNode, index +1, tolerance }\n            if (node.c.has(currentChar)) {\n                const childNode = node.c.get(currentChar);\n                stack.push({ node: childNode, index: index + 1, tolerance });\n            }\n            // 2. Push { node, index +1, tolerance -1 } (Delete operation)\n            stack.push({ node: node, index: index + 1, tolerance: tolerance - 1 });\n            // 3. For each child:\n            for (const [character, childNode] of node.c) {\n                // a) Insert operation\n                stack.push({ node: childNode, index: index, tolerance: tolerance - 1 });\n                // b) Substitute operation\n                if (character !== currentChar) {\n                    stack.push({ node: childNode, index: index + 1, tolerance: tolerance - 1 });\n                }\n            }\n        }\n    }\n    find(params) {\n        const { term, exact, tolerance } = params;\n        if (tolerance && !exact) {\n            const output = {};\n            this._findLevenshtein(term, 0, tolerance, tolerance, output);\n            return output;\n        }\n        else {\n            let node = this;\n            let i = 0;\n            const termLength = term.length;\n            while (i < termLength) {\n                const character = term[i];\n                const childNode = node.c.get(character);\n                if (childNode) {\n                    const edgeLabel = childNode.s;\n                    const edgeLabelLength = edgeLabel.length;\n                    let j = 0;\n                    // Compare edge label with the term starting from position i\n                    while (j < edgeLabelLength && i + j < termLength && edgeLabel[j] === term[i + j]) {\n                        j++;\n                    }\n                    if (j === edgeLabelLength) {\n                        // Full match of edge label; proceed to the child node\n                        node = childNode;\n                        i += j;\n                    }\n                    else if (i + j === termLength) {\n                        // The term ends in the middle of the edge label - FIX: this handles prefix matches like 'p' matching 'phone'\n                        // Check if the term matches from the beginning of the edge label\n                        if (j === termLength - i) {\n                            // Term is a prefix of the edge label\n                            if (exact) {\n                                // Exact match required but term doesn't end at a node\n                                return {};\n                            }\n                            else {\n                                // Partial match; collect words starting from this node\n                                const output = {};\n                                // Just call findAllWords on the child node to collect all words in this subtree\n                                childNode.findAllWords(output, term, exact, tolerance);\n                                return output;\n                            }\n                        }\n                        else {\n                            // Mismatch found\n                            return {};\n                        }\n                    }\n                    else {\n                        // Mismatch found\n                        return {};\n                    }\n                }\n                else {\n                    // No matching child node\n                    return {};\n                }\n            }\n            // Term fully matched; collect words starting from this node\n            const output = {};\n            node.findAllWords(output, term, exact, tolerance);\n            return output;\n        }\n    }\n    contains(term) {\n        let node = this;\n        let i = 0;\n        const termLength = term.length;\n        while (i < termLength) {\n            const character = term[i];\n            const childNode = node.c.get(character);\n            if (childNode) {\n                const edgeLabel = childNode.s;\n                const edgeLabelLength = edgeLabel.length;\n                let j = 0;\n                while (j < edgeLabelLength && i + j < termLength && edgeLabel[j] === term[i + j]) {\n                    j++;\n                }\n                if (j < edgeLabelLength) {\n                    return false;\n                }\n                i += edgeLabelLength;\n                node = childNode;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    removeWord(term) {\n        if (!term) {\n            return false;\n        }\n        let node = this;\n        const termLength = term.length;\n        const stack = [];\n        for (let i = 0; i < termLength; i++) {\n            const character = term[i];\n            if (node.c.has(character)) {\n                const childNode = node.c.get(character);\n                stack.push({ parent: node, character });\n                i += childNode.s.length - 1;\n                node = childNode;\n            }\n            else {\n                return false;\n            }\n        }\n        // Remove documents from the node\n        node.d.clear();\n        node.e = false;\n        // Clean up any nodes that no longer lead to a word\n        while (stack.length > 0 && node.c.size === 0 && !node.e && node.d.size === 0) {\n            const { parent, character } = stack.pop();\n            parent.c.delete(character);\n            node = parent;\n        }\n        return true;\n    }\n    removeDocumentByWord(term, docID, exact = true) {\n        if (!term) {\n            return true;\n        }\n        let node = this;\n        const termLength = term.length;\n        for (let i = 0; i < termLength; i++) {\n            const character = term[i];\n            if (node.c.has(character)) {\n                const childNode = node.c.get(character);\n                i += childNode.s.length - 1;\n                node = childNode;\n                if (exact && node.w !== term) {\n                    // Do nothing if the exact condition is not met.\n                }\n                else {\n                    node.removeDocument(docID);\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    static getCommonPrefix(a, b) {\n        const len = Math.min(a.length, b.length);\n        let i = 0;\n        while (i < len && a.charCodeAt(i) === b.charCodeAt(i)) {\n            i++;\n        }\n        return a.slice(0, i);\n    }\n    toJSON() {\n        return {\n            w: this.w,\n            s: this.s,\n            e: this.e,\n            k: this.k,\n            d: Array.from(this.d),\n            c: Array.from(this.c?.entries())?.map(([key, node]) => [key, node.toJSON()])\n        };\n    }\n    static fromJSON(json) {\n        const node = new RadixNode(json.k, json.s, json.e);\n        node.w = json.w;\n        node.d = new Set(json.d);\n        node.c = new Map(json?.c?.map(([key, nodeJson]) => [key, RadixNode.fromJSON(nodeJson)]));\n        return node;\n    }\n}\nclass RadixTree extends RadixNode {\n    constructor() {\n        super('', '', false);\n    }\n    static fromJSON(json) {\n        const tree = new RadixTree();\n        tree.w = json.w;\n        tree.s = json.s;\n        tree.e = json.e;\n        tree.k = json.k;\n        tree.d = new Set(json.d);\n        tree.c = new Map(json.c?.map(([key, nodeJson]) => [key, RadixNode.fromJSON(nodeJson)]));\n        return tree;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\n//# sourceMappingURL=radix.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/trees/radix.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/trees/vector.js":
/*!************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/trees/vector.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SIMILARITY: () => (/* binding */ DEFAULT_SIMILARITY),\n/* harmony export */   VectorIndex: () => (/* binding */ VectorIndex),\n/* harmony export */   findSimilarVectors: () => (/* binding */ findSimilarVectors),\n/* harmony export */   getMagnitude: () => (/* binding */ getMagnitude)\n/* harmony export */ });\nconst DEFAULT_SIMILARITY = 0.8;\nclass VectorIndex {\n    size;\n    vectors = new Map();\n    constructor(size) {\n        this.size = size;\n    }\n    add(internalDocumentId, value) {\n        if (!(value instanceof Float32Array)) {\n            value = new Float32Array(value);\n        }\n        const magnitude = getMagnitude(value, this.size);\n        this.vectors.set(internalDocumentId, [magnitude, value]);\n    }\n    remove(internalDocumentId) {\n        this.vectors.delete(internalDocumentId);\n    }\n    find(vector, similarity, whereFiltersIDs) {\n        if (!(vector instanceof Float32Array)) {\n            vector = new Float32Array(vector);\n        }\n        const results = findSimilarVectors(vector, whereFiltersIDs, this.vectors, this.size, similarity);\n        return results;\n    }\n    toJSON() {\n        const vectors = [];\n        for (const [id, [magnitude, vector]] of this.vectors) {\n            vectors.push([id, [magnitude, Array.from(vector)]]);\n        }\n        return {\n            size: this.size,\n            vectors,\n        };\n    }\n    static fromJSON(json) {\n        const raw = json;\n        const index = new VectorIndex(raw.size);\n        for (const [id, [magnitude, vector]] of raw.vectors) {\n            index.vectors.set(id, [magnitude, new Float32Array(vector)]);\n        }\n        return index;\n    }\n}\nfunction getMagnitude(vector, vectorLength) {\n    let magnitude = 0;\n    for (let i = 0; i < vectorLength; i++) {\n        magnitude += vector[i] * vector[i];\n    }\n    return Math.sqrt(magnitude);\n}\n// @todo: Write plugins for Node and Browsers to use parallel computation for this function\nfunction findSimilarVectors(targetVector, keys, vectors, length, threshold) {\n    const targetMagnitude = getMagnitude(targetVector, length);\n    const similarVectors = [];\n    const base = keys ? keys : vectors.keys();\n    for (const vectorId of base) {\n        const entry = vectors.get(vectorId);\n        if (!entry) {\n            continue;\n        }\n        const magnitude = entry[0];\n        const vector = entry[1];\n        let dotProduct = 0;\n        for (let i = 0; i < length; i++) {\n            dotProduct += targetVector[i] * vector[i];\n        }\n        const similarity = dotProduct / (targetMagnitude * magnitude);\n        if (similarity >= threshold) {\n            similarVectors.push([vectorId, similarity]);\n        }\n    }\n    return similarVectors;\n}\n//# sourceMappingURL=vector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL3RyZWVzL3ZlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2VzbS90cmVlcy92ZWN0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IERFRkFVTFRfU0lNSUxBUklUWSA9IDAuODtcbmV4cG9ydCBjbGFzcyBWZWN0b3JJbmRleCB7XG4gICAgc2l6ZTtcbiAgICB2ZWN0b3JzID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0cnVjdG9yKHNpemUpIHtcbiAgICAgICAgdGhpcy5zaXplID0gc2l6ZTtcbiAgICB9XG4gICAgYWRkKGludGVybmFsRG9jdW1lbnRJZCwgdmFsdWUpIHtcbiAgICAgICAgaWYgKCEodmFsdWUgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkpKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IG5ldyBGbG9hdDMyQXJyYXkodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1hZ25pdHVkZSA9IGdldE1hZ25pdHVkZSh2YWx1ZSwgdGhpcy5zaXplKTtcbiAgICAgICAgdGhpcy52ZWN0b3JzLnNldChpbnRlcm5hbERvY3VtZW50SWQsIFttYWduaXR1ZGUsIHZhbHVlXSk7XG4gICAgfVxuICAgIHJlbW92ZShpbnRlcm5hbERvY3VtZW50SWQpIHtcbiAgICAgICAgdGhpcy52ZWN0b3JzLmRlbGV0ZShpbnRlcm5hbERvY3VtZW50SWQpO1xuICAgIH1cbiAgICBmaW5kKHZlY3Rvciwgc2ltaWxhcml0eSwgd2hlcmVGaWx0ZXJzSURzKSB7XG4gICAgICAgIGlmICghKHZlY3RvciBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSkpIHtcbiAgICAgICAgICAgIHZlY3RvciA9IG5ldyBGbG9hdDMyQXJyYXkodmVjdG9yKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHRzID0gZmluZFNpbWlsYXJWZWN0b3JzKHZlY3Rvciwgd2hlcmVGaWx0ZXJzSURzLCB0aGlzLnZlY3RvcnMsIHRoaXMuc2l6ZSwgc2ltaWxhcml0eSk7XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIGNvbnN0IHZlY3RvcnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBbaWQsIFttYWduaXR1ZGUsIHZlY3Rvcl1dIG9mIHRoaXMudmVjdG9ycykge1xuICAgICAgICAgICAgdmVjdG9ycy5wdXNoKFtpZCwgW21hZ25pdHVkZSwgQXJyYXkuZnJvbSh2ZWN0b3IpXV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzaXplOiB0aGlzLnNpemUsXG4gICAgICAgICAgICB2ZWN0b3JzLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUpTT04oanNvbikge1xuICAgICAgICBjb25zdCByYXcgPSBqc29uO1xuICAgICAgICBjb25zdCBpbmRleCA9IG5ldyBWZWN0b3JJbmRleChyYXcuc2l6ZSk7XG4gICAgICAgIGZvciAoY29uc3QgW2lkLCBbbWFnbml0dWRlLCB2ZWN0b3JdXSBvZiByYXcudmVjdG9ycykge1xuICAgICAgICAgICAgaW5kZXgudmVjdG9ycy5zZXQoaWQsIFttYWduaXR1ZGUsIG5ldyBGbG9hdDMyQXJyYXkodmVjdG9yKV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbmRleDtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TWFnbml0dWRlKHZlY3RvciwgdmVjdG9yTGVuZ3RoKSB7XG4gICAgbGV0IG1hZ25pdHVkZSA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2ZWN0b3JMZW5ndGg7IGkrKykge1xuICAgICAgICBtYWduaXR1ZGUgKz0gdmVjdG9yW2ldICogdmVjdG9yW2ldO1xuICAgIH1cbiAgICByZXR1cm4gTWF0aC5zcXJ0KG1hZ25pdHVkZSk7XG59XG4vLyBAdG9kbzogV3JpdGUgcGx1Z2lucyBmb3IgTm9kZSBhbmQgQnJvd3NlcnMgdG8gdXNlIHBhcmFsbGVsIGNvbXB1dGF0aW9uIGZvciB0aGlzIGZ1bmN0aW9uXG5leHBvcnQgZnVuY3Rpb24gZmluZFNpbWlsYXJWZWN0b3JzKHRhcmdldFZlY3Rvciwga2V5cywgdmVjdG9ycywgbGVuZ3RoLCB0aHJlc2hvbGQpIHtcbiAgICBjb25zdCB0YXJnZXRNYWduaXR1ZGUgPSBnZXRNYWduaXR1ZGUodGFyZ2V0VmVjdG9yLCBsZW5ndGgpO1xuICAgIGNvbnN0IHNpbWlsYXJWZWN0b3JzID0gW107XG4gICAgY29uc3QgYmFzZSA9IGtleXMgPyBrZXlzIDogdmVjdG9ycy5rZXlzKCk7XG4gICAgZm9yIChjb25zdCB2ZWN0b3JJZCBvZiBiYXNlKSB7XG4gICAgICAgIGNvbnN0IGVudHJ5ID0gdmVjdG9ycy5nZXQodmVjdG9ySWQpO1xuICAgICAgICBpZiAoIWVudHJ5KSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtYWduaXR1ZGUgPSBlbnRyeVswXTtcbiAgICAgICAgY29uc3QgdmVjdG9yID0gZW50cnlbMV07XG4gICAgICAgIGxldCBkb3RQcm9kdWN0ID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgZG90UHJvZHVjdCArPSB0YXJnZXRWZWN0b3JbaV0gKiB2ZWN0b3JbaV07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2ltaWxhcml0eSA9IGRvdFByb2R1Y3QgLyAodGFyZ2V0TWFnbml0dWRlICogbWFnbml0dWRlKTtcbiAgICAgICAgaWYgKHNpbWlsYXJpdHkgPj0gdGhyZXNob2xkKSB7XG4gICAgICAgICAgICBzaW1pbGFyVmVjdG9ycy5wdXNoKFt2ZWN0b3JJZCwgc2ltaWxhcml0eV0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzaW1pbGFyVmVjdG9ycztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlY3Rvci5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/trees/vector.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/types.js":
/*!*****************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/types.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MODE_FULLTEXT_SEARCH: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MODE_FULLTEXT_SEARCH),\n/* harmony export */   MODE_HYBRID_SEARCH: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MODE_HYBRID_SEARCH),\n/* harmony export */   MODE_VECTOR_SEARCH: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MODE_VECTOR_SEARCH),\n/* harmony export */   kInsertions: () => (/* binding */ kInsertions),\n/* harmony export */   kRemovals: () => (/* binding */ kRemovals)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/constants.js\");\n\nconst kInsertions = Symbol('orama.insertions');\nconst kRemovals = Symbol('orama.removals');\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4RjtBQUN2RjtBQUNBO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2VzbS90eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBNT0RFX0ZVTExURVhUX1NFQVJDSCwgTU9ERV9IWUJSSURfU0VBUkNILCBNT0RFX1ZFQ1RPUl9TRUFSQ0ggfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5leHBvcnQgY29uc3Qga0luc2VydGlvbnMgPSBTeW1ib2woJ29yYW1hLmluc2VydGlvbnMnKTtcbmV4cG9ydCBjb25zdCBrUmVtb3ZhbHMgPSBTeW1ib2woJ29yYW1hLnJlbW92YWxzJyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@orama/orama/dist/esm/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/@orama/orama/dist/esm/utils.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_ARGUMENT_FOR_STACK: () => (/* binding */ MAX_ARGUMENT_FOR_STACK),\n/* harmony export */   convertDistanceToMeters: () => (/* binding */ convertDistanceToMeters),\n/* harmony export */   flattenObject: () => (/* binding */ flattenObject),\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   formatNanoseconds: () => (/* binding */ formatNanoseconds),\n/* harmony export */   getDocumentProperties: () => (/* binding */ getDocumentProperties),\n/* harmony export */   getNanosecondTimeViaPerformance: () => (/* binding */ getNanosecondTimeViaPerformance),\n/* harmony export */   getNanosecondsTime: () => (/* binding */ getNanosecondsTime),\n/* harmony export */   getNested: () => (/* binding */ getNested),\n/* harmony export */   getOwnProperty: () => (/* binding */ getOwnProperty),\n/* harmony export */   getTokenFrequency: () => (/* binding */ getTokenFrequency),\n/* harmony export */   insertSortedValue: () => (/* binding */ insertSortedValue),\n/* harmony export */   intersect: () => (/* binding */ intersect),\n/* harmony export */   isAsyncFunction: () => (/* binding */ isAsyncFunction),\n/* harmony export */   isInsideNode: () => (/* binding */ isInsideNode),\n/* harmony export */   isInsideWebWorker: () => (/* binding */ isInsideWebWorker),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   removeVectorsFromHits: () => (/* binding */ removeVectorsFromHits),\n/* harmony export */   safeArrayPush: () => (/* binding */ safeArrayPush),\n/* harmony export */   setDifference: () => (/* binding */ setDifference),\n/* harmony export */   setIntersection: () => (/* binding */ setIntersection),\n/* harmony export */   setUnion: () => (/* binding */ setUnion),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   sortTokenScorePredicate: () => (/* binding */ sortTokenScorePredicate),\n/* harmony export */   sprintf: () => (/* binding */ sprintf),\n/* harmony export */   uniqueId: () => (/* binding */ uniqueId)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/./node_modules/@orama/orama/dist/esm/errors.js\");\n\nconst baseId = Date.now().toString().slice(5);\nlet lastId = 0;\nconst k = 1024;\nconst nano = BigInt(1e3);\nconst milli = BigInt(1e6);\nconst second = BigInt(1e9);\nconst isServer = typeof window === 'undefined';\n/**\n * This value can be increased up to 100_000\n * But i don't know if this value change from nodejs to nodejs\n * So I will keep a safer value here.\n */\nconst MAX_ARGUMENT_FOR_STACK = 65535;\n/**\n * This method is needed to used because of issues like: https://github.com/oramasearch/orama/issues/301\n * that issue is caused because the array that is pushed is huge (>100k)\n *\n * @example\n * ```ts\n * safeArrayPush(myArray, [1, 2])\n * ```\n */\nfunction safeArrayPush(arr, newArr) {\n    if (newArr.length < MAX_ARGUMENT_FOR_STACK) {\n        Array.prototype.push.apply(arr, newArr);\n    }\n    else {\n        const newArrLength = newArr.length;\n        for (let i = 0; i < newArrLength; i += MAX_ARGUMENT_FOR_STACK) {\n            Array.prototype.push.apply(arr, newArr.slice(i, i + MAX_ARGUMENT_FOR_STACK));\n        }\n    }\n}\nfunction sprintf(template, ...args) {\n    return template.replace(/%(?:(?<position>\\d+)\\$)?(?<width>-?\\d*\\.?\\d*)(?<type>[dfs])/g, function (...replaceArgs) {\n        const groups = replaceArgs[replaceArgs.length - 1];\n        const { width: rawWidth, type, position } = groups;\n        const replacement = position ? args[Number.parseInt(position) - 1] : args.shift();\n        const width = rawWidth === '' ? 0 : Number.parseInt(rawWidth);\n        switch (type) {\n            case 'd':\n                return replacement.toString().padStart(width, '0');\n            case 'f': {\n                let value = replacement;\n                const [padding, precision] = rawWidth.split('.').map((w) => Number.parseFloat(w));\n                if (typeof precision === 'number' && precision >= 0) {\n                    value = value.toFixed(precision);\n                }\n                return typeof padding === 'number' && padding >= 0 ? value.toString().padStart(width, '0') : value.toString();\n            }\n            case 's':\n                return width < 0\n                    ? replacement.toString().padEnd(-width, ' ')\n                    : replacement.toString().padStart(width, ' ');\n            default:\n                return replacement;\n        }\n    });\n}\nfunction formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\nfunction isInsideWebWorker() {\n    // @ts-expect-error - WebWorker global scope\n    return typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n}\nfunction isInsideNode() {\n    return typeof process !== 'undefined' && process.release && process.release.name === 'node';\n}\nfunction getNanosecondTimeViaPerformance() {\n    return BigInt(Math.floor(performance.now() * 1e6));\n}\nfunction formatNanoseconds(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    if (value < nano) {\n        return `${value}ns`;\n    }\n    else if (value < milli) {\n        return `${value / nano}μs`;\n    }\n    else if (value < second) {\n        return `${value / milli}ms`;\n    }\n    return `${value / second}s`;\n}\nfunction getNanosecondsTime() {\n    if (isInsideWebWorker()) {\n        return getNanosecondTimeViaPerformance();\n    }\n    if (isInsideNode()) {\n        return process.hrtime.bigint();\n    }\n    if (typeof process !== 'undefined' && typeof process?.hrtime?.bigint === 'function') {\n        return process.hrtime.bigint();\n    }\n    if (typeof performance !== 'undefined') {\n        return getNanosecondTimeViaPerformance();\n    }\n    // @todo: fallback to V8 native method to get microtime\n    return BigInt(0);\n}\nfunction uniqueId() {\n    return `${baseId}-${lastId++}`;\n}\nfunction getOwnProperty(object, property) {\n    // Checks if `hasOwn` method is defined avoiding errors with older Node.js versions\n    if (Object.hasOwn === undefined) {\n        return Object.prototype.hasOwnProperty.call(object, property) ? object[property] : undefined;\n    }\n    return Object.hasOwn(object, property) ? object[property] : undefined;\n}\nfunction getTokenFrequency(token, tokens) {\n    let count = 0;\n    for (const t of tokens) {\n        if (t === token) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction insertSortedValue(arr, el, compareFn = sortTokenScorePredicate) {\n    let low = 0;\n    let high = arr.length;\n    let mid;\n    while (low < high) {\n        mid = (low + high) >>> 1;\n        if (compareFn(el, arr[mid]) < 0) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    arr.splice(low, 0, el);\n    return arr;\n}\nfunction sortTokenScorePredicate(a, b) {\n    if (b[1] === a[1]) {\n        return a[0] - b[0];\n    }\n    return b[1] - a[1];\n}\n// Intersection function taken from https://github.com/lovasoa/fast_array_intersect.\n// MIT Licensed at the time of writing.\nfunction intersect(arrays) {\n    if (arrays.length === 0) {\n        return [];\n    }\n    else if (arrays.length === 1) {\n        return arrays[0];\n    }\n    for (let i = 1; i < arrays.length; i++) {\n        if (arrays[i].length < arrays[0].length) {\n            const tmp = arrays[0];\n            arrays[0] = arrays[i];\n            arrays[i] = tmp;\n        }\n    }\n    const set = new Map();\n    for (const elem of arrays[0]) {\n        set.set(elem, 1);\n    }\n    for (let i = 1; i < arrays.length; i++) {\n        let found = 0;\n        for (const elem of arrays[i]) {\n            const count = set.get(elem);\n            if (count === i) {\n                set.set(elem, count + 1);\n                found++;\n            }\n        }\n        if (found === 0)\n            return [];\n    }\n    return arrays[0].filter((e) => {\n        const count = set.get(e);\n        if (count !== undefined)\n            set.set(e, 0);\n        return count === arrays.length;\n    });\n}\nfunction getDocumentProperties(doc, paths) {\n    const properties = {};\n    const pathsLength = paths.length;\n    for (let i = 0; i < pathsLength; i++) {\n        const path = paths[i];\n        const pathTokens = path.split('.');\n        let current = doc;\n        const pathTokensLength = pathTokens.length;\n        for (let j = 0; j < pathTokensLength; j++) {\n            current = current[pathTokens[j]];\n            // We found an object but we were supposed to be done\n            if (typeof current === 'object') {\n                if (current !== null &&\n                    'lat' in current &&\n                    'lon' in current &&\n                    typeof current.lat === 'number' &&\n                    typeof current.lon === 'number') {\n                    current = properties[path] = current;\n                    break;\n                }\n                else if (!Array.isArray(current) && current !== null && j === pathTokensLength - 1) {\n                    current = undefined;\n                    break;\n                }\n            }\n            else if ((current === null || typeof current !== 'object') && j < pathTokensLength - 1) {\n                // We can't recurse anymore but we were supposed to\n                current = undefined;\n                break;\n            }\n        }\n        if (typeof current !== 'undefined') {\n            properties[path] = current;\n        }\n    }\n    return properties;\n}\nfunction getNested(obj, path) {\n    const props = getDocumentProperties(obj, [path]);\n    return props[path];\n}\nfunction flattenObject(obj, prefix = '') {\n    const result = {};\n    for (const key in obj) {\n        const prop = `${prefix}${key}`;\n        const objKey = obj[key];\n        if (typeof objKey === 'object' && objKey !== null) {\n            Object.assign(result, flattenObject(objKey, `${prop}.`));\n        }\n        else {\n            result[prop] = objKey;\n        }\n    }\n    return result;\n}\nconst mapDistanceToMeters = {\n    cm: 0.01,\n    m: 1,\n    km: 1000,\n    ft: 0.3048,\n    yd: 0.9144,\n    mi: 1609.344\n};\nfunction convertDistanceToMeters(distance, unit) {\n    const ratio = mapDistanceToMeters[unit];\n    if (ratio === undefined) {\n        throw new Error((0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_DISTANCE_SUFFIX', distance).message);\n    }\n    return distance * ratio;\n}\nfunction removeVectorsFromHits(searchResult, vectorProperties) {\n    searchResult.hits = searchResult.hits.map((result) => ({\n        ...result,\n        document: {\n            ...result.document,\n            // Remove embeddings from the result\n            ...vectorProperties.reduce((acc, prop) => {\n                const path = prop.split('.');\n                const lastKey = path.pop();\n                let obj = acc;\n                for (const key of path) {\n                    obj[key] = obj[key] ?? {};\n                    obj = obj[key];\n                }\n                obj[lastKey] = null;\n                return acc;\n            }, result.document)\n        }\n    }));\n}\nfunction isPromise(obj) {\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n/**\n * Checks if the provided input is an async function or if the input is an array\n * containing at least one async function.\n *\n * @param func - A single function or an array of functions to check.\n *               Non-function values are ignored.\n * @returns `true` if the input is an async function or an array containing at least\n *          one async function, otherwise `false`.\n */\nfunction isAsyncFunction(func) {\n    if (Array.isArray(func)) {\n        return func.some((item) => isAsyncFunction(item));\n    }\n    return func?.constructor?.name === 'AsyncFunction';\n}\nconst withIntersection = 'intersection' in new Set();\nfunction setIntersection(...sets) {\n    // Fast path 1\n    if (sets.length === 0) {\n        return new Set();\n    }\n    // Fast path 2\n    if (sets.length === 1) {\n        return sets[0];\n    }\n    // Fast path 3\n    if (sets.length === 2) {\n        const set1 = sets[0];\n        const set2 = sets[1];\n        if (withIntersection) {\n            return set1.intersection(set2);\n        }\n        const result = new Set();\n        const base = set1.size < set2.size ? set1 : set2;\n        const other = base === set1 ? set2 : set1;\n        for (const value of base) {\n            if (other.has(value)) {\n                result.add(value);\n            }\n        }\n        return result;\n    }\n    // Slow path\n    // Find the smallest set\n    const min = {\n        index: 0,\n        size: sets[0].size\n    };\n    for (let i = 1; i < sets.length; i++) {\n        if (sets[i].size < min.size) {\n            min.index = i;\n            min.size = sets[i].size;\n        }\n    }\n    if (withIntersection) {\n        let base = sets[min.index];\n        for (let i = 0; i < sets.length; i++) {\n            if (i === min.index) {\n                continue;\n            }\n            base = base.intersection(sets[i]);\n        }\n        return base;\n    }\n    // manual implementation:\n    // intersect all sets with the smallest set\n    const base = sets[min.index];\n    for (let i = 0; i < sets.length; i++) {\n        if (i === min.index) {\n            continue;\n        }\n        const other = sets[i];\n        for (const value of base) {\n            if (!other.has(value)) {\n                base.delete(value);\n            }\n        }\n    }\n    return base;\n}\nconst withUnion = 'union' in new Set();\nfunction setUnion(set1, set2) {\n    if (withUnion) {\n        if (set1) {\n            return set1.union(set2);\n        }\n        return set2;\n    }\n    if (!set1) {\n        return new Set(set2);\n    }\n    return new Set([...set1, ...set2]);\n}\nfunction setDifference(set1, set2) {\n    const result = new Set();\n    for (const value of set1) {\n        if (!set2.has(value)) {\n            result.add(value);\n        }\n    }\n    return result;\n}\n// This code is taken from https://github.com/davidmarkclements/atomic-sleep, MIT licensed at the time of commit b8149d3ca276c84a54fa8fa1478f9cc79aabc15a.\n// All credits go to the original author (David Mark Clements, https://github.com/davidmarkclements).\nfunction sleep(ms) {\n    if (typeof SharedArrayBuffer !== 'undefined' && typeof Atomics !== 'undefined') {\n        const nil = new Int32Array(new SharedArrayBuffer(4));\n        const valid = ms > 0 && ms < Infinity;\n        if (valid === false) {\n            if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n                throw TypeError('sleep: ms must be a number');\n            }\n            throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity');\n        }\n        Atomics.wait(nil, 0, 0, Number(ms));\n    }\n    else {\n        const valid = ms > 0 && ms < Infinity;\n        if (valid === false) {\n            if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n                throw TypeError('sleep: ms must be a number');\n            }\n            throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity');\n        }\n        const target = Date.now() + Number(ms);\n        while (target > Date.now()) {\n            /* empty */\n        }\n    }\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvZXNtL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsZ0JBQWdCLGtDQUFrQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGtEQUFrRCxFQUFFLFNBQVM7QUFDM0U7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsTUFBTTtBQUN4QjtBQUNBO0FBQ0Esa0JBQWtCLGFBQWE7QUFDL0I7QUFDQTtBQUNBLGtCQUFrQixjQUFjO0FBQ2hDO0FBQ0EsY0FBYyxlQUFlO0FBQzdCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGNBQWMsT0FBTyxHQUFHLFNBQVM7QUFDakM7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNCQUFzQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esd0JBQXdCLE9BQU8sRUFBRSxJQUFJO0FBQ3JDO0FBQ0E7QUFDQSwyREFBMkQsS0FBSztBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSx3QkFBd0IsdURBQVc7QUFDbkM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUJBQWlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQkFBaUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9lc20vdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5jb25zdCBiYXNlSWQgPSBEYXRlLm5vdygpLnRvU3RyaW5nKCkuc2xpY2UoNSk7XG5sZXQgbGFzdElkID0gMDtcbmNvbnN0IGsgPSAxMDI0O1xuY29uc3QgbmFubyA9IEJpZ0ludCgxZTMpO1xuY29uc3QgbWlsbGkgPSBCaWdJbnQoMWU2KTtcbmNvbnN0IHNlY29uZCA9IEJpZ0ludCgxZTkpO1xuZXhwb3J0IGNvbnN0IGlzU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCc7XG4vKipcbiAqIFRoaXMgdmFsdWUgY2FuIGJlIGluY3JlYXNlZCB1cCB0byAxMDBfMDAwXG4gKiBCdXQgaSBkb24ndCBrbm93IGlmIHRoaXMgdmFsdWUgY2hhbmdlIGZyb20gbm9kZWpzIHRvIG5vZGVqc1xuICogU28gSSB3aWxsIGtlZXAgYSBzYWZlciB2YWx1ZSBoZXJlLlxuICovXG5leHBvcnQgY29uc3QgTUFYX0FSR1VNRU5UX0ZPUl9TVEFDSyA9IDY1NTM1O1xuLyoqXG4gKiBUaGlzIG1ldGhvZCBpcyBuZWVkZWQgdG8gdXNlZCBiZWNhdXNlIG9mIGlzc3VlcyBsaWtlOiBodHRwczovL2dpdGh1Yi5jb20vb3JhbWFzZWFyY2gvb3JhbWEvaXNzdWVzLzMwMVxuICogdGhhdCBpc3N1ZSBpcyBjYXVzZWQgYmVjYXVzZSB0aGUgYXJyYXkgdGhhdCBpcyBwdXNoZWQgaXMgaHVnZSAoPjEwMGspXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBzYWZlQXJyYXlQdXNoKG15QXJyYXksIFsxLCAyXSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gc2FmZUFycmF5UHVzaChhcnIsIG5ld0Fycikge1xuICAgIGlmIChuZXdBcnIubGVuZ3RoIDwgTUFYX0FSR1VNRU5UX0ZPUl9TVEFDSykge1xuICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShhcnIsIG5ld0Fycik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBuZXdBcnJMZW5ndGggPSBuZXdBcnIubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5ld0Fyckxlbmd0aDsgaSArPSBNQVhfQVJHVU1FTlRfRk9SX1NUQUNLKSB7XG4gICAgICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShhcnIsIG5ld0Fyci5zbGljZShpLCBpICsgTUFYX0FSR1VNRU5UX0ZPUl9TVEFDSykpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNwcmludGYodGVtcGxhdGUsIC4uLmFyZ3MpIHtcbiAgICByZXR1cm4gdGVtcGxhdGUucmVwbGFjZSgvJSg/Oig/PHBvc2l0aW9uPlxcZCspXFwkKT8oPzx3aWR0aD4tP1xcZCpcXC4/XFxkKikoPzx0eXBlPltkZnNdKS9nLCBmdW5jdGlvbiAoLi4ucmVwbGFjZUFyZ3MpIHtcbiAgICAgICAgY29uc3QgZ3JvdXBzID0gcmVwbGFjZUFyZ3NbcmVwbGFjZUFyZ3MubGVuZ3RoIC0gMV07XG4gICAgICAgIGNvbnN0IHsgd2lkdGg6IHJhd1dpZHRoLCB0eXBlLCBwb3NpdGlvbiB9ID0gZ3JvdXBzO1xuICAgICAgICBjb25zdCByZXBsYWNlbWVudCA9IHBvc2l0aW9uID8gYXJnc1tOdW1iZXIucGFyc2VJbnQocG9zaXRpb24pIC0gMV0gOiBhcmdzLnNoaWZ0KCk7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gcmF3V2lkdGggPT09ICcnID8gMCA6IE51bWJlci5wYXJzZUludChyYXdXaWR0aCk7XG4gICAgICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcGxhY2VtZW50LnRvU3RyaW5nKCkucGFkU3RhcnQod2lkdGgsICcwJyk7XG4gICAgICAgICAgICBjYXNlICdmJzoge1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHJlcGxhY2VtZW50O1xuICAgICAgICAgICAgICAgIGNvbnN0IFtwYWRkaW5nLCBwcmVjaXNpb25dID0gcmF3V2lkdGguc3BsaXQoJy4nKS5tYXAoKHcpID0+IE51bWJlci5wYXJzZUZsb2F0KHcpKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHByZWNpc2lvbiA9PT0gJ251bWJlcicgJiYgcHJlY2lzaW9uID49IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b0ZpeGVkKHByZWNpc2lvbik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlb2YgcGFkZGluZyA9PT0gJ251bWJlcicgJiYgcGFkZGluZyA+PSAwID8gdmFsdWUudG9TdHJpbmcoKS5wYWRTdGFydCh3aWR0aCwgJzAnKSA6IHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXNlICdzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gd2lkdGggPCAwXG4gICAgICAgICAgICAgICAgICAgID8gcmVwbGFjZW1lbnQudG9TdHJpbmcoKS5wYWRFbmQoLXdpZHRoLCAnICcpXG4gICAgICAgICAgICAgICAgICAgIDogcmVwbGFjZW1lbnQudG9TdHJpbmcoKS5wYWRTdGFydCh3aWR0aCwgJyAnKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcGxhY2VtZW50O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0Qnl0ZXMoYnl0ZXMsIGRlY2ltYWxzID0gMikge1xuICAgIGlmIChieXRlcyA9PT0gMCkge1xuICAgICAgICByZXR1cm4gJzAgQnl0ZXMnO1xuICAgIH1cbiAgICBjb25zdCBkbSA9IGRlY2ltYWxzIDwgMCA/IDAgOiBkZWNpbWFscztcbiAgICBjb25zdCBzaXplcyA9IFsnQnl0ZXMnLCAnS0InLCAnTUInLCAnR0InLCAnVEInLCAnUEInLCAnRUInLCAnWkInLCAnWUInXTtcbiAgICBjb25zdCBpID0gTWF0aC5mbG9vcihNYXRoLmxvZyhieXRlcykgLyBNYXRoLmxvZyhrKSk7XG4gICAgcmV0dXJuIGAke3BhcnNlRmxvYXQoKGJ5dGVzIC8gTWF0aC5wb3coaywgaSkpLnRvRml4ZWQoZG0pKX0gJHtzaXplc1tpXX1gO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSW5zaWRlV2ViV29ya2VyKCkge1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBXZWJXb3JrZXIgZ2xvYmFsIHNjb3BlXG4gICAgcmV0dXJuIHR5cGVvZiBXb3JrZXJHbG9iYWxTY29wZSAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZiBpbnN0YW5jZW9mIFdvcmtlckdsb2JhbFNjb3BlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzSW5zaWRlTm9kZSgpIHtcbiAgICByZXR1cm4gdHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHByb2Nlc3MucmVsZWFzZSAmJiBwcm9jZXNzLnJlbGVhc2UubmFtZSA9PT0gJ25vZGUnO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE5hbm9zZWNvbmRUaW1lVmlhUGVyZm9ybWFuY2UoKSB7XG4gICAgcmV0dXJuIEJpZ0ludChNYXRoLmZsb29yKHBlcmZvcm1hbmNlLm5vdygpICogMWU2KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0TmFub3NlY29uZHModmFsdWUpIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJykge1xuICAgICAgICB2YWx1ZSA9IEJpZ0ludCh2YWx1ZSk7XG4gICAgfVxuICAgIGlmICh2YWx1ZSA8IG5hbm8pIHtcbiAgICAgICAgcmV0dXJuIGAke3ZhbHVlfW5zYDtcbiAgICB9XG4gICAgZWxzZSBpZiAodmFsdWUgPCBtaWxsaSkge1xuICAgICAgICByZXR1cm4gYCR7dmFsdWUgLyBuYW5vfc68c2A7XG4gICAgfVxuICAgIGVsc2UgaWYgKHZhbHVlIDwgc2Vjb25kKSB7XG4gICAgICAgIHJldHVybiBgJHt2YWx1ZSAvIG1pbGxpfW1zYDtcbiAgICB9XG4gICAgcmV0dXJuIGAke3ZhbHVlIC8gc2Vjb25kfXNgO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE5hbm9zZWNvbmRzVGltZSgpIHtcbiAgICBpZiAoaXNJbnNpZGVXZWJXb3JrZXIoKSkge1xuICAgICAgICByZXR1cm4gZ2V0TmFub3NlY29uZFRpbWVWaWFQZXJmb3JtYW5jZSgpO1xuICAgIH1cbiAgICBpZiAoaXNJbnNpZGVOb2RlKCkpIHtcbiAgICAgICAgcmV0dXJuIHByb2Nlc3MuaHJ0aW1lLmJpZ2ludCgpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHByb2Nlc3MgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBwcm9jZXNzPy5ocnRpbWU/LmJpZ2ludCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gcHJvY2Vzcy5ocnRpbWUuYmlnaW50KCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGVyZm9ybWFuY2UgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBnZXROYW5vc2Vjb25kVGltZVZpYVBlcmZvcm1hbmNlKCk7XG4gICAgfVxuICAgIC8vIEB0b2RvOiBmYWxsYmFjayB0byBWOCBuYXRpdmUgbWV0aG9kIHRvIGdldCBtaWNyb3RpbWVcbiAgICByZXR1cm4gQmlnSW50KDApO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVuaXF1ZUlkKCkge1xuICAgIHJldHVybiBgJHtiYXNlSWR9LSR7bGFzdElkKyt9YDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eShvYmplY3QsIHByb3BlcnR5KSB7XG4gICAgLy8gQ2hlY2tzIGlmIGBoYXNPd25gIG1ldGhvZCBpcyBkZWZpbmVkIGF2b2lkaW5nIGVycm9ycyB3aXRoIG9sZGVyIE5vZGUuanMgdmVyc2lvbnNcbiAgICBpZiAoT2JqZWN0Lmhhc093biA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSkgPyBvYmplY3RbcHJvcGVydHldIDogdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0Lmhhc093bihvYmplY3QsIHByb3BlcnR5KSA/IG9iamVjdFtwcm9wZXJ0eV0gOiB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0VG9rZW5GcmVxdWVuY3kodG9rZW4sIHRva2Vucykge1xuICAgIGxldCBjb3VudCA9IDA7XG4gICAgZm9yIChjb25zdCB0IG9mIHRva2Vucykge1xuICAgICAgICBpZiAodCA9PT0gdG9rZW4pIHtcbiAgICAgICAgICAgIGNvdW50Kys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvdW50O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGluc2VydFNvcnRlZFZhbHVlKGFyciwgZWwsIGNvbXBhcmVGbiA9IHNvcnRUb2tlblNjb3JlUHJlZGljYXRlKSB7XG4gICAgbGV0IGxvdyA9IDA7XG4gICAgbGV0IGhpZ2ggPSBhcnIubGVuZ3RoO1xuICAgIGxldCBtaWQ7XG4gICAgd2hpbGUgKGxvdyA8IGhpZ2gpIHtcbiAgICAgICAgbWlkID0gKGxvdyArIGhpZ2gpID4+PiAxO1xuICAgICAgICBpZiAoY29tcGFyZUZuKGVsLCBhcnJbbWlkXSkgPCAwKSB7XG4gICAgICAgICAgICBoaWdoID0gbWlkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG93ID0gbWlkICsgMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhcnIuc3BsaWNlKGxvdywgMCwgZWwpO1xuICAgIHJldHVybiBhcnI7XG59XG5leHBvcnQgZnVuY3Rpb24gc29ydFRva2VuU2NvcmVQcmVkaWNhdGUoYSwgYikge1xuICAgIGlmIChiWzFdID09PSBhWzFdKSB7XG4gICAgICAgIHJldHVybiBhWzBdIC0gYlswXTtcbiAgICB9XG4gICAgcmV0dXJuIGJbMV0gLSBhWzFdO1xufVxuLy8gSW50ZXJzZWN0aW9uIGZ1bmN0aW9uIHRha2VuIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2xvdmFzb2EvZmFzdF9hcnJheV9pbnRlcnNlY3QuXG4vLyBNSVQgTGljZW5zZWQgYXQgdGhlIHRpbWUgb2Ygd3JpdGluZy5cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnNlY3QoYXJyYXlzKSB7XG4gICAgaWYgKGFycmF5cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBlbHNlIGlmIChhcnJheXMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHJldHVybiBhcnJheXNbMF07XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgYXJyYXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhcnJheXNbaV0ubGVuZ3RoIDwgYXJyYXlzWzBdLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgdG1wID0gYXJyYXlzWzBdO1xuICAgICAgICAgICAgYXJyYXlzWzBdID0gYXJyYXlzW2ldO1xuICAgICAgICAgICAgYXJyYXlzW2ldID0gdG1wO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHNldCA9IG5ldyBNYXAoKTtcbiAgICBmb3IgKGNvbnN0IGVsZW0gb2YgYXJyYXlzWzBdKSB7XG4gICAgICAgIHNldC5zZXQoZWxlbSwgMSk7XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgYXJyYXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBmb3VuZCA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgZWxlbSBvZiBhcnJheXNbaV0pIHtcbiAgICAgICAgICAgIGNvbnN0IGNvdW50ID0gc2V0LmdldChlbGVtKTtcbiAgICAgICAgICAgIGlmIChjb3VudCA9PT0gaSkge1xuICAgICAgICAgICAgICAgIHNldC5zZXQoZWxlbSwgY291bnQgKyAxKTtcbiAgICAgICAgICAgICAgICBmb3VuZCsrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmIChmb3VuZCA9PT0gMClcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgcmV0dXJuIGFycmF5c1swXS5maWx0ZXIoKGUpID0+IHtcbiAgICAgICAgY29uc3QgY291bnQgPSBzZXQuZ2V0KGUpO1xuICAgICAgICBpZiAoY291bnQgIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHNldC5zZXQoZSwgMCk7XG4gICAgICAgIHJldHVybiBjb3VudCA9PT0gYXJyYXlzLmxlbmd0aDtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREb2N1bWVudFByb3BlcnRpZXMoZG9jLCBwYXRocykge1xuICAgIGNvbnN0IHByb3BlcnRpZXMgPSB7fTtcbiAgICBjb25zdCBwYXRoc0xlbmd0aCA9IHBhdGhzLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhdGhzTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgcGF0aCA9IHBhdGhzW2ldO1xuICAgICAgICBjb25zdCBwYXRoVG9rZW5zID0gcGF0aC5zcGxpdCgnLicpO1xuICAgICAgICBsZXQgY3VycmVudCA9IGRvYztcbiAgICAgICAgY29uc3QgcGF0aFRva2Vuc0xlbmd0aCA9IHBhdGhUb2tlbnMubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHBhdGhUb2tlbnNMZW5ndGg7IGorKykge1xuICAgICAgICAgICAgY3VycmVudCA9IGN1cnJlbnRbcGF0aFRva2Vuc1tqXV07XG4gICAgICAgICAgICAvLyBXZSBmb3VuZCBhbiBvYmplY3QgYnV0IHdlIHdlcmUgc3VwcG9zZWQgdG8gYmUgZG9uZVxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjdXJyZW50ID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50ICE9PSBudWxsICYmXG4gICAgICAgICAgICAgICAgICAgICdsYXQnIGluIGN1cnJlbnQgJiZcbiAgICAgICAgICAgICAgICAgICAgJ2xvbicgaW4gY3VycmVudCAmJlxuICAgICAgICAgICAgICAgICAgICB0eXBlb2YgY3VycmVudC5sYXQgPT09ICdudW1iZXInICYmXG4gICAgICAgICAgICAgICAgICAgIHR5cGVvZiBjdXJyZW50LmxvbiA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IHByb3BlcnRpZXNbcGF0aF0gPSBjdXJyZW50O1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkoY3VycmVudCkgJiYgY3VycmVudCAhPT0gbnVsbCAmJiBqID09PSBwYXRoVG9rZW5zTGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50ID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICgoY3VycmVudCA9PT0gbnVsbCB8fCB0eXBlb2YgY3VycmVudCAhPT0gJ29iamVjdCcpICYmIGogPCBwYXRoVG9rZW5zTGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgICAgIC8vIFdlIGNhbid0IHJlY3Vyc2UgYW55bW9yZSBidXQgd2Ugd2VyZSBzdXBwb3NlZCB0b1xuICAgICAgICAgICAgICAgIGN1cnJlbnQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBjdXJyZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcHJvcGVydGllc1twYXRoXSA9IGN1cnJlbnQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHByb3BlcnRpZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmVzdGVkKG9iaiwgcGF0aCkge1xuICAgIGNvbnN0IHByb3BzID0gZ2V0RG9jdW1lbnRQcm9wZXJ0aWVzKG9iaiwgW3BhdGhdKTtcbiAgICByZXR1cm4gcHJvcHNbcGF0aF07XG59XG5leHBvcnQgZnVuY3Rpb24gZmxhdHRlbk9iamVjdChvYmosIHByZWZpeCA9ICcnKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKSB7XG4gICAgICAgIGNvbnN0IHByb3AgPSBgJHtwcmVmaXh9JHtrZXl9YDtcbiAgICAgICAgY29uc3Qgb2JqS2V5ID0gb2JqW2tleV07XG4gICAgICAgIGlmICh0eXBlb2Ygb2JqS2V5ID09PSAnb2JqZWN0JyAmJiBvYmpLZXkgIT09IG51bGwpIHtcbiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ocmVzdWx0LCBmbGF0dGVuT2JqZWN0KG9iaktleSwgYCR7cHJvcH0uYCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0W3Byb3BdID0gb2JqS2V5O1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5jb25zdCBtYXBEaXN0YW5jZVRvTWV0ZXJzID0ge1xuICAgIGNtOiAwLjAxLFxuICAgIG06IDEsXG4gICAga206IDEwMDAsXG4gICAgZnQ6IDAuMzA0OCxcbiAgICB5ZDogMC45MTQ0LFxuICAgIG1pOiAxNjA5LjM0NFxufTtcbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0RGlzdGFuY2VUb01ldGVycyhkaXN0YW5jZSwgdW5pdCkge1xuICAgIGNvbnN0IHJhdGlvID0gbWFwRGlzdGFuY2VUb01ldGVyc1t1bml0XTtcbiAgICBpZiAocmF0aW8gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoY3JlYXRlRXJyb3IoJ0lOVkFMSURfRElTVEFOQ0VfU1VGRklYJywgZGlzdGFuY2UpLm1lc3NhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gZGlzdGFuY2UgKiByYXRpbztcbn1cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVWZWN0b3JzRnJvbUhpdHMoc2VhcmNoUmVzdWx0LCB2ZWN0b3JQcm9wZXJ0aWVzKSB7XG4gICAgc2VhcmNoUmVzdWx0LmhpdHMgPSBzZWFyY2hSZXN1bHQuaGl0cy5tYXAoKHJlc3VsdCkgPT4gKHtcbiAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICBkb2N1bWVudDoge1xuICAgICAgICAgICAgLi4ucmVzdWx0LmRvY3VtZW50LFxuICAgICAgICAgICAgLy8gUmVtb3ZlIGVtYmVkZGluZ3MgZnJvbSB0aGUgcmVzdWx0XG4gICAgICAgICAgICAuLi52ZWN0b3JQcm9wZXJ0aWVzLnJlZHVjZSgoYWNjLCBwcm9wKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IHByb3Auc3BsaXQoJy4nKTtcbiAgICAgICAgICAgICAgICBjb25zdCBsYXN0S2V5ID0gcGF0aC5wb3AoKTtcbiAgICAgICAgICAgICAgICBsZXQgb2JqID0gYWNjO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHBhdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgb2JqW2tleV0gPSBvYmpba2V5XSA/PyB7fTtcbiAgICAgICAgICAgICAgICAgICAgb2JqID0gb2JqW2tleV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG9ialtsYXN0S2V5XSA9IG51bGw7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgICAgIH0sIHJlc3VsdC5kb2N1bWVudClcbiAgICAgICAgfVxuICAgIH0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2Uob2JqKSB7XG4gICAgcmV0dXJuICEhb2JqICYmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0JyB8fCB0eXBlb2Ygb2JqID09PSAnZnVuY3Rpb24nKSAmJiB0eXBlb2Ygb2JqLnRoZW4gPT09ICdmdW5jdGlvbic7XG59XG4vKipcbiAqIENoZWNrcyBpZiB0aGUgcHJvdmlkZWQgaW5wdXQgaXMgYW4gYXN5bmMgZnVuY3Rpb24gb3IgaWYgdGhlIGlucHV0IGlzIGFuIGFycmF5XG4gKiBjb250YWluaW5nIGF0IGxlYXN0IG9uZSBhc3luYyBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gZnVuYyAtIEEgc2luZ2xlIGZ1bmN0aW9uIG9yIGFuIGFycmF5IG9mIGZ1bmN0aW9ucyB0byBjaGVjay5cbiAqICAgICAgICAgICAgICAgTm9uLWZ1bmN0aW9uIHZhbHVlcyBhcmUgaWdub3JlZC5cbiAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgaW5wdXQgaXMgYW4gYXN5bmMgZnVuY3Rpb24gb3IgYW4gYXJyYXkgY29udGFpbmluZyBhdCBsZWFzdFxuICogICAgICAgICAgb25lIGFzeW5jIGZ1bmN0aW9uLCBvdGhlcndpc2UgYGZhbHNlYC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzQXN5bmNGdW5jdGlvbihmdW5jKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZnVuYykpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmMuc29tZSgoaXRlbSkgPT4gaXNBc3luY0Z1bmN0aW9uKGl0ZW0pKTtcbiAgICB9XG4gICAgcmV0dXJuIGZ1bmM/LmNvbnN0cnVjdG9yPy5uYW1lID09PSAnQXN5bmNGdW5jdGlvbic7XG59XG5jb25zdCB3aXRoSW50ZXJzZWN0aW9uID0gJ2ludGVyc2VjdGlvbicgaW4gbmV3IFNldCgpO1xuZXhwb3J0IGZ1bmN0aW9uIHNldEludGVyc2VjdGlvbiguLi5zZXRzKSB7XG4gICAgLy8gRmFzdCBwYXRoIDFcbiAgICBpZiAoc2V0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIG5ldyBTZXQoKTtcbiAgICB9XG4gICAgLy8gRmFzdCBwYXRoIDJcbiAgICBpZiAoc2V0cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHNldHNbMF07XG4gICAgfVxuICAgIC8vIEZhc3QgcGF0aCAzXG4gICAgaWYgKHNldHMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIGNvbnN0IHNldDEgPSBzZXRzWzBdO1xuICAgICAgICBjb25zdCBzZXQyID0gc2V0c1sxXTtcbiAgICAgICAgaWYgKHdpdGhJbnRlcnNlY3Rpb24pIHtcbiAgICAgICAgICAgIHJldHVybiBzZXQxLmludGVyc2VjdGlvbihzZXQyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBuZXcgU2V0KCk7XG4gICAgICAgIGNvbnN0IGJhc2UgPSBzZXQxLnNpemUgPCBzZXQyLnNpemUgPyBzZXQxIDogc2V0MjtcbiAgICAgICAgY29uc3Qgb3RoZXIgPSBiYXNlID09PSBzZXQxID8gc2V0MiA6IHNldDE7XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgYmFzZSkge1xuICAgICAgICAgICAgaWYgKG90aGVyLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQuYWRkKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICAvLyBTbG93IHBhdGhcbiAgICAvLyBGaW5kIHRoZSBzbWFsbGVzdCBzZXRcbiAgICBjb25zdCBtaW4gPSB7XG4gICAgICAgIGluZGV4OiAwLFxuICAgICAgICBzaXplOiBzZXRzWzBdLnNpemVcbiAgICB9O1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgc2V0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoc2V0c1tpXS5zaXplIDwgbWluLnNpemUpIHtcbiAgICAgICAgICAgIG1pbi5pbmRleCA9IGk7XG4gICAgICAgICAgICBtaW4uc2l6ZSA9IHNldHNbaV0uc2l6ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAod2l0aEludGVyc2VjdGlvbikge1xuICAgICAgICBsZXQgYmFzZSA9IHNldHNbbWluLmluZGV4XTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZXRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoaSA9PT0gbWluLmluZGV4KSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBiYXNlID0gYmFzZS5pbnRlcnNlY3Rpb24oc2V0c1tpXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGJhc2U7XG4gICAgfVxuICAgIC8vIG1hbnVhbCBpbXBsZW1lbnRhdGlvbjpcbiAgICAvLyBpbnRlcnNlY3QgYWxsIHNldHMgd2l0aCB0aGUgc21hbGxlc3Qgc2V0XG4gICAgY29uc3QgYmFzZSA9IHNldHNbbWluLmluZGV4XTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNldHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGkgPT09IG1pbi5pbmRleCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3RoZXIgPSBzZXRzW2ldO1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIGJhc2UpIHtcbiAgICAgICAgICAgIGlmICghb3RoZXIuaGFzKHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGJhc2UuZGVsZXRlKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYmFzZTtcbn1cbmNvbnN0IHdpdGhVbmlvbiA9ICd1bmlvbicgaW4gbmV3IFNldCgpO1xuZXhwb3J0IGZ1bmN0aW9uIHNldFVuaW9uKHNldDEsIHNldDIpIHtcbiAgICBpZiAod2l0aFVuaW9uKSB7XG4gICAgICAgIGlmIChzZXQxKSB7XG4gICAgICAgICAgICByZXR1cm4gc2V0MS51bmlvbihzZXQyKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2V0MjtcbiAgICB9XG4gICAgaWYgKCFzZXQxKSB7XG4gICAgICAgIHJldHVybiBuZXcgU2V0KHNldDIpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFNldChbLi4uc2V0MSwgLi4uc2V0Ml0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNldERpZmZlcmVuY2Uoc2V0MSwgc2V0Mikge1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHNldDEpIHtcbiAgICAgICAgaWYgKCFzZXQyLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJlc3VsdC5hZGQodmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vLyBUaGlzIGNvZGUgaXMgdGFrZW4gZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZGF2aWRtYXJrY2xlbWVudHMvYXRvbWljLXNsZWVwLCBNSVQgbGljZW5zZWQgYXQgdGhlIHRpbWUgb2YgY29tbWl0IGI4MTQ5ZDNjYTI3NmM4NGE1NGZhOGZhMTQ3OGY5Y2M3OWFhYmMxNWEuXG4vLyBBbGwgY3JlZGl0cyBnbyB0byB0aGUgb3JpZ2luYWwgYXV0aG9yIChEYXZpZCBNYXJrIENsZW1lbnRzLCBodHRwczovL2dpdGh1Yi5jb20vZGF2aWRtYXJrY2xlbWVudHMpLlxuZXhwb3J0IGZ1bmN0aW9uIHNsZWVwKG1zKSB7XG4gICAgaWYgKHR5cGVvZiBTaGFyZWRBcnJheUJ1ZmZlciAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIEF0b21pY3MgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGNvbnN0IG5pbCA9IG5ldyBJbnQzMkFycmF5KG5ldyBTaGFyZWRBcnJheUJ1ZmZlcig0KSk7XG4gICAgICAgIGNvbnN0IHZhbGlkID0gbXMgPiAwICYmIG1zIDwgSW5maW5pdHk7XG4gICAgICAgIGlmICh2YWxpZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbXMgIT09ICdudW1iZXInICYmIHR5cGVvZiBtcyAhPT0gJ2JpZ2ludCcpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoJ3NsZWVwOiBtcyBtdXN0IGJlIGEgbnVtYmVyJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBSYW5nZUVycm9yKCdzbGVlcDogbXMgbXVzdCBiZSBhIG51bWJlciB0aGF0IGlzIGdyZWF0ZXIgdGhhbiAwIGJ1dCBsZXNzIHRoYW4gSW5maW5pdHknKTtcbiAgICAgICAgfVxuICAgICAgICBBdG9taWNzLndhaXQobmlsLCAwLCAwLCBOdW1iZXIobXMpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHZhbGlkID0gbXMgPiAwICYmIG1zIDwgSW5maW5pdHk7XG4gICAgICAgIGlmICh2YWxpZCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgbXMgIT09ICdudW1iZXInICYmIHR5cGVvZiBtcyAhPT0gJ2JpZ2ludCcpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBUeXBlRXJyb3IoJ3NsZWVwOiBtcyBtdXN0IGJlIGEgbnVtYmVyJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBSYW5nZUVycm9yKCdzbGVlcDogbXMgbXVzdCBiZSBhIG51bWJlciB0aGF0IGlzIGdyZWF0ZXIgdGhhbiAwIGJ1dCBsZXNzIHRoYW4gSW5maW5pdHknKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0YXJnZXQgPSBEYXRlLm5vdygpICsgTnVtYmVyKG1zKTtcbiAgICAgICAgd2hpbGUgKHRhcmdldCA+IERhdGUubm93KCkpIHtcbiAgICAgICAgICAgIC8qIGVtcHR5ICovXG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@orama/orama/dist/esm/utils.js\n");

/***/ })

};
;
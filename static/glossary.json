{
  "address-alias": {
    "title": "Address Alias",
    "text": "<p>\nAn address deterministically generated from an L1 contract address used on L2 to safely identify the source of an L1 to L2 message.\n</p>"
  },
  "arb-token-bridge": {
    "title": "Arb Token Bridge",
    "text": "<p>\nA series of contracts on an Arbitrum chain and its underlying chain that facilitate trustless movement of ERC-20 tokens between the two layers.\n</p>"
  },
  "arbified-token-list": {
    "title": "Arbified Token List",
    "text": "<p>\nA token list that conforms to <a href=\"https://github.com/Uniswap/token-lists\">Uniswap's token list specification</a>; Arbified lists are generated by inputting externally maintained list (<a href=\"https://api.coinmarketcap.com/data-api/v3/uniswap/all.json\">i.e., coinmarketcap's list</a>) and outputting a list that includes all of the instances of token contracts on the Arbitrum chain bridged via the canonical <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a> from tokens on the inputted list. (See code <a href=\"https://github.com/OffchainLabs/arbitrum-token-lists\">here</a>.)\n</p>"
  },
  "arbitrum": { "title": "Arbitrum", "text": "<p>\n\n</p>" },
  "arbitrum-bridge-ui": {
    "title": "Arbitrum Bridge UI",
    "text": "<p>\nWeb application built and maintained by <a href=\"/intro/glossary#offchain-labs\">Offchain Labs</a> for user-interactions with the <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a>; visit it <a href=\"https://bridge.arbitrum.io/\">here</a>.\n</p>"
  },
  "arbitrum-classic": { "title": "Arbitrum Classic", "text": "<p>\n\n</p>" },
  "arbitrum-full-node": {
    "title": "Arbitrum Full Node",
    "text": "<p>\nA party who keeps track of the state of an Arbitrum chain and receives remote procedure calls (RPCs) from clients. Analogous to a non-staking L1 Ethereum node.\n</p>"
  },
  "arbitrum-orbit": {
    "title": "Arbitrum Orbit",
    "text": "<p>\n<a href=\"/intro/glossary#layer-3-l3\">Layer 3 (L3)</a>\n</p>"
  },
  "arbos": {
    "title": "ArbOS",
    "text": "<p>\nArbitrum's \"operating system\" that trustlessly handles system-level operations; includes the ability to emulate the EVM.\n</p>"
  },
  "assertion": {
    "title": "Assertion",
    "text": "<p>\nA staked claim made by an Arbitrum <a href=\"/intro/glossary#validator\">Validator</a> representing a claim about an Arbitrum chain's state. An <a href=\"/intro/glossary#assertion\">Assertion</a> may, e.g., propose a new assertion, or may be a step in a <a href=\"/intro/glossary#challenge\">Challenge</a>.\n</p>"
  },
  "auction-contract": {
    "title": "Auction Contract",
    "text": "<p>\nA smart contract that handles the state, accounting of funds for bids, and various operations of the <a href=\"/intro/glossary#timeboost\">Timeboost</a> auction. The contract is deployed on the target chain for which Timeboost is enabled.\n</p>"
  },
  "autonomous-auctioneer": {
    "title": "Autonomous Auctioneer",
    "text": "<p>\nOff chain software that receives bids from <a href=\"/intro/glossary#timeboost\">Timeboost</a>  participants, processes and validates bids, and then posts the top valid bid (or top two valid bids in the case of a tie) to the <a href=\"/intro/glossary#auction-contract\">Auction Contract</a>  to resolve the on-going Timeboost auction. The autonomous auctioneer, for a given chain, is provisioned & deployed by an entity designated by the chain's owner.\n</p>"
  },
  "batch": {
    "title": "Batch",
    "text": "<p>\n<a href=\"/intro/glossary#underlying-chain\">Underlying Chain</a>,<a href=\"/intro/glossary#fast-inbox\">Fast Inbox</a>\n</p>"
  },
  "blockchain": {
    "title": "Blockchain",
    "text": "<p>\nA distributed digital ledger that is used to record transactions and store data in a secure, transparent, and tamper-resistant way, notably in cryptocurrency protocols. \n</p>"
  },
  "bls-signature": { "title": "BLS Signature", "text": "<p>\n\n</p>" },
  "bold": {
    "title": "BoLD",
    "text": "<p>\nShort for \"Bounded Liquidity Delay\"; latest version of the Arbitrum <a href=\"/intro/glossary#challenge-protocol\">Challenge protocol</a> designed to eliminate <a href=\"https://medium.com/offchainlabs/solutions-to-delay-attacks-on-rollups-434f9d05a07a\">delay attack vectors</a> (see <a href=\"https://medium.com/offchainlabs/bold-permissionless-validation-for-arbitrum-chains-9934eb5328cc\">here</a> for more). Not currently on mainnet. \n</p>"
  },
  "bridge": {
    "title": "Bridge",
    "text": "<p>\n<a href=\"/intro/glossary#crosschain-message\">Cross-chain message</a>\n</p>"
  },
  "chain-owner": {
    "title": "Chain Owner",
    "text": "<p>\nAn entity (i.e., a smart contract) with affordance to carry out critical upgrades to an Arbitrum chain's core protocol; this includes upgrading protocol contracts, setting core system parameters, and adding and removing other chain owners.\n</p>"
  },
  "chain-state": { "title": "Chain state", "text": "<p>\n\n</p>" },
  "challenge": {
    "title": "Challenge",
    "text": "<p>\nWhen two <a href=\"/intro/glossary#staker\">Staker</a>s disagree about the correct verdict on an <a href=\"/intro/glossary#assertion\">Assertion</a>, those stakers can be put in a challenge. The challenge is refereed by the contracts on the underlying chain. Eventually one staker wins the challenge. The protocol guarantees that an honest  party will always win a challenge; the loser forfeits their stake. \n</p>"
  },
  "challenge-period": {
    "title": "Challenge Period",
    "text": "<p>\nWindow of time (one week on Arbitrum One) over which an <a href=\"/intro/glossary#assertion\">Assertion</a> can be challenged, and after which the assertion can be confirmed.\n</p>"
  },
  "challenge-protocol": {
    "title": "Challenge protocol",
    "text": "<p>\n<a href=\"/intro/glossary#assertion\">Assertion</a>\n</p>"
  },
  "client": { "title": "Client", "text": "<p>\n\n</p>" },
  "confirmation": {
    "title": "Confirmation",
    "text": "<p>\n<a href=\"/intro/glossary#assertion\">Assertion</a>,<a href=\"/intro/glossary#l2-to-l1-message\">L2 to L1 Message</a>\n</p>"
  },
  "crosschain-message": {
    "title": "Cross-chain message",
    "text": "<p>\nAn action taken on some chain A which asynchronously initiates an additional action on chain B. \n</p>"
  },
  "custom-arbtoken": {
    "title": "Custom Arb-Token",
    "text": "<p>\nAny L2 token contract registered to the <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a> that isn't a standard arb-token (i.e., a token that uses any gateway other than the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a> ).\n</p>"
  },
  "custom-gateway": {
    "title": "Custom gateway",
    "text": "<p>\nAny <a href=\"/intro/glossary#token-gateway\">Token Gateway</a> that isn't the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a>.\n</p>"
  },
  "dapp": {
    "title": "dApp",
    "text": "<p>\nShort for \"decentralized application.\" A dApp typically consists of smart contracts as well as a user-interface for interacting with them.\n</p>"
  },
  "data-availability-certificate": {
    "title": "Data Availability Certificate",
    "text": "<p>\n\n</p>"
  },
  "defensive-validator": {
    "title": "Defensive Validator",
    "text": "<p>\nA <a href=\"/intro/glossary#validator\">Validator</a> that watches an Arbitrum chain and takes action (i.e., stakes and challenges) only when and if an invalid <a href=\"/intro/glossary#assertion\">Assertion</a> occurs.\n</p>"
  },
  "delayed-inbox": {
    "title": "Delayed Inbox",
    "text": "<p>\n<a href=\"/intro/glossary#fast-inbox\">Fast Inbox</a>\n</p>"
  },
  "devtools-dashboard": {
    "title": "Dev-Tools Dashboard",
    "text": "<p>\nWeb application built and maintained by <a href=\"/intro/glossary#offchain-labs\">Offchain Labs</a> for developers and users to debug Arbitrum transactions; i.e., executing or checking the status of <a href=\"/intro/glossary#crosschain-message\">Cross-chain message</a>s; visit it <a href=\"https://retryable-dashboard.arbitrum.io/\">here</a>.   \n</p>"
  },
  "dissection": {
    "title": "Dissection",
    "text": "<p>\nA step in the <a href=\"/intro/glossary#challenge-protocol\">Challenge protocol</a>  in which two challenging parties interactively narrow down their disagreement until they reach a <a href=\"/intro/glossary#one-step-proof\">One Step Proof</a>.\n</p>"
  },
  "ethereum-wallet": {
    "title": "Ethereum Wallet",
    "text": "<p>\nA software application used for transacting with the Ethereum <a href=\"/intro/glossary#blockchain\">Blockchain</a>.\n</p>"
  },
  "evm": {
    "title": "EVM+",
    "text": "<p>\nThe paradigm introduced by <a href=\"/intro/glossary#stylus\">Stylus</a> in which Arbitrum's EVM compatibility is preserved while new features and improvements are introduced.\n</p>"
  },
  "express-lane": {
    "title": "Express Lane",
    "text": "<p>\n<a href=\"/intro/glossary#timeboost\">Timeboost</a>\n</p>"
  },
  "express-lane-controller": {
    "title": "Express Lane Controller",
    "text": "<p>\nAn address, defined in the <a href=\"/intro/glossary#auction-contract\">Auction Contract</a>, that is granted the privilege to use the <a href=\"/intro/glossary#express-lane\">Express Lane</a>. These privileges are granted after verifying that the incoming transactions were properly signed by the express lane controller, among other checks.\n</p>"
  },
  "fair-ordering-algorithm": { "title": "Fair Ordering Algorithm", "text": "<p>\n\n</p>" },
  "fast-exit--liquidity-exit": {
    "title": "Fast Exit / Liquidity Exit",
    "text": "<p>\nA means by which a user can bypass an Arbitrum chain's <a href=\"/intro/glossary#challenge-period\">Challenge Period</a> when withdrawing fungible assets (or more generally, executing some \"fungible\" L2 to L1 operation); for trustless fast exits, a liquidity provider facilitates an atomic swap of the asset on L2 directly to L1.\n</p>"
  },
  "fast-inbox": {
    "title": "Fast Inbox",
    "text": "<p>\n<a href=\"/intro/glossary#delayed-inbox\">Delayed Inbox</a>\n</p>"
  },
  "first-come-first-serve-fcfs": {
    "title": "First Come First Serve (FCFS)",
    "text": "<p>\nA type of <a href=\"/intro/glossary#transaction-ordering-policy\">Transaction Ordering Policy</a> used by the sequencer in Arbitrum chains whereby incoming transactions are sequenced into a block in the order that the transactions arrived.\n</p>"
  },
  "forceinclusion": {
    "title": "Force-Inclusion",
    "text": "<p>\n<a href=\"/intro/glossary#delayed-inbox\">Delayed Inbox</a>\n</p>"
  },
  "fraud-proof": { "title": "Fraud proof", "text": "<p>\n\n</p>" },
  "gas-price-floor": { "title": "Gas Price Floor", "text": "<p>\n\n</p>" },
  "gateway-router": {
    "title": "Gateway Router",
    "text": "<p>\nContracts in the <a href=\"/intro/glossary#arb-token-bridge\">Arb Token Bridge</a>  responsible for mapping tokens to their appropriate <a href=\"/intro/glossary#token-gateway\">Token Gateway</a>.\n</p>"
  },
  "genericcustom-gateway": {
    "title": "Generic-Custom Gateway",
    "text": "<p>\nA particular <a href=\"/intro/glossary#custom-gateway\">Custom gateway</a> via which an L1 token contract can be registered to a token contract deployed to L2. A useful alternative to the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a> for projects that wish to control the address of their L2 token contract, maintain L2 token contract upgradability, and for various other use-cases. \n</p>"
  },
  "ink": {
    "title": "Ink",
    "text": "<p>\nThe equivalent of gas in the <a href=\"/intro/glossary#stylus\">Stylus</a> vm. Ink is introduced for finer granularity than gas offers since Stylus's operations are considerably cheaper than their EVM analogs. \n</p>"
  },
  "l2-block": {
    "title": "L2 Block",
    "text": "<p>\nData structure that represents a group of L2 transactions (analogous to L1 blocks).\n</p>"
  },
  "l2-to-l1-message": {
    "title": "L2 to L1 Message",
    "text": "<p>\n<a href=\"/intro/glossary#challenge-period\">Challenge Period</a>\n</p>"
  },
  "layer-3-l3": { "title": "Layer 3 (L3)", "text": "<p>\n\n</p>" },
  "native-fee-token": {
    "title": "Native Fee Token",
    "text": "<p>\n<a href=\"/intro/glossary#arbitrum-orbit\">Arbitrum Orbit</a>\n</p>"
  },
  "offchain-labs": { "title": "Offchain Labs", "text": "<p>\n\n</p>" },
  "one-step-proof": {
    "title": "One Step Proof",
    "text": "<p>\nFinal step in a challenge; a single operation of the Arbitrum VM (<a href=\"/intro/glossary#wasm\">WASM</a> ) is executed on the underlying chain, and the validity of its state transition is verified.\n</p>"
  },
  "outbox": {
    "title": "Outbox",
    "text": "<p>\nAn L1 contract responsible for tracking <a href=\"/intro/glossary#l2-to-l1-message\">L2 to L1 Message</a>s, including withdrawals, which can be executed once they are confirmed. The outbox stores a Merkle Root of all outgoing messages.\n</p>"
  },
  "portal": {
    "title": "Portal",
    "text": "<p>\nA web application maintained by <a href=\"/intro/glossary#offchain-labs\">Offchain Labs</a> showcasing the Arbitrum ecosystem; visit it <a href=\"https://portal.arbitrum.io/\">here</a>.\n</p>"
  },
  "rblock": {
    "title": "RBlock",
    "text": "<p>\nRefer to <a href=\"/intro/glossary#assertion\">Assertion</a> \n</p>"
  },
  "reorg": {
    "title": "Reorg",
    "text": "<p>\nA situation in which transactions on a chain that were at some point considered accepted then get rejected. In the context of an Arbitrum chain, once transactions are posted in the chain's <a href=\"/intro/glossary#fast-inbox\">Fast Inbox</a>, the only way the chain can experience a reorg is if its <a href=\"/intro/glossary#underlying-chain\">Underlying Chain</a> itself reorgs. Of note, <a href=\"/intro/glossary#fraud-proof\">Fraud proof</a>s do not cause reorgs.   \n</p>"
  },
  "retryable-autoredeem": {
    "title": "Retryable Autoredeem",
    "text": "<p>\nThe \"automatic\" (i.e., requiring no additional user action) execution of a <a href=\"/intro/glossary#retryable-ticket\">Retryable Ticket</a>  on an Arbitrum chain.\n</p>"
  },
  "retryable-redeem": {
    "title": "Retryable Redeem",
    "text": "<p>\nThe execution of a <a href=\"/intro/glossary#retryable-ticket\">Retryable Ticket</a> on L2; can be automatic (see <a href=\"/intro/glossary#retryable-autoredeem\">Retryable Autoredeem</a>) or manual via a user-initiated L2 transaction.\n</p>"
  },
  "retryable-ticket": {
    "title": "Retryable Ticket",
    "text": "<p>\nAn L1 to L2 cross chain message initiated by an L1 transaction sent to an Arbitrum chain for execution (e.g., a token deposit).\n</p>"
  },
  "reverse-token-gateway": {
    "title": "Reverse Token Gateway",
    "text": "<p>\n<a href=\"/intro/glossary#token-gateway\">Token Gateway</a>\n</p>"
  },
  "sequencer-feed": {
    "title": "Sequencer Feed",
    "text": "<p>\n<a href=\"/intro/glossary#soft-confirmation\">Soft Confirmation</a>,<a href=\"/intro/glossary#batch\">Batch</a>\n</p>"
  },
  "shared-sequencing": { "title": "Shared Sequencing", "text": "<p>\n\n</p>" },
  "smart-contract": {
    "title": "Smart Contract",
    "text": "<p>\nA computer program whose operations are defined and executed within a blockchain consensus protocol.\n</p>"
  },
  "soft-confirmation": { "title": "Soft Confirmation", "text": "<p>\n\n</p>" },
  "speed-limit": { "title": "Speed Limit", "text": "<p>\n\n</p>" },
  "staker": {
    "title": "Staker",
    "text": "<p>\n<a href=\"/intro/glossary#validator\">Validator</a>,<a href=\"/intro/glossary#assertion\">Assertion</a>\n</p>"
  },
  "standard-arbtoken": {
    "title": "Standard Arb-Token",
    "text": "<p>\nAn token contract on an Arbitrum chain deployed via the <a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a>; offers basic ERC20 functionality in addition to deposit / withdrawal affordances.\n</p>"
  },
  "standarderc20-gateway": {
    "title": "StandardERC20 gateway",
    "text": "<p>\n<a href=\"/intro/glossary#token-gateway\">Token Gateway</a>,<a href=\"/intro/glossary#standard-arbtoken\">Standard Arb-Token</a>\n</p>"
  },
  "state-transition-function": {
    "title": "State Transition Function",
    "text": "<p>\nThe STF (State Transition Function) defines how new blocks are produced from input messages (i.e. transactions) in an Arbitrum chain.\n</p>"
  },
  "stylus": { "title": "Stylus", "text": "<p>\n\n</p>" },
  "timeboost": { "title": "Timeboost", "text": "<p>\n\n</p>" },
  "token-gateway": {
    "title": "Token Gateway",
    "text": "<p>\n<a href=\"/intro/glossary#standarderc20-gateway\">StandardERC20 gateway</a>,<a href=\"/intro/glossary#genericcustom-gateway\">Generic-Custom Gateway</a>,<a href=\"/intro/glossary#weth-gateway\">WETH Gateway</a>\n</p>"
  },
  "transaction": {
    "title": "Transaction",
    "text": "<p>\nA user-initiated interaction with a Blockchain. Transactions are typically signed by users via wallets and are paid for via transaction fees. \n</p>"
  },
  "transaction-ordering-policy": {
    "title": "Transaction Ordering Policy",
    "text": "<p>\nThe rules and logic employed by a chain to order incoming transactions into a block.\n</p>"
  },
  "underlying-chain": { "title": "Underlying Chain", "text": "<p>\n\n</p>" },
  "validator": {
    "title": "Validator",
    "text": "<p>\n<a href=\"/intro/glossary#arbitrum-full-node\">Arbitrum Full Node</a>,<a href=\"/intro/glossary#assertion\">Assertion</a>,<a href=\"/intro/glossary#watchtower-validator\">Watchtower Validator</a>,<a href=\"/intro/glossary#defensive-validator\">Defensive Validator</a>\n</p>"
  },
  "wasm": {
    "title": "WASM",
    "text": "<p>\n<a href=\"/intro/glossary#fraud-proof\">Fraud proof</a>,<a href=\"/intro/glossary#stylus\">Stylus</a>\n</p>"
  },
  "wasmer": {
    "title": "WASMer",
    "text": "<p>\nA popular WebAssembly runtime for executing <a href=\"/intro/glossary#wasm\">WASM</a> binaries. <a href=\"https://github.com/OffchainLabs/wasmer\">A fork of WASMer</a> is used for executing <a href=\"/intro/glossary#stylus\">Stylus</a> programs. WASMer executes considerably faster than Geth executes EVM code, contributing to Stylus's lower fees.\n</p>"
  },
  "watchtower-validator": {
    "title": "Watchtower Validator",
    "text": "<p>\nA <a href=\"/intro/glossary#validator\">Validator</a>  that never stakes / never takes on chain action, who raises the alarm (by whatever off-chain means it chooses) if it witnesses an invalid assertion.\n</p>"
  },
  "weth-gateway": {
    "title": "WETH Gateway",
    "text": "<p>\n<a href=\"/intro/glossary#token-gateway\">Token Gateway</a> for handing the bridging of wrapped Ether (WETH). WETH is unwrapped on L1 and rewrapped on L1 upon depositing (and vice-versa upon withdrawing), ensuring WETH on L2 always remains collateralized. \n</p>"
  }
}

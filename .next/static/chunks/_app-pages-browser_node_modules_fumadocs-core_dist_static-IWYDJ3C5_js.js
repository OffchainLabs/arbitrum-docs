"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_fumadocs-core_dist_static-IWYDJ3C5_js"],{

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   documentsStore: () => (/* reexport module object */ _components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   formatElapsedTime: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.formatElapsedTime),\n/* harmony export */   getDocumentIndexId: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIndexId),\n/* harmony export */   getDocumentProperties: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentProperties),\n/* harmony export */   getInnerType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getInnerType),\n/* harmony export */   getVectorSize: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getVectorSize),\n/* harmony export */   index: () => (/* reexport module object */ _components_index_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   internalDocumentIDStore: () => (/* reexport module object */ _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   isArrayType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.isArrayType),\n/* harmony export */   isGeoPointType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.isGeoPointType),\n/* harmony export */   isVectorType: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.isVectorType),\n/* harmony export */   sorter: () => (/* reexport module object */ _components_sorter_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   tokenizer: () => (/* reexport module object */ _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_3__),\n/* harmony export */   validateSchema: () => (/* reexport safe */ _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.validateSchema)\n/* harmony export */ });\n/* harmony import */ var _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/defaults.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/defaults.js\");\n/* harmony import */ var _components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/documents-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/documents-store.js\");\n/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/index.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/index.js\");\n/* harmony import */ var _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/tokenizer/index.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/index.js\");\n/* harmony import */ var _components_sorter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/sorter.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/sorter.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n\n\n\n\n\n\n//# sourceMappingURL=components.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUM7QUFDeUI7QUFDbkI7QUFDYztBQUNaO0FBQ3FDO0FBQ3RGIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9jb21wb25lbnRzL2RlZmF1bHRzLmpzJztcbmV4cG9ydCAqIGFzIGRvY3VtZW50c1N0b3JlIGZyb20gJy4vY29tcG9uZW50cy9kb2N1bWVudHMtc3RvcmUuanMnO1xuZXhwb3J0ICogYXMgaW5kZXggZnJvbSAnLi9jb21wb25lbnRzL2luZGV4LmpzJztcbmV4cG9ydCAqIGFzIHRva2VuaXplciBmcm9tICcuL2NvbXBvbmVudHMvdG9rZW5pemVyL2luZGV4LmpzJztcbmV4cG9ydCAqIGFzIHNvcnRlciBmcm9tICcuL2NvbXBvbmVudHMvc29ydGVyLmpzJztcbmV4cG9ydCAqIGFzIGludGVybmFsRG9jdW1lbnRJRFN0b3JlIGZyb20gJy4vY29tcG9uZW50cy9pbnRlcm5hbC1kb2N1bWVudC1pZC1zdG9yZS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wb25lbnRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/algorithms.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/algorithms.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BM25: () => (/* binding */ BM25),\n/* harmony export */   prioritizeTokenScores: () => (/* binding */ prioritizeTokenScores)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n\nfunction prioritizeTokenScores(arrays, boost, threshold = 0, keywordsCount) {\n    if (boost === 0) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_BOOST_VALUE');\n    }\n    const tokenScoresMap = new Map();\n    const mapsLength = arrays.length;\n    for (let i = 0; i < mapsLength; i++) {\n        const arr = arrays[i];\n        const entriesLength = arr.length;\n        for (let j = 0; j < entriesLength; j++) {\n            const [token, score] = arr[j];\n            const boostScore = score * boost;\n            const oldScore = tokenScoresMap.get(token)?.[0];\n            if (oldScore !== undefined) {\n                tokenScoresMap.set(token, [oldScore * 1.5 + boostScore, (tokenScoresMap?.get(token)?.[1] || 0) + 1]);\n            }\n            else {\n                tokenScoresMap.set(token, [boostScore, 1]);\n            }\n        }\n    }\n    const tokenScores = [];\n    for (const tokenScoreEntry of tokenScoresMap.entries()) {\n        tokenScores.push([tokenScoreEntry[0], tokenScoreEntry[1][0]]);\n    }\n    const results = tokenScores.sort((a, b) => b[1] - a[1]);\n    // If threshold is 1, it means we will return all the results with at least one search term,\n    // prioritizing the ones that contains more search terms (fuzzy match)\n    if (threshold === 1) {\n        return results;\n    }\n    // For threshold = 0 when keywordsCount is 1 (single term search),\n    // we return all matches since they automatically contain 100% of keywords\n    if (threshold === 0 && keywordsCount === 1) {\n        return results;\n    }\n    // Prepare keywords count tracking for threshold handling\n    const allResults = results.length;\n    const tokenScoreWithKeywordsCount = [];\n    for (const tokenScoreEntry of tokenScoresMap.entries()) {\n        tokenScoreWithKeywordsCount.push([tokenScoreEntry[0], tokenScoreEntry[1][0], tokenScoreEntry[1][1]]);\n    }\n    // Find the index of the last result with all keywords.\n    // Order the documents by the number of keywords they contain, and then by the score.\n    const keywordsPerToken = tokenScoreWithKeywordsCount.sort((a, b) => {\n        // Compare by the third element, higher numbers first\n        if (a[2] > b[2])\n            return -1;\n        if (a[2] < b[2])\n            return 1;\n        // If the third elements are equal, compare by the second element, higher numbers first\n        if (a[1] > b[1])\n            return -1;\n        if (a[1] < b[1])\n            return 1;\n        // If both the second and third elements are equal, consider the elements equal\n        return 0;\n    });\n    let lastTokenWithAllKeywords = undefined;\n    for (let i = 0; i < allResults; i++) {\n        if (keywordsPerToken[i][2] === keywordsCount) {\n            lastTokenWithAllKeywords = i;\n        }\n        else {\n            break;\n        }\n    }\n    // If no results had all the keywords, either bail out earlier or normalize\n    if (typeof lastTokenWithAllKeywords === 'undefined') {\n        if (threshold === 0) {\n            return [];\n        }\n        lastTokenWithAllKeywords = 0;\n    }\n    const keywordsPerTokenLength = keywordsPerToken.length;\n    const resultsWithIdAndScore = new Array(keywordsPerTokenLength);\n    for (let i = 0; i < keywordsPerTokenLength; i++) {\n        resultsWithIdAndScore[i] = [keywordsPerToken[i][0], keywordsPerToken[i][1]];\n    }\n    // If threshold is 0, it means we will only return all the results that contains ALL the search terms (exact match)\n    if (threshold === 0) {\n        return resultsWithIdAndScore.slice(0, lastTokenWithAllKeywords + 1);\n    }\n    // If the threshold is between 0 and 1, we will return all the results that contains at least the threshold of search terms\n    // For example, if threshold is 0.5, we will return all the results that contains at least 50% of the search terms\n    // (fuzzy match with a minimum threshold)\n    const thresholdLength = lastTokenWithAllKeywords + Math.ceil((threshold * 100 * (allResults - lastTokenWithAllKeywords)) / 100);\n    return resultsWithIdAndScore.slice(0, Math.min(allResults, thresholdLength));\n}\nfunction BM25(tf, matchingCount, docsCount, fieldLength, averageFieldLength, { k, b, d }) {\n    const idf = Math.log(1 + (docsCount - matchingCount + 0.5) / (matchingCount + 0.5));\n    return (idf * (d + tf * (k + 1))) / (tf + k * (1 - b + (b * fieldLength) / averageFieldLength));\n}\n//# sourceMappingURL=algorithms.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvYWxnb3JpdGhtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDcEM7QUFDUDtBQUNBLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw0QkFBNEI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0VBQStFLFNBQVM7QUFDL0Y7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2Jyb3dzZXIvY29tcG9uZW50cy9hbGdvcml0aG1zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBwcmlvcml0aXplVG9rZW5TY29yZXMoYXJyYXlzLCBib29zdCwgdGhyZXNob2xkID0gMCwga2V5d29yZHNDb3VudCkge1xuICAgIGlmIChib29zdCA9PT0gMCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignSU5WQUxJRF9CT09TVF9WQUxVRScpO1xuICAgIH1cbiAgICBjb25zdCB0b2tlblNjb3Jlc01hcCA9IG5ldyBNYXAoKTtcbiAgICBjb25zdCBtYXBzTGVuZ3RoID0gYXJyYXlzLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1hcHNMZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBhcnIgPSBhcnJheXNbaV07XG4gICAgICAgIGNvbnN0IGVudHJpZXNMZW5ndGggPSBhcnIubGVuZ3RoO1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGVudHJpZXNMZW5ndGg7IGorKykge1xuICAgICAgICAgICAgY29uc3QgW3Rva2VuLCBzY29yZV0gPSBhcnJbal07XG4gICAgICAgICAgICBjb25zdCBib29zdFNjb3JlID0gc2NvcmUgKiBib29zdDtcbiAgICAgICAgICAgIGNvbnN0IG9sZFNjb3JlID0gdG9rZW5TY29yZXNNYXAuZ2V0KHRva2VuKT8uWzBdO1xuICAgICAgICAgICAgaWYgKG9sZFNjb3JlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0b2tlblNjb3Jlc01hcC5zZXQodG9rZW4sIFtvbGRTY29yZSAqIDEuNSArIGJvb3N0U2NvcmUsICh0b2tlblNjb3Jlc01hcD8uZ2V0KHRva2VuKT8uWzFdIHx8IDApICsgMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdG9rZW5TY29yZXNNYXAuc2V0KHRva2VuLCBbYm9vc3RTY29yZSwgMV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHRva2VuU2NvcmVzID0gW107XG4gICAgZm9yIChjb25zdCB0b2tlblNjb3JlRW50cnkgb2YgdG9rZW5TY29yZXNNYXAuZW50cmllcygpKSB7XG4gICAgICAgIHRva2VuU2NvcmVzLnB1c2goW3Rva2VuU2NvcmVFbnRyeVswXSwgdG9rZW5TY29yZUVudHJ5WzFdWzBdXSk7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdHMgPSB0b2tlblNjb3Jlcy5zb3J0KChhLCBiKSA9PiBiWzFdIC0gYVsxXSk7XG4gICAgLy8gSWYgdGhyZXNob2xkIGlzIDEsIGl0IG1lYW5zIHdlIHdpbGwgcmV0dXJuIGFsbCB0aGUgcmVzdWx0cyB3aXRoIGF0IGxlYXN0IG9uZSBzZWFyY2ggdGVybSxcbiAgICAvLyBwcmlvcml0aXppbmcgdGhlIG9uZXMgdGhhdCBjb250YWlucyBtb3JlIHNlYXJjaCB0ZXJtcyAoZnV6enkgbWF0Y2gpXG4gICAgaWYgKHRocmVzaG9sZCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9XG4gICAgLy8gRm9yIHRocmVzaG9sZCA9IDAgd2hlbiBrZXl3b3Jkc0NvdW50IGlzIDEgKHNpbmdsZSB0ZXJtIHNlYXJjaCksXG4gICAgLy8gd2UgcmV0dXJuIGFsbCBtYXRjaGVzIHNpbmNlIHRoZXkgYXV0b21hdGljYWxseSBjb250YWluIDEwMCUgb2Yga2V5d29yZHNcbiAgICBpZiAodGhyZXNob2xkID09PSAwICYmIGtleXdvcmRzQ291bnQgPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfVxuICAgIC8vIFByZXBhcmUga2V5d29yZHMgY291bnQgdHJhY2tpbmcgZm9yIHRocmVzaG9sZCBoYW5kbGluZ1xuICAgIGNvbnN0IGFsbFJlc3VsdHMgPSByZXN1bHRzLmxlbmd0aDtcbiAgICBjb25zdCB0b2tlblNjb3JlV2l0aEtleXdvcmRzQ291bnQgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHRva2VuU2NvcmVFbnRyeSBvZiB0b2tlblNjb3Jlc01hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgdG9rZW5TY29yZVdpdGhLZXl3b3Jkc0NvdW50LnB1c2goW3Rva2VuU2NvcmVFbnRyeVswXSwgdG9rZW5TY29yZUVudHJ5WzFdWzBdLCB0b2tlblNjb3JlRW50cnlbMV1bMV1dKTtcbiAgICB9XG4gICAgLy8gRmluZCB0aGUgaW5kZXggb2YgdGhlIGxhc3QgcmVzdWx0IHdpdGggYWxsIGtleXdvcmRzLlxuICAgIC8vIE9yZGVyIHRoZSBkb2N1bWVudHMgYnkgdGhlIG51bWJlciBvZiBrZXl3b3JkcyB0aGV5IGNvbnRhaW4sIGFuZCB0aGVuIGJ5IHRoZSBzY29yZS5cbiAgICBjb25zdCBrZXl3b3Jkc1BlclRva2VuID0gdG9rZW5TY29yZVdpdGhLZXl3b3Jkc0NvdW50LnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgLy8gQ29tcGFyZSBieSB0aGUgdGhpcmQgZWxlbWVudCwgaGlnaGVyIG51bWJlcnMgZmlyc3RcbiAgICAgICAgaWYgKGFbMl0gPiBiWzJdKVxuICAgICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICBpZiAoYVsyXSA8IGJbMl0pXG4gICAgICAgICAgICByZXR1cm4gMTtcbiAgICAgICAgLy8gSWYgdGhlIHRoaXJkIGVsZW1lbnRzIGFyZSBlcXVhbCwgY29tcGFyZSBieSB0aGUgc2Vjb25kIGVsZW1lbnQsIGhpZ2hlciBudW1iZXJzIGZpcnN0XG4gICAgICAgIGlmIChhWzFdID4gYlsxXSlcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgaWYgKGFbMV0gPCBiWzFdKVxuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIC8vIElmIGJvdGggdGhlIHNlY29uZCBhbmQgdGhpcmQgZWxlbWVudHMgYXJlIGVxdWFsLCBjb25zaWRlciB0aGUgZWxlbWVudHMgZXF1YWxcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgfSk7XG4gICAgbGV0IGxhc3RUb2tlbldpdGhBbGxLZXl3b3JkcyA9IHVuZGVmaW5lZDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbFJlc3VsdHM7IGkrKykge1xuICAgICAgICBpZiAoa2V5d29yZHNQZXJUb2tlbltpXVsyXSA9PT0ga2V5d29yZHNDb3VudCkge1xuICAgICAgICAgICAgbGFzdFRva2VuV2l0aEFsbEtleXdvcmRzID0gaTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIElmIG5vIHJlc3VsdHMgaGFkIGFsbCB0aGUga2V5d29yZHMsIGVpdGhlciBiYWlsIG91dCBlYXJsaWVyIG9yIG5vcm1hbGl6ZVxuICAgIGlmICh0eXBlb2YgbGFzdFRva2VuV2l0aEFsbEtleXdvcmRzID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAodGhyZXNob2xkID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgIH1cbiAgICAgICAgbGFzdFRva2VuV2l0aEFsbEtleXdvcmRzID0gMDtcbiAgICB9XG4gICAgY29uc3Qga2V5d29yZHNQZXJUb2tlbkxlbmd0aCA9IGtleXdvcmRzUGVyVG9rZW4ubGVuZ3RoO1xuICAgIGNvbnN0IHJlc3VsdHNXaXRoSWRBbmRTY29yZSA9IG5ldyBBcnJheShrZXl3b3Jkc1BlclRva2VuTGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGtleXdvcmRzUGVyVG9rZW5MZW5ndGg7IGkrKykge1xuICAgICAgICByZXN1bHRzV2l0aElkQW5kU2NvcmVbaV0gPSBba2V5d29yZHNQZXJUb2tlbltpXVswXSwga2V5d29yZHNQZXJUb2tlbltpXVsxXV07XG4gICAgfVxuICAgIC8vIElmIHRocmVzaG9sZCBpcyAwLCBpdCBtZWFucyB3ZSB3aWxsIG9ubHkgcmV0dXJuIGFsbCB0aGUgcmVzdWx0cyB0aGF0IGNvbnRhaW5zIEFMTCB0aGUgc2VhcmNoIHRlcm1zIChleGFjdCBtYXRjaClcbiAgICBpZiAodGhyZXNob2xkID09PSAwKSB7XG4gICAgICAgIHJldHVybiByZXN1bHRzV2l0aElkQW5kU2NvcmUuc2xpY2UoMCwgbGFzdFRva2VuV2l0aEFsbEtleXdvcmRzICsgMSk7XG4gICAgfVxuICAgIC8vIElmIHRoZSB0aHJlc2hvbGQgaXMgYmV0d2VlbiAwIGFuZCAxLCB3ZSB3aWxsIHJldHVybiBhbGwgdGhlIHJlc3VsdHMgdGhhdCBjb250YWlucyBhdCBsZWFzdCB0aGUgdGhyZXNob2xkIG9mIHNlYXJjaCB0ZXJtc1xuICAgIC8vIEZvciBleGFtcGxlLCBpZiB0aHJlc2hvbGQgaXMgMC41LCB3ZSB3aWxsIHJldHVybiBhbGwgdGhlIHJlc3VsdHMgdGhhdCBjb250YWlucyBhdCBsZWFzdCA1MCUgb2YgdGhlIHNlYXJjaCB0ZXJtc1xuICAgIC8vIChmdXp6eSBtYXRjaCB3aXRoIGEgbWluaW11bSB0aHJlc2hvbGQpXG4gICAgY29uc3QgdGhyZXNob2xkTGVuZ3RoID0gbGFzdFRva2VuV2l0aEFsbEtleXdvcmRzICsgTWF0aC5jZWlsKCh0aHJlc2hvbGQgKiAxMDAgKiAoYWxsUmVzdWx0cyAtIGxhc3RUb2tlbldpdGhBbGxLZXl3b3JkcykpIC8gMTAwKTtcbiAgICByZXR1cm4gcmVzdWx0c1dpdGhJZEFuZFNjb3JlLnNsaWNlKDAsIE1hdGgubWluKGFsbFJlc3VsdHMsIHRocmVzaG9sZExlbmd0aCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIEJNMjUodGYsIG1hdGNoaW5nQ291bnQsIGRvY3NDb3VudCwgZmllbGRMZW5ndGgsIGF2ZXJhZ2VGaWVsZExlbmd0aCwgeyBrLCBiLCBkIH0pIHtcbiAgICBjb25zdCBpZGYgPSBNYXRoLmxvZygxICsgKGRvY3NDb3VudCAtIG1hdGNoaW5nQ291bnQgKyAwLjUpIC8gKG1hdGNoaW5nQ291bnQgKyAwLjUpKTtcbiAgICByZXR1cm4gKGlkZiAqIChkICsgdGYgKiAoayArIDEpKSkgLyAodGYgKyBrICogKDEgLSBiICsgKGIgKiBmaWVsZExlbmd0aCkgLyBhdmVyYWdlRmllbGRMZW5ndGgpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFsZ29yaXRobXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/algorithms.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/defaults.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/defaults.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatElapsedTime: () => (/* binding */ formatElapsedTime),\n/* harmony export */   getDocumentIndexId: () => (/* binding */ getDocumentIndexId),\n/* harmony export */   getDocumentProperties: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentProperties),\n/* harmony export */   getInnerType: () => (/* binding */ getInnerType),\n/* harmony export */   getVectorSize: () => (/* binding */ getVectorSize),\n/* harmony export */   isArrayType: () => (/* binding */ isArrayType),\n/* harmony export */   isGeoPointType: () => (/* binding */ isGeoPointType),\n/* harmony export */   isVectorType: () => (/* binding */ isVectorType),\n/* harmony export */   validateSchema: () => (/* binding */ validateSchema)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\n\n\nfunction formatElapsedTime(n) {\n    return {\n        raw: Number(n),\n        formatted: (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.formatNanoseconds)(n)\n    };\n}\nfunction getDocumentIndexId(doc) {\n    if (doc.id) {\n        if (typeof doc.id !== 'string') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof doc.id);\n        }\n        return doc.id;\n    }\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.uniqueId)();\n}\nfunction validateSchema(doc, schema) {\n    for (const [prop, type] of Object.entries(schema)) {\n        const value = doc[prop];\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        if (type === 'geopoint' &&\n            typeof value === 'object' &&\n            typeof value.lon === 'number' &&\n            typeof value.lat === 'number') {\n            continue;\n        }\n        if (type === 'enum' && (typeof value === 'string' || typeof value === 'number')) {\n            continue;\n        }\n        if (type === 'enum[]' && Array.isArray(value)) {\n            const valueLength = value.length;\n            for (let i = 0; i < valueLength; i++) {\n                if (typeof value[i] !== 'string' && typeof value[i] !== 'number') {\n                    return prop + '.' + i;\n                }\n            }\n            continue;\n        }\n        if (isVectorType(type)) {\n            const vectorSize = getVectorSize(type);\n            if (!Array.isArray(value) || value.length !== vectorSize) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_INPUT_VECTOR', prop, vectorSize, value.length);\n            }\n            continue;\n        }\n        if (isArrayType(type)) {\n            if (!Array.isArray(value)) {\n                return prop;\n            }\n            const expectedType = getInnerType(type);\n            const valueLength = value.length;\n            for (let i = 0; i < valueLength; i++) {\n                if (typeof value[i] !== expectedType) {\n                    return prop + '.' + i;\n                }\n            }\n            continue;\n        }\n        if (typeof type === 'object') {\n            if (!value || typeof value !== 'object') {\n                return prop;\n            }\n            // using as ResultDocument is not exactly right but trying to be type-safe here is not useful\n            const subProp = validateSchema(value, type);\n            if (subProp) {\n                return prop + '.' + subProp;\n            }\n            continue;\n        }\n        if (typeof value !== type) {\n            return prop;\n        }\n    }\n    return undefined;\n}\nconst IS_ARRAY_TYPE = {\n    string: false,\n    number: false,\n    boolean: false,\n    enum: false,\n    geopoint: false,\n    'string[]': true,\n    'number[]': true,\n    'boolean[]': true,\n    'enum[]': true\n};\nconst INNER_TYPE = {\n    'string[]': 'string',\n    'number[]': 'number',\n    'boolean[]': 'boolean',\n    'enum[]': 'enum'\n};\nfunction isGeoPointType(type) {\n    return type === 'geopoint';\n}\nfunction isVectorType(type) {\n    return typeof type === 'string' && /^vector\\[\\d+\\]$/.test(type);\n}\nfunction isArrayType(type) {\n    return typeof type === 'string' && IS_ARRAY_TYPE[type];\n}\nfunction getInnerType(type) {\n    return INNER_TYPE[type];\n}\nfunction getVectorSize(type) {\n    const size = Number(type.slice(7, -1));\n    switch (true) {\n        case isNaN(size):\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_VECTOR_VALUE', type);\n        case size <= 0:\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_VECTOR_SIZE', type);\n        default:\n            return size;\n    }\n}\n//# sourceMappingURL=defaults.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvZGVmYXVsdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDZTtBQUNOO0FBQzdDO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQiw0REFBaUI7QUFDcEM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLG1EQUFRO0FBQ25CO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQkFBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHVEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixpQkFBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvZGVmYXVsdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgZm9ybWF0TmFub3NlY29uZHMsIHVuaXF1ZUlkIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuZXhwb3J0IHsgZ2V0RG9jdW1lbnRQcm9wZXJ0aWVzIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGZvcm1hdEVsYXBzZWRUaW1lKG4pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByYXc6IE51bWJlcihuKSxcbiAgICAgICAgZm9ybWF0dGVkOiBmb3JtYXROYW5vc2Vjb25kcyhuKVxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9jdW1lbnRJbmRleElkKGRvYykge1xuICAgIGlmIChkb2MuaWQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBkb2MuaWQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignRE9DVU1FTlRfSURfTVVTVF9CRV9TVFJJTkcnLCB0eXBlb2YgZG9jLmlkKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZG9jLmlkO1xuICAgIH1cbiAgICByZXR1cm4gdW5pcXVlSWQoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZVNjaGVtYShkb2MsIHNjaGVtYSkge1xuICAgIGZvciAoY29uc3QgW3Byb3AsIHR5cGVdIG9mIE9iamVjdC5lbnRyaWVzKHNjaGVtYSkpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBkb2NbcHJvcF07XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ2dlb3BvaW50JyAmJlxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgICAgdHlwZW9mIHZhbHVlLmxvbiA9PT0gJ251bWJlcicgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZS5sYXQgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ2VudW0nICYmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnIHx8IHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZSA9PT0gJ2VudW1bXScgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlTGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZVtpXSAhPT0gJ3N0cmluZycgJiYgdHlwZW9mIHZhbHVlW2ldICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvcCArICcuJyArIGk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzVmVjdG9yVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgY29uc3QgdmVjdG9yU2l6ZSA9IGdldFZlY3RvclNpemUodHlwZSk7XG4gICAgICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpIHx8IHZhbHVlLmxlbmd0aCAhPT0gdmVjdG9yU2l6ZSkge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdJTlZBTElEX0lOUFVUX1ZFQ1RPUicsIHByb3AsIHZlY3RvclNpemUsIHZhbHVlLmxlbmd0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBcnJheVR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGV4cGVjdGVkVHlwZSA9IGdldElubmVyVHlwZSh0eXBlKTtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlTGVuZ3RoID0gdmFsdWUubGVuZ3RoO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB2YWx1ZUxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZVtpXSAhPT0gZXhwZWN0ZWRUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm9wICsgJy4nICsgaTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICBpZiAoIXZhbHVlIHx8IHR5cGVvZiB2YWx1ZSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJvcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHVzaW5nIGFzIFJlc3VsdERvY3VtZW50IGlzIG5vdCBleGFjdGx5IHJpZ2h0IGJ1dCB0cnlpbmcgdG8gYmUgdHlwZS1zYWZlIGhlcmUgaXMgbm90IHVzZWZ1bFxuICAgICAgICAgICAgY29uc3Qgc3ViUHJvcCA9IHZhbGlkYXRlU2NoZW1hKHZhbHVlLCB0eXBlKTtcbiAgICAgICAgICAgIGlmIChzdWJQcm9wKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb3AgKyAnLicgKyBzdWJQcm9wO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gdHlwZSkge1xuICAgICAgICAgICAgcmV0dXJuIHByb3A7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmNvbnN0IElTX0FSUkFZX1RZUEUgPSB7XG4gICAgc3RyaW5nOiBmYWxzZSxcbiAgICBudW1iZXI6IGZhbHNlLFxuICAgIGJvb2xlYW46IGZhbHNlLFxuICAgIGVudW06IGZhbHNlLFxuICAgIGdlb3BvaW50OiBmYWxzZSxcbiAgICAnc3RyaW5nW10nOiB0cnVlLFxuICAgICdudW1iZXJbXSc6IHRydWUsXG4gICAgJ2Jvb2xlYW5bXSc6IHRydWUsXG4gICAgJ2VudW1bXSc6IHRydWVcbn07XG5jb25zdCBJTk5FUl9UWVBFID0ge1xuICAgICdzdHJpbmdbXSc6ICdzdHJpbmcnLFxuICAgICdudW1iZXJbXSc6ICdudW1iZXInLFxuICAgICdib29sZWFuW10nOiAnYm9vbGVhbicsXG4gICAgJ2VudW1bXSc6ICdlbnVtJ1xufTtcbmV4cG9ydCBmdW5jdGlvbiBpc0dlb1BvaW50VHlwZSh0eXBlKSB7XG4gICAgcmV0dXJuIHR5cGUgPT09ICdnZW9wb2ludCc7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNWZWN0b3JUeXBlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHR5cGUgPT09ICdzdHJpbmcnICYmIC9edmVjdG9yXFxbXFxkK1xcXSQvLnRlc3QodHlwZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNBcnJheVR5cGUodHlwZSkge1xuICAgIHJldHVybiB0eXBlb2YgdHlwZSA9PT0gJ3N0cmluZycgJiYgSVNfQVJSQVlfVFlQRVt0eXBlXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRJbm5lclR5cGUodHlwZSkge1xuICAgIHJldHVybiBJTk5FUl9UWVBFW3R5cGVdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFZlY3RvclNpemUodHlwZSkge1xuICAgIGNvbnN0IHNpemUgPSBOdW1iZXIodHlwZS5zbGljZSg3LCAtMSkpO1xuICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgICBjYXNlIGlzTmFOKHNpemUpOlxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0lOVkFMSURfVkVDVE9SX1ZBTFVFJywgdHlwZSk7XG4gICAgICAgIGNhc2Ugc2l6ZSA8PSAwOlxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0lOVkFMSURfVkVDVE9SX1NJWkUnLCB0eXBlKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzaXplO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRlZmF1bHRzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/defaults.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/documents-store.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/documents-store.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   count: () => (/* binding */ count),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createDocumentsStore: () => (/* binding */ createDocumentsStore),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getAll: () => (/* binding */ getAll),\n/* harmony export */   getMultiple: () => (/* binding */ getMultiple),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   save: () => (/* binding */ save),\n/* harmony export */   store: () => (/* binding */ store)\n/* harmony export */ });\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n\nfunction create(_, sharedInternalDocumentStore) {\n    return {\n        sharedInternalDocumentStore,\n        docs: {},\n        count: 0\n    };\n}\nfunction get(store, id) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getInternalDocumentId)(store.sharedInternalDocumentStore, id);\n    return store.docs[internalId];\n}\nfunction getMultiple(store, ids) {\n    const idsLength = ids.length;\n    const found = Array.from({ length: idsLength });\n    for (let i = 0; i < idsLength; i++) {\n        const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getInternalDocumentId)(store.sharedInternalDocumentStore, ids[i]);\n        found[i] = store.docs[internalId];\n    }\n    return found;\n}\nfunction getAll(store) {\n    return store.docs;\n}\nfunction store(store, id, internalId, doc) {\n    if (typeof store.docs[internalId] !== 'undefined') {\n        return false;\n    }\n    store.docs[internalId] = doc;\n    store.count++;\n    return true;\n}\nfunction remove(store, id) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getInternalDocumentId)(store.sharedInternalDocumentStore, id);\n    if (typeof store.docs[internalId] === 'undefined') {\n        return false;\n    }\n    delete store.docs[internalId];\n    store.count--;\n    return true;\n}\nfunction count(store) {\n    return store.count;\n}\nfunction load(sharedInternalDocumentStore, raw) {\n    const rawDocument = raw;\n    return {\n        docs: rawDocument.docs,\n        count: rawDocument.count,\n        sharedInternalDocumentStore\n    };\n}\nfunction save(store) {\n    return {\n        docs: store.docs,\n        count: store.count\n    };\n}\nfunction createDocumentsStore() {\n    return {\n        create,\n        get,\n        getMultiple,\n        getAll,\n        store,\n        remove,\n        count,\n        load,\n        save\n    };\n}\n//# sourceMappingURL=documents-store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvZG9jdW1lbnRzLXN0b3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXdFO0FBQ2pFO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDTztBQUNQLHVCQUF1QixxRkFBcUI7QUFDNUM7QUFDQTtBQUNPO0FBQ1A7QUFDQSwrQkFBK0IsbUJBQW1CO0FBQ2xELG9CQUFvQixlQUFlO0FBQ25DLDJCQUEyQixxRkFBcUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx1QkFBdUIscUZBQXFCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2Jyb3dzZXIvY29tcG9uZW50cy9kb2N1bWVudHMtc3RvcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0SW50ZXJuYWxEb2N1bWVudElkIH0gZnJvbSAnLi9pbnRlcm5hbC1kb2N1bWVudC1pZC1zdG9yZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlKF8sIHNoYXJlZEludGVybmFsRG9jdW1lbnRTdG9yZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHNoYXJlZEludGVybmFsRG9jdW1lbnRTdG9yZSxcbiAgICAgICAgZG9jczoge30sXG4gICAgICAgIGNvdW50OiAwXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXQoc3RvcmUsIGlkKSB7XG4gICAgY29uc3QgaW50ZXJuYWxJZCA9IGdldEludGVybmFsRG9jdW1lbnRJZChzdG9yZS5zaGFyZWRJbnRlcm5hbERvY3VtZW50U3RvcmUsIGlkKTtcbiAgICByZXR1cm4gc3RvcmUuZG9jc1tpbnRlcm5hbElkXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRNdWx0aXBsZShzdG9yZSwgaWRzKSB7XG4gICAgY29uc3QgaWRzTGVuZ3RoID0gaWRzLmxlbmd0aDtcbiAgICBjb25zdCBmb3VuZCA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGlkc0xlbmd0aCB9KTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlkc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGludGVybmFsSWQgPSBnZXRJbnRlcm5hbERvY3VtZW50SWQoc3RvcmUuc2hhcmVkSW50ZXJuYWxEb2N1bWVudFN0b3JlLCBpZHNbaV0pO1xuICAgICAgICBmb3VuZFtpXSA9IHN0b3JlLmRvY3NbaW50ZXJuYWxJZF07XG4gICAgfVxuICAgIHJldHVybiBmb3VuZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRBbGwoc3RvcmUpIHtcbiAgICByZXR1cm4gc3RvcmUuZG9jcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBzdG9yZShzdG9yZSwgaWQsIGludGVybmFsSWQsIGRvYykge1xuICAgIGlmICh0eXBlb2Ygc3RvcmUuZG9jc1tpbnRlcm5hbElkXSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBzdG9yZS5kb2NzW2ludGVybmFsSWRdID0gZG9jO1xuICAgIHN0b3JlLmNvdW50Kys7XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlKHN0b3JlLCBpZCkge1xuICAgIGNvbnN0IGludGVybmFsSWQgPSBnZXRJbnRlcm5hbERvY3VtZW50SWQoc3RvcmUuc2hhcmVkSW50ZXJuYWxEb2N1bWVudFN0b3JlLCBpZCk7XG4gICAgaWYgKHR5cGVvZiBzdG9yZS5kb2NzW2ludGVybmFsSWRdID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGRlbGV0ZSBzdG9yZS5kb2NzW2ludGVybmFsSWRdO1xuICAgIHN0b3JlLmNvdW50LS07XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY291bnQoc3RvcmUpIHtcbiAgICByZXR1cm4gc3RvcmUuY291bnQ7XG59XG5leHBvcnQgZnVuY3Rpb24gbG9hZChzaGFyZWRJbnRlcm5hbERvY3VtZW50U3RvcmUsIHJhdykge1xuICAgIGNvbnN0IHJhd0RvY3VtZW50ID0gcmF3O1xuICAgIHJldHVybiB7XG4gICAgICAgIGRvY3M6IHJhd0RvY3VtZW50LmRvY3MsXG4gICAgICAgIGNvdW50OiByYXdEb2N1bWVudC5jb3VudCxcbiAgICAgICAgc2hhcmVkSW50ZXJuYWxEb2N1bWVudFN0b3JlXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzYXZlKHN0b3JlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZG9jczogc3RvcmUuZG9jcyxcbiAgICAgICAgY291bnQ6IHN0b3JlLmNvdW50XG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEb2N1bWVudHNTdG9yZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjcmVhdGUsXG4gICAgICAgIGdldCxcbiAgICAgICAgZ2V0TXVsdGlwbGUsXG4gICAgICAgIGdldEFsbCxcbiAgICAgICAgc3RvcmUsXG4gICAgICAgIHJlbW92ZSxcbiAgICAgICAgY291bnQsXG4gICAgICAgIGxvYWQsXG4gICAgICAgIHNhdmVcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZG9jdW1lbnRzLXN0b3JlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/documents-store.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/facets.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/facets.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFacets: () => (/* binding */ getFacets)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\n\nfunction sortAsc(a, b) {\n    return a[1] - b[1];\n}\nfunction sortDesc(a, b) {\n    return b[1] - a[1];\n}\nfunction sortingPredicateBuilder(order = 'desc') {\n    return order.toLowerCase() === 'asc' ? sortAsc : sortDesc;\n}\nfunction getFacets(orama, results, facetsConfig) {\n    const facets = {};\n    const allIDs = results.map(([id]) => id);\n    const allDocs = orama.documentsStore.getMultiple(orama.data.docs, allIDs);\n    const facetKeys = Object.keys(facetsConfig);\n    const properties = orama.index.getSearchablePropertiesWithTypes(orama.data.index);\n    for (const facet of facetKeys) {\n        let values;\n        // Hack to guarantee the same order of ranges as specified by the user\n        // TODO: Revisit this once components land\n        if (properties[facet] === 'number') {\n            const { ranges } = facetsConfig[facet];\n            const rangesLength = ranges.length;\n            const tmp = Array.from({ length: rangesLength });\n            for (let i = 0; i < rangesLength; i++) {\n                const range = ranges[i];\n                tmp[i] = [`${range.from}-${range.to}`, 0];\n            }\n            values = Object.fromEntries(tmp);\n        }\n        facets[facet] = {\n            count: 0,\n            values: values ?? {}\n        };\n    }\n    const allDocsLength = allDocs.length;\n    for (let i = 0; i < allDocsLength; i++) {\n        const doc = allDocs[i];\n        for (const facet of facetKeys) {\n            const facetValue = facet.includes('.') ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getNested)(doc, facet) : doc[facet];\n            const propertyType = properties[facet];\n            const facetValues = facets[facet].values;\n            switch (propertyType) {\n                case 'number': {\n                    const ranges = facetsConfig[facet].ranges;\n                    calculateNumberFacetBuilder(ranges, facetValues)(facetValue);\n                    break;\n                }\n                case 'number[]': {\n                    const alreadyInsertedValues = new Set();\n                    const ranges = facetsConfig[facet].ranges;\n                    const calculateNumberFacet = calculateNumberFacetBuilder(ranges, facetValues, alreadyInsertedValues);\n                    for (const v of facetValue) {\n                        calculateNumberFacet(v);\n                    }\n                    break;\n                }\n                case 'boolean':\n                case 'enum':\n                case 'string': {\n                    calculateBooleanStringOrEnumFacetBuilder(facetValues, propertyType)(facetValue);\n                    break;\n                }\n                case 'boolean[]':\n                case 'enum[]':\n                case 'string[]': {\n                    const alreadyInsertedValues = new Set();\n                    const innerType = propertyType === 'boolean[]' ? 'boolean' : 'string';\n                    const calculateBooleanStringOrEnumFacet = calculateBooleanStringOrEnumFacetBuilder(facetValues, innerType, alreadyInsertedValues);\n                    for (const v of facetValue) {\n                        calculateBooleanStringOrEnumFacet(v);\n                    }\n                    break;\n                }\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('FACET_NOT_SUPPORTED', propertyType);\n            }\n        }\n    }\n    // TODO: We are looping again with the same previous keys, should we creat a single loop instead?\n    for (const facet of facetKeys) {\n        const currentFacet = facets[facet];\n        // Count the number of values for each facet\n        currentFacet.count = Object.keys(currentFacet.values).length;\n        // Sort only string-based facets\n        if (properties[facet] === 'string') {\n            const stringFacetDefinition = facetsConfig[facet];\n            const sortingPredicate = sortingPredicateBuilder(stringFacetDefinition.sort);\n            currentFacet.values = Object.fromEntries(Object.entries(currentFacet.values)\n                .sort(sortingPredicate)\n                .slice(stringFacetDefinition.offset ?? 0, stringFacetDefinition.limit ?? 10));\n        }\n    }\n    return facets;\n}\nfunction calculateNumberFacetBuilder(ranges, values, alreadyInsertedValues) {\n    return (facetValue) => {\n        for (const range of ranges) {\n            const value = `${range.from}-${range.to}`;\n            if (alreadyInsertedValues?.has(value)) {\n                continue;\n            }\n            if (facetValue >= range.from && facetValue <= range.to) {\n                if (values[value] === undefined) {\n                    values[value] = 1;\n                }\n                else {\n                    values[value]++;\n                    alreadyInsertedValues?.add(value);\n                }\n            }\n        }\n    };\n}\nfunction calculateBooleanStringOrEnumFacetBuilder(values, propertyType, alreadyInsertedValues) {\n    const defaultValue = propertyType === 'boolean' ? 'false' : '';\n    return (facetValue) => {\n        // String or boolean based facets\n        const value = facetValue?.toString() ?? defaultValue;\n        if (alreadyInsertedValues?.has(value)) {\n            return;\n        }\n        values[value] = (values[value] ?? 0) + 1;\n        alreadyInsertedValues?.add(value);\n    };\n}\n//# sourceMappingURL=facets.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvZmFjZXRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUNIO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsU0FBUztBQUM3QjtBQUNBLHFDQUFxQyxzQkFBc0I7QUFDM0QsNEJBQTRCLGtCQUFrQjtBQUM5QztBQUNBLDZCQUE2QixXQUFXLEdBQUcsU0FBUztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsbUJBQW1CO0FBQ3ZDO0FBQ0E7QUFDQSxxREFBcUQsb0RBQVM7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix1REFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixXQUFXLEdBQUcsU0FBUztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9jb21wb25lbnRzL2ZhY2V0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFcnJvciB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBnZXROZXN0ZWQgfSBmcm9tICcuLi91dGlscy5qcyc7XG5mdW5jdGlvbiBzb3J0QXNjKGEsIGIpIHtcbiAgICByZXR1cm4gYVsxXSAtIGJbMV07XG59XG5mdW5jdGlvbiBzb3J0RGVzYyhhLCBiKSB7XG4gICAgcmV0dXJuIGJbMV0gLSBhWzFdO1xufVxuZnVuY3Rpb24gc29ydGluZ1ByZWRpY2F0ZUJ1aWxkZXIob3JkZXIgPSAnZGVzYycpIHtcbiAgICByZXR1cm4gb3JkZXIudG9Mb3dlckNhc2UoKSA9PT0gJ2FzYycgPyBzb3J0QXNjIDogc29ydERlc2M7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RmFjZXRzKG9yYW1hLCByZXN1bHRzLCBmYWNldHNDb25maWcpIHtcbiAgICBjb25zdCBmYWNldHMgPSB7fTtcbiAgICBjb25zdCBhbGxJRHMgPSByZXN1bHRzLm1hcCgoW2lkXSkgPT4gaWQpO1xuICAgIGNvbnN0IGFsbERvY3MgPSBvcmFtYS5kb2N1bWVudHNTdG9yZS5nZXRNdWx0aXBsZShvcmFtYS5kYXRhLmRvY3MsIGFsbElEcyk7XG4gICAgY29uc3QgZmFjZXRLZXlzID0gT2JqZWN0LmtleXMoZmFjZXRzQ29uZmlnKTtcbiAgICBjb25zdCBwcm9wZXJ0aWVzID0gb3JhbWEuaW5kZXguZ2V0U2VhcmNoYWJsZVByb3BlcnRpZXNXaXRoVHlwZXMob3JhbWEuZGF0YS5pbmRleCk7XG4gICAgZm9yIChjb25zdCBmYWNldCBvZiBmYWNldEtleXMpIHtcbiAgICAgICAgbGV0IHZhbHVlcztcbiAgICAgICAgLy8gSGFjayB0byBndWFyYW50ZWUgdGhlIHNhbWUgb3JkZXIgb2YgcmFuZ2VzIGFzIHNwZWNpZmllZCBieSB0aGUgdXNlclxuICAgICAgICAvLyBUT0RPOiBSZXZpc2l0IHRoaXMgb25jZSBjb21wb25lbnRzIGxhbmRcbiAgICAgICAgaWYgKHByb3BlcnRpZXNbZmFjZXRdID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgY29uc3QgeyByYW5nZXMgfSA9IGZhY2V0c0NvbmZpZ1tmYWNldF07XG4gICAgICAgICAgICBjb25zdCByYW5nZXNMZW5ndGggPSByYW5nZXMubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3QgdG1wID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogcmFuZ2VzTGVuZ3RoIH0pO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByYW5nZXNMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJhbmdlID0gcmFuZ2VzW2ldO1xuICAgICAgICAgICAgICAgIHRtcFtpXSA9IFtgJHtyYW5nZS5mcm9tfS0ke3JhbmdlLnRvfWAsIDBdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFsdWVzID0gT2JqZWN0LmZyb21FbnRyaWVzKHRtcCk7XG4gICAgICAgIH1cbiAgICAgICAgZmFjZXRzW2ZhY2V0XSA9IHtcbiAgICAgICAgICAgIGNvdW50OiAwLFxuICAgICAgICAgICAgdmFsdWVzOiB2YWx1ZXMgPz8ge31cbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgYWxsRG9jc0xlbmd0aCA9IGFsbERvY3MubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsRG9jc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGRvYyA9IGFsbERvY3NbaV07XG4gICAgICAgIGZvciAoY29uc3QgZmFjZXQgb2YgZmFjZXRLZXlzKSB7XG4gICAgICAgICAgICBjb25zdCBmYWNldFZhbHVlID0gZmFjZXQuaW5jbHVkZXMoJy4nKSA/IGdldE5lc3RlZChkb2MsIGZhY2V0KSA6IGRvY1tmYWNldF07XG4gICAgICAgICAgICBjb25zdCBwcm9wZXJ0eVR5cGUgPSBwcm9wZXJ0aWVzW2ZhY2V0XTtcbiAgICAgICAgICAgIGNvbnN0IGZhY2V0VmFsdWVzID0gZmFjZXRzW2ZhY2V0XS52YWx1ZXM7XG4gICAgICAgICAgICBzd2l0Y2ggKHByb3BlcnR5VHlwZSkge1xuICAgICAgICAgICAgICAgIGNhc2UgJ251bWJlcic6IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmFuZ2VzID0gZmFjZXRzQ29uZmlnW2ZhY2V0XS5yYW5nZXM7XG4gICAgICAgICAgICAgICAgICAgIGNhbGN1bGF0ZU51bWJlckZhY2V0QnVpbGRlcihyYW5nZXMsIGZhY2V0VmFsdWVzKShmYWNldFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ251bWJlcltdJzoge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBhbHJlYWR5SW5zZXJ0ZWRWYWx1ZXMgPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJhbmdlcyA9IGZhY2V0c0NvbmZpZ1tmYWNldF0ucmFuZ2VzO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjYWxjdWxhdGVOdW1iZXJGYWNldCA9IGNhbGN1bGF0ZU51bWJlckZhY2V0QnVpbGRlcihyYW5nZXMsIGZhY2V0VmFsdWVzLCBhbHJlYWR5SW5zZXJ0ZWRWYWx1ZXMpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHYgb2YgZmFjZXRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsY3VsYXRlTnVtYmVyRmFjZXQodik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ2Jvb2xlYW4nOlxuICAgICAgICAgICAgICAgIGNhc2UgJ2VudW0nOlxuICAgICAgICAgICAgICAgIGNhc2UgJ3N0cmluZyc6IHtcbiAgICAgICAgICAgICAgICAgICAgY2FsY3VsYXRlQm9vbGVhblN0cmluZ09yRW51bUZhY2V0QnVpbGRlcihmYWNldFZhbHVlcywgcHJvcGVydHlUeXBlKShmYWNldFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhc2UgJ2Jvb2xlYW5bXSc6XG4gICAgICAgICAgICAgICAgY2FzZSAnZW51bVtdJzpcbiAgICAgICAgICAgICAgICBjYXNlICdzdHJpbmdbXSc6IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYWxyZWFkeUluc2VydGVkVmFsdWVzID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpbm5lclR5cGUgPSBwcm9wZXJ0eVR5cGUgPT09ICdib29sZWFuW10nID8gJ2Jvb2xlYW4nIDogJ3N0cmluZyc7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNhbGN1bGF0ZUJvb2xlYW5TdHJpbmdPckVudW1GYWNldCA9IGNhbGN1bGF0ZUJvb2xlYW5TdHJpbmdPckVudW1GYWNldEJ1aWxkZXIoZmFjZXRWYWx1ZXMsIGlubmVyVHlwZSwgYWxyZWFkeUluc2VydGVkVmFsdWVzKTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCB2IG9mIGZhY2V0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGN1bGF0ZUJvb2xlYW5TdHJpbmdPckVudW1GYWNldCh2KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0ZBQ0VUX05PVF9TVVBQT1JURUQnLCBwcm9wZXJ0eVR5cGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIFRPRE86IFdlIGFyZSBsb29waW5nIGFnYWluIHdpdGggdGhlIHNhbWUgcHJldmlvdXMga2V5cywgc2hvdWxkIHdlIGNyZWF0IGEgc2luZ2xlIGxvb3AgaW5zdGVhZD9cbiAgICBmb3IgKGNvbnN0IGZhY2V0IG9mIGZhY2V0S2V5cykge1xuICAgICAgICBjb25zdCBjdXJyZW50RmFjZXQgPSBmYWNldHNbZmFjZXRdO1xuICAgICAgICAvLyBDb3VudCB0aGUgbnVtYmVyIG9mIHZhbHVlcyBmb3IgZWFjaCBmYWNldFxuICAgICAgICBjdXJyZW50RmFjZXQuY291bnQgPSBPYmplY3Qua2V5cyhjdXJyZW50RmFjZXQudmFsdWVzKS5sZW5ndGg7XG4gICAgICAgIC8vIFNvcnQgb25seSBzdHJpbmctYmFzZWQgZmFjZXRzXG4gICAgICAgIGlmIChwcm9wZXJ0aWVzW2ZhY2V0XSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGNvbnN0IHN0cmluZ0ZhY2V0RGVmaW5pdGlvbiA9IGZhY2V0c0NvbmZpZ1tmYWNldF07XG4gICAgICAgICAgICBjb25zdCBzb3J0aW5nUHJlZGljYXRlID0gc29ydGluZ1ByZWRpY2F0ZUJ1aWxkZXIoc3RyaW5nRmFjZXREZWZpbml0aW9uLnNvcnQpO1xuICAgICAgICAgICAgY3VycmVudEZhY2V0LnZhbHVlcyA9IE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhjdXJyZW50RmFjZXQudmFsdWVzKVxuICAgICAgICAgICAgICAgIC5zb3J0KHNvcnRpbmdQcmVkaWNhdGUpXG4gICAgICAgICAgICAgICAgLnNsaWNlKHN0cmluZ0ZhY2V0RGVmaW5pdGlvbi5vZmZzZXQgPz8gMCwgc3RyaW5nRmFjZXREZWZpbml0aW9uLmxpbWl0ID8/IDEwKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhY2V0cztcbn1cbmZ1bmN0aW9uIGNhbGN1bGF0ZU51bWJlckZhY2V0QnVpbGRlcihyYW5nZXMsIHZhbHVlcywgYWxyZWFkeUluc2VydGVkVmFsdWVzKSB7XG4gICAgcmV0dXJuIChmYWNldFZhbHVlKSA9PiB7XG4gICAgICAgIGZvciAoY29uc3QgcmFuZ2Ugb2YgcmFuZ2VzKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGAke3JhbmdlLmZyb219LSR7cmFuZ2UudG99YDtcbiAgICAgICAgICAgIGlmIChhbHJlYWR5SW5zZXJ0ZWRWYWx1ZXM/Lmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChmYWNldFZhbHVlID49IHJhbmdlLmZyb20gJiYgZmFjZXRWYWx1ZSA8PSByYW5nZS50bykge1xuICAgICAgICAgICAgICAgIGlmICh2YWx1ZXNbdmFsdWVdID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzW3ZhbHVlXSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZXNbdmFsdWVdKys7XG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbnNlcnRlZFZhbHVlcz8uYWRkKHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xufVxuZnVuY3Rpb24gY2FsY3VsYXRlQm9vbGVhblN0cmluZ09yRW51bUZhY2V0QnVpbGRlcih2YWx1ZXMsIHByb3BlcnR5VHlwZSwgYWxyZWFkeUluc2VydGVkVmFsdWVzKSB7XG4gICAgY29uc3QgZGVmYXVsdFZhbHVlID0gcHJvcGVydHlUeXBlID09PSAnYm9vbGVhbicgPyAnZmFsc2UnIDogJyc7XG4gICAgcmV0dXJuIChmYWNldFZhbHVlKSA9PiB7XG4gICAgICAgIC8vIFN0cmluZyBvciBib29sZWFuIGJhc2VkIGZhY2V0c1xuICAgICAgICBjb25zdCB2YWx1ZSA9IGZhY2V0VmFsdWU/LnRvU3RyaW5nKCkgPz8gZGVmYXVsdFZhbHVlO1xuICAgICAgICBpZiAoYWxyZWFkeUluc2VydGVkVmFsdWVzPy5oYXModmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFsdWVzW3ZhbHVlXSA9ICh2YWx1ZXNbdmFsdWVdID8/IDApICsgMTtcbiAgICAgICAgYWxyZWFkeUluc2VydGVkVmFsdWVzPy5hZGQodmFsdWUpO1xuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mYWNldHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/facets.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/groups.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/groups.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getGroups: () => (/* binding */ getGroups)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n\n\n\nconst DEFAULT_REDUCE = {\n    reducer: (_, acc, res, index) => {\n        acc[index] = res;\n        return acc;\n    },\n    getInitialValue: (length) => Array.from({ length })\n};\nconst ALLOWED_TYPES = ['string', 'number', 'boolean'];\nfunction getGroups(orama, results, groupBy) {\n    const properties = groupBy.properties;\n    const propertiesLength = properties.length;\n    const schemaProperties = orama.index.getSearchablePropertiesWithTypes(orama.data.index);\n    for (let i = 0; i < propertiesLength; i++) {\n        const property = properties[i];\n        if (typeof schemaProperties[property] === 'undefined') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('UNKNOWN_GROUP_BY_PROPERTY', property);\n        }\n        if (!ALLOWED_TYPES.includes(schemaProperties[property])) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_GROUP_BY_PROPERTY', property, ALLOWED_TYPES.join(', '), schemaProperties[property]);\n        }\n    }\n    const allIDs = results.map(([id]) => (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, id));\n    // allDocs is already sorted by the sortBy algorithm\n    // We leverage on that to limit the number of documents returned\n    const allDocs = orama.documentsStore.getMultiple(orama.data.docs, allIDs);\n    const allDocsLength = allDocs.length;\n    const returnedCount = groupBy.maxResult || Number.MAX_SAFE_INTEGER;\n    const listOfValues = [];\n    // We want to understand which documents have which values\n    // and group them by the property and values\n    const g = {};\n    for (let i = 0; i < propertiesLength; i++) {\n        const groupByKey = properties[i];\n        const group = {\n            property: groupByKey,\n            perValue: {}\n        };\n        const values = new Set();\n        for (let j = 0; j < allDocsLength; j++) {\n            const doc = allDocs[j];\n            const value = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getNested)(doc, groupByKey);\n            // we don't want to consider undefined values\n            if (typeof value === 'undefined') {\n                continue;\n            }\n            const keyValue = typeof value !== 'boolean' ? value : '' + value;\n            const perValue = group.perValue[keyValue] ?? {\n                indexes: [],\n                count: 0\n            };\n            if (perValue.count >= returnedCount) {\n                // We stop early because for this value we react the limit\n                continue;\n            }\n            // We use the index to keep track of the original order\n            perValue.indexes.push(j);\n            perValue.count++;\n            group.perValue[keyValue] = perValue;\n            values.add(value);\n        }\n        listOfValues.push(Array.from(values));\n        g[groupByKey] = group;\n    }\n    const combinations = calculateCombination(listOfValues);\n    const combinationsLength = combinations.length;\n    const groups = [];\n    for (let i = 0; i < combinationsLength; i++) {\n        const combination = combinations[i];\n        const combinationLength = combination.length;\n        const group = {\n            values: [],\n            indexes: []\n        };\n        const indexes = [];\n        for (let j = 0; j < combinationLength; j++) {\n            const value = combination[j];\n            const property = properties[j];\n            indexes.push(g[property].perValue[(typeof value !== 'boolean' ? value : '' + value)].indexes);\n            group.values.push(value);\n        }\n        // We leverage on the index to sort the results by the original order\n        group.indexes = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.intersect)(indexes).sort((a, b) => a - b);\n        // don't generate empty groups\n        if (group.indexes.length === 0) {\n            continue;\n        }\n        groups.push(group);\n    }\n    const groupsLength = groups.length;\n    const res = Array.from({ length: groupsLength });\n    for (let i = 0; i < groupsLength; i++) {\n        const group = groups[i];\n        const reduce = (groupBy.reduce || DEFAULT_REDUCE);\n        const docs = group.indexes.map((index) => {\n            return {\n                id: allIDs[index],\n                score: results[index][1],\n                document: allDocs[index]\n            };\n        });\n        const func = reduce.reducer.bind(null, group.values);\n        const initialValue = reduce.getInitialValue(group.indexes.length);\n        const aggregationValue = docs.reduce(func, initialValue);\n        res[i] = {\n            values: group.values,\n            result: aggregationValue\n        };\n    }\n    return res;\n}\nfunction calculateCombination(arrs, index = 0) {\n    if (index + 1 === arrs.length)\n        return arrs[index].map((item) => [item]);\n    const head = arrs[index];\n    const c = calculateCombination(arrs, index + 1);\n    const combinations = [];\n    for (const value of head) {\n        for (const combination of c) {\n            const result = [value];\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.safeArrayPush)(result, combination);\n            combinations.push(result);\n        }\n    }\n    return combinations;\n}\n//# sourceMappingURL=groups.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/groups.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js":
/*!********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/hooks.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FUNCTION_COMPONENTS: () => (/* binding */ FUNCTION_COMPONENTS),\n/* harmony export */   OBJECT_COMPONENTS: () => (/* binding */ OBJECT_COMPONENTS),\n/* harmony export */   SINGLE_OR_ARRAY_COMPONENTS: () => (/* binding */ SINGLE_OR_ARRAY_COMPONENTS),\n/* harmony export */   runAfterCreate: () => (/* binding */ runAfterCreate),\n/* harmony export */   runAfterSearch: () => (/* binding */ runAfterSearch),\n/* harmony export */   runBeforeSearch: () => (/* binding */ runBeforeSearch),\n/* harmony export */   runMultipleHook: () => (/* binding */ runMultipleHook),\n/* harmony export */   runSingleHook: () => (/* binding */ runSingleHook)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\nconst OBJECT_COMPONENTS = ['tokenizer', 'index', 'documentsStore', 'sorter'];\nconst FUNCTION_COMPONENTS = [\n    'validateSchema',\n    'getDocumentIndexId',\n    'getDocumentProperties',\n    'formatElapsedTime'\n];\nconst SINGLE_OR_ARRAY_COMPONENTS = [\n/* deprecated with v2.0.0-beta.5 */\n];\nfunction runSingleHook(hooks, orama, id, doc) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(orama, id, doc);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(orama, id, doc);\n        }\n    }\n}\nfunction runMultipleHook(hooks, orama, docsOrIds) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(orama, docsOrIds);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(orama, docsOrIds);\n        }\n    }\n}\nfunction runAfterSearch(hooks, db, params, language, results) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(db, params, language, results);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(db, params, language, results);\n        }\n    }\n}\nfunction runBeforeSearch(hooks, db, params, language) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(db, params, language);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(db, params, language);\n        }\n    }\n}\nfunction runAfterCreate(hooks, db) {\n    const needAsync = hooks.some(_utils_js__WEBPACK_IMPORTED_MODULE_0__.isAsyncFunction);\n    if (needAsync) {\n        return (async () => {\n            for (const hook of hooks) {\n                await hook(db);\n            }\n        })();\n    }\n    else {\n        for (const hook of hooks) {\n            hook(db);\n        }\n    }\n}\n//# sourceMappingURL=hooks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvaG9va3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQThDO0FBQ3ZDO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUCxpQ0FBaUMsc0RBQWU7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUNBQWlDLHNEQUFlO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGlDQUFpQyxzREFBZTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpQ0FBaUMsc0RBQWU7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUNBQWlDLHNEQUFlO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9jb21wb25lbnRzL2hvb2tzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQXN5bmNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCBPQkpFQ1RfQ09NUE9ORU5UUyA9IFsndG9rZW5pemVyJywgJ2luZGV4JywgJ2RvY3VtZW50c1N0b3JlJywgJ3NvcnRlciddO1xuZXhwb3J0IGNvbnN0IEZVTkNUSU9OX0NPTVBPTkVOVFMgPSBbXG4gICAgJ3ZhbGlkYXRlU2NoZW1hJyxcbiAgICAnZ2V0RG9jdW1lbnRJbmRleElkJyxcbiAgICAnZ2V0RG9jdW1lbnRQcm9wZXJ0aWVzJyxcbiAgICAnZm9ybWF0RWxhcHNlZFRpbWUnXG5dO1xuZXhwb3J0IGNvbnN0IFNJTkdMRV9PUl9BUlJBWV9DT01QT05FTlRTID0gW1xuLyogZGVwcmVjYXRlZCB3aXRoIHYyLjAuMC1iZXRhLjUgKi9cbl07XG5leHBvcnQgZnVuY3Rpb24gcnVuU2luZ2xlSG9vayhob29rcywgb3JhbWEsIGlkLCBkb2MpIHtcbiAgICBjb25zdCBuZWVkQXN5bmMgPSBob29rcy5zb21lKGlzQXN5bmNGdW5jdGlvbik7XG4gICAgaWYgKG5lZWRBc3luYykge1xuICAgICAgICByZXR1cm4gKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaG9vayBvZiBob29rcykge1xuICAgICAgICAgICAgICAgIGF3YWl0IGhvb2sob3JhbWEsIGlkLCBkb2MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KSgpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZm9yIChjb25zdCBob29rIG9mIGhvb2tzKSB7XG4gICAgICAgICAgICBob29rKG9yYW1hLCBpZCwgZG9jKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBydW5NdWx0aXBsZUhvb2soaG9va3MsIG9yYW1hLCBkb2NzT3JJZHMpIHtcbiAgICBjb25zdCBuZWVkQXN5bmMgPSBob29rcy5zb21lKGlzQXN5bmNGdW5jdGlvbik7XG4gICAgaWYgKG5lZWRBc3luYykge1xuICAgICAgICByZXR1cm4gKGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaG9vayBvZiBob29rcykge1xuICAgICAgICAgICAgICAgIGF3YWl0IGhvb2sob3JhbWEsIGRvY3NPcklkcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBmb3IgKGNvbnN0IGhvb2sgb2YgaG9va3MpIHtcbiAgICAgICAgICAgIGhvb2sob3JhbWEsIGRvY3NPcklkcyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcnVuQWZ0ZXJTZWFyY2goaG9va3MsIGRiLCBwYXJhbXMsIGxhbmd1YWdlLCByZXN1bHRzKSB7XG4gICAgY29uc3QgbmVlZEFzeW5jID0gaG9va3Muc29tZShpc0FzeW5jRnVuY3Rpb24pO1xuICAgIGlmIChuZWVkQXN5bmMpIHtcbiAgICAgICAgcmV0dXJuIChhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGhvb2sgb2YgaG9va3MpIHtcbiAgICAgICAgICAgICAgICBhd2FpdCBob29rKGRiLCBwYXJhbXMsIGxhbmd1YWdlLCByZXN1bHRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkoKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZvciAoY29uc3QgaG9vayBvZiBob29rcykge1xuICAgICAgICAgICAgaG9vayhkYiwgcGFyYW1zLCBsYW5ndWFnZSwgcmVzdWx0cyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcnVuQmVmb3JlU2VhcmNoKGhvb2tzLCBkYiwgcGFyYW1zLCBsYW5ndWFnZSkge1xuICAgIGNvbnN0IG5lZWRBc3luYyA9IGhvb2tzLnNvbWUoaXNBc3luY0Z1bmN0aW9uKTtcbiAgICBpZiAobmVlZEFzeW5jKSB7XG4gICAgICAgIHJldHVybiAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgZm9yIChjb25zdCBob29rIG9mIGhvb2tzKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgaG9vayhkYiwgcGFyYW1zLCBsYW5ndWFnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBmb3IgKGNvbnN0IGhvb2sgb2YgaG9va3MpIHtcbiAgICAgICAgICAgIGhvb2soZGIsIHBhcmFtcywgbGFuZ3VhZ2UpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIHJ1bkFmdGVyQ3JlYXRlKGhvb2tzLCBkYikge1xuICAgIGNvbnN0IG5lZWRBc3luYyA9IGhvb2tzLnNvbWUoaXNBc3luY0Z1bmN0aW9uKTtcbiAgICBpZiAobmVlZEFzeW5jKSB7XG4gICAgICAgIHJldHVybiAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgZm9yIChjb25zdCBob29rIG9mIGhvb2tzKSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgaG9vayhkYik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBmb3IgKGNvbnN0IGhvb2sgb2YgaG9va3MpIHtcbiAgICAgICAgICAgIGhvb2soZGIpO1xuICAgICAgICB9XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG9va3MuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateResultScores: () => (/* binding */ calculateResultScores),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createIndex: () => (/* binding */ createIndex),\n/* harmony export */   getSearchableProperties: () => (/* binding */ getSearchableProperties),\n/* harmony export */   getSearchablePropertiesWithTypes: () => (/* binding */ getSearchablePropertiesWithTypes),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertDocumentScoreParameters: () => (/* binding */ insertDocumentScoreParameters),\n/* harmony export */   insertTokenScoreParameters: () => (/* binding */ insertTokenScoreParameters),\n/* harmony export */   insertVector: () => (/* binding */ insertVector),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeDocumentScoreParameters: () => (/* binding */ removeDocumentScoreParameters),\n/* harmony export */   removeTokenScoreParameters: () => (/* binding */ removeTokenScoreParameters),\n/* harmony export */   save: () => (/* binding */ save),\n/* harmony export */   search: () => (/* binding */ search),\n/* harmony export */   searchByWhereClause: () => (/* binding */ searchByWhereClause)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _trees_avl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../trees/avl.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/avl.js\");\n/* harmony import */ var _trees_flat_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../trees/flat.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/flat.js\");\n/* harmony import */ var _trees_radix_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../trees/radix.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/radix.js\");\n/* harmony import */ var _trees_bkd_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../trees/bkd.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/bkd.js\");\n/* harmony import */ var _trees_bool_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../trees/bool.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/bool.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _algorithms_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./algorithms.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/algorithms.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/defaults.js\");\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n/* harmony import */ var _trees_vector_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../trees/vector.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/vector.js\");\n\n\n\n\n\n\n\n\n\n\n\nfunction insertDocumentScoreParameters(index, prop, id, tokens, docsCount) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__.getInternalDocumentId)(index.sharedInternalDocumentStore, id);\n    index.avgFieldLength[prop] = ((index.avgFieldLength[prop] ?? 0) * (docsCount - 1) + tokens.length) / docsCount;\n    index.fieldLengths[prop][internalId] = tokens.length;\n    index.frequencies[prop][internalId] = {};\n}\nfunction insertTokenScoreParameters(index, prop, id, tokens, token) {\n    let tokenFrequency = 0;\n    for (const t of tokens) {\n        if (t === token) {\n            tokenFrequency++;\n        }\n    }\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__.getInternalDocumentId)(index.sharedInternalDocumentStore, id);\n    const tf = tokenFrequency / tokens.length;\n    index.frequencies[prop][internalId][token] = tf;\n    if (!(token in index.tokenOccurrences[prop])) {\n        index.tokenOccurrences[prop][token] = 0;\n    }\n    // increase a token counter that may not yet exist\n    index.tokenOccurrences[prop][token] = (index.tokenOccurrences[prop][token] ?? 0) + 1;\n}\nfunction removeDocumentScoreParameters(index, prop, id, docsCount) {\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_9__.getInternalDocumentId)(index.sharedInternalDocumentStore, id);\n    if (docsCount > 1) {\n        index.avgFieldLength[prop] =\n            (index.avgFieldLength[prop] * docsCount - index.fieldLengths[prop][internalId]) / (docsCount - 1);\n    }\n    else {\n        index.avgFieldLength[prop] = undefined;\n    }\n    index.fieldLengths[prop][internalId] = undefined;\n    index.frequencies[prop][internalId] = undefined;\n}\nfunction removeTokenScoreParameters(index, prop, token) {\n    index.tokenOccurrences[prop][token]--;\n}\nfunction create(orama, sharedInternalDocumentStore, schema, index, prefix = '') {\n    if (!index) {\n        index = {\n            sharedInternalDocumentStore,\n            indexes: {},\n            vectorIndexes: {},\n            searchableProperties: [],\n            searchablePropertiesWithTypes: {},\n            frequencies: {},\n            tokenOccurrences: {},\n            avgFieldLength: {},\n            fieldLengths: {}\n        };\n    }\n    for (const [prop, type] of Object.entries(schema)) {\n        const path = `${prefix}${prefix ? '.' : ''}${prop}`;\n        if (typeof type === 'object' && !Array.isArray(type)) {\n            // Nested\n            create(orama, sharedInternalDocumentStore, type, index, path);\n            continue;\n        }\n        if ((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isVectorType)(type)) {\n            index.searchableProperties.push(path);\n            index.searchablePropertiesWithTypes[path] = type;\n            index.vectorIndexes[path] = {\n                type: 'Vector',\n                node: new _trees_vector_js__WEBPACK_IMPORTED_MODULE_10__.VectorIndex((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.getVectorSize)(type)),\n                isArray: false\n            };\n        }\n        else {\n            const isArray = /\\[/.test(type);\n            switch (type) {\n                case 'boolean':\n                case 'boolean[]':\n                    index.indexes[path] = { type: 'Bool', node: new _trees_bool_js__WEBPACK_IMPORTED_MODULE_5__.BoolNode(), isArray };\n                    break;\n                case 'number':\n                case 'number[]':\n                    index.indexes[path] = { type: 'AVL', node: new _trees_avl_js__WEBPACK_IMPORTED_MODULE_1__.AVLTree(0, []), isArray };\n                    break;\n                case 'string':\n                case 'string[]':\n                    index.indexes[path] = { type: 'Radix', node: new _trees_radix_js__WEBPACK_IMPORTED_MODULE_3__.RadixTree(), isArray };\n                    index.avgFieldLength[path] = 0;\n                    index.frequencies[path] = {};\n                    index.tokenOccurrences[path] = {};\n                    index.fieldLengths[path] = {};\n                    break;\n                case 'enum':\n                case 'enum[]':\n                    index.indexes[path] = { type: 'Flat', node: new _trees_flat_js__WEBPACK_IMPORTED_MODULE_2__.FlatTree(), isArray };\n                    break;\n                case 'geopoint':\n                    index.indexes[path] = { type: 'BKD', node: new _trees_bkd_js__WEBPACK_IMPORTED_MODULE_4__.BKDTree(), isArray };\n                    break;\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_SCHEMA_TYPE', Array.isArray(type) ? 'array' : type, path);\n            }\n            index.searchableProperties.push(path);\n            index.searchablePropertiesWithTypes[path] = type;\n        }\n    }\n    return index;\n}\nfunction insertScalarBuilder(implementation, index, prop, internalId, language, tokenizer, docsCount, options) {\n    return (value) => {\n        const { type, node } = index.indexes[prop];\n        switch (type) {\n            case 'Bool': {\n                node[value ? 'true' : 'false'].add(internalId);\n                break;\n            }\n            case 'AVL': {\n                const avlRebalanceThreshold = options?.avlRebalanceThreshold ?? 1;\n                node.insert(value, internalId, avlRebalanceThreshold);\n                break;\n            }\n            case 'Radix': {\n                const tokens = tokenizer.tokenize(value, language, prop, false);\n                implementation.insertDocumentScoreParameters(index, prop, internalId, tokens, docsCount);\n                for (const token of tokens) {\n                    implementation.insertTokenScoreParameters(index, prop, internalId, tokens, token);\n                    node.insert(token, internalId);\n                }\n                break;\n            }\n            case 'Flat': {\n                node.insert(value, internalId);\n                break;\n            }\n            case 'BKD': {\n                node.insert(value, [internalId]);\n                break;\n            }\n        }\n    };\n}\nfunction insert(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount, options) {\n    if ((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isVectorType)(schemaType)) {\n        return insertVector(index, prop, value, id, internalId);\n    }\n    const insertScalar = insertScalarBuilder(implementation, index, prop, internalId, language, tokenizer, docsCount, options);\n    if (!(0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isArrayType)(schemaType)) {\n        return insertScalar(value);\n    }\n    const elements = value;\n    const elementsLength = elements.length;\n    for (let i = 0; i < elementsLength; i++) {\n        insertScalar(elements[i]);\n    }\n}\nfunction insertVector(index, prop, value, id, internalDocumentId) {\n    index.vectorIndexes[prop].node.add(internalDocumentId, value);\n}\nfunction removeScalar(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount) {\n    if ((0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isVectorType)(schemaType)) {\n        index.vectorIndexes[prop].node.remove(internalId);\n        return true;\n    }\n    const { type, node } = index.indexes[prop];\n    switch (type) {\n        case 'AVL': {\n            node.removeDocument(value, internalId);\n            return true;\n        }\n        case 'Bool': {\n            node[value ? 'true' : 'false'].delete(internalId);\n            return true;\n        }\n        case 'Radix': {\n            const tokens = tokenizer.tokenize(value, language, prop);\n            implementation.removeDocumentScoreParameters(index, prop, id, docsCount);\n            for (const token of tokens) {\n                implementation.removeTokenScoreParameters(index, prop, token);\n                node.removeDocumentByWord(token, internalId);\n            }\n            return true;\n        }\n        case 'Flat': {\n            node.removeDocument(internalId, value);\n            return true;\n        }\n        case 'BKD': {\n            node.removeDocByID(value, internalId);\n            return false;\n        }\n    }\n}\nfunction remove(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount) {\n    if (!(0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.isArrayType)(schemaType)) {\n        return removeScalar(implementation, index, prop, id, internalId, value, schemaType, language, tokenizer, docsCount);\n    }\n    const innerSchemaType = (0,_defaults_js__WEBPACK_IMPORTED_MODULE_8__.getInnerType)(schemaType);\n    const elements = value;\n    const elementsLength = elements.length;\n    for (let i = 0; i < elementsLength; i++) {\n        removeScalar(implementation, index, prop, id, internalId, elements[i], innerSchemaType, language, tokenizer, docsCount);\n    }\n    return true;\n}\nfunction calculateResultScores(index, prop, term, ids, docsCount, bm25Relevance, resultsMap, boostPerProperty, whereFiltersIDs, keywordMatchesMap) {\n    const documentIDs = Array.from(ids);\n    const avgFieldLength = index.avgFieldLength[prop];\n    const fieldLengths = index.fieldLengths[prop];\n    const oramaOccurrences = index.tokenOccurrences[prop];\n    const oramaFrequencies = index.frequencies[prop];\n    // oramaOccurrences[term] can be undefined, 0, string, or { [k: string]: number }\n    const termOccurrences = typeof oramaOccurrences[term] === 'number' ? (oramaOccurrences[term] ?? 0) : 0;\n    // Calculate TF-IDF value for each term, in each document, for each index.\n    const documentIDsLength = documentIDs.length;\n    for (let k = 0; k < documentIDsLength; k++) {\n        const internalId = documentIDs[k];\n        if (whereFiltersIDs && !whereFiltersIDs.has(internalId)) {\n            continue;\n        }\n        // Track keyword matches per property\n        if (!keywordMatchesMap.has(internalId)) {\n            keywordMatchesMap.set(internalId, new Map());\n        }\n        const propertyMatches = keywordMatchesMap.get(internalId);\n        propertyMatches.set(prop, (propertyMatches.get(prop) || 0) + 1);\n        const tf = oramaFrequencies?.[internalId]?.[term] ?? 0;\n        const bm25 = (0,_algorithms_js__WEBPACK_IMPORTED_MODULE_7__.BM25)(tf, termOccurrences, docsCount, fieldLengths[internalId], avgFieldLength, bm25Relevance);\n        if (resultsMap.has(internalId)) {\n            resultsMap.set(internalId, resultsMap.get(internalId) + bm25 * boostPerProperty);\n        }\n        else {\n            resultsMap.set(internalId, bm25 * boostPerProperty);\n        }\n    }\n}\nfunction search(index, term, tokenizer, language, propertiesToSearch, exact, tolerance, boost, relevance, docsCount, whereFiltersIDs, threshold = 0) {\n    const tokens = tokenizer.tokenize(term, language);\n    const keywordsCount = tokens.length || 1;\n    // Track keyword matches per document and property\n    const keywordMatchesMap = new Map();\n    // Track which tokens were found in the search\n    const tokenFoundMap = new Map();\n    const resultsMap = new Map();\n    for (const prop of propertiesToSearch) {\n        if (!(prop in index.indexes)) {\n            continue;\n        }\n        const tree = index.indexes[prop];\n        const { type } = tree;\n        if (type !== 'Radix') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('WRONG_SEARCH_PROPERTY_TYPE', prop);\n        }\n        const boostPerProperty = boost[prop] ?? 1;\n        if (boostPerProperty <= 0) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_BOOST_VALUE', boostPerProperty);\n        }\n        // if the tokenizer returns an empty array, we returns all the documents\n        if (tokens.length === 0 && !term) {\n            tokens.push('');\n        }\n        // Process each token in the search term\n        const tokenLength = tokens.length;\n        for (let i = 0; i < tokenLength; i++) {\n            const token = tokens[i];\n            const searchResult = tree.node.find({ term: token, exact, tolerance });\n            // See if this token was found (for threshold=0 filtering)\n            const termsFound = Object.keys(searchResult);\n            if (termsFound.length > 0) {\n                tokenFoundMap.set(token, true);\n            }\n            // Process each matching term\n            const termsFoundLength = termsFound.length;\n            for (let j = 0; j < termsFoundLength; j++) {\n                const word = termsFound[j];\n                const ids = searchResult[word];\n                calculateResultScores(index, prop, word, ids, docsCount, relevance, resultsMap, boostPerProperty, whereFiltersIDs, keywordMatchesMap);\n            }\n        }\n    }\n    // Convert to array and sort by score\n    const results = Array.from(resultsMap.entries())\n        .map(([id, score]) => [id, score])\n        .sort((a, b) => b[1] - a[1]);\n    if (results.length === 0) {\n        return [];\n    }\n    // If threshold is 1, return all results\n    if (threshold === 1) {\n        return results;\n    }\n    // For threshold=0, check if all tokens were found\n    if (threshold === 0) {\n        // Quick return for single tokens - already validated\n        if (keywordsCount === 1) {\n            return results;\n        }\n        // For multiple tokens, verify that ALL tokens were found\n        // If any token wasn't found, return an empty result\n        for (const token of tokens) {\n            if (!tokenFoundMap.get(token)) {\n                return [];\n            }\n        }\n        // Find documents that have all keywords in at least one property\n        const fullMatches = results.filter(([id]) => {\n            const propertyMatches = keywordMatchesMap.get(id);\n            if (!propertyMatches)\n                return false;\n            // Check if any property has all keywords\n            return Array.from(propertyMatches.values()).some((matches) => matches === keywordsCount);\n        });\n        return fullMatches;\n    }\n    // Find documents that have all keywords in at least one property\n    const fullMatches = results.filter(([id]) => {\n        const propertyMatches = keywordMatchesMap.get(id);\n        if (!propertyMatches)\n            return false;\n        // Check if any property has all keywords\n        return Array.from(propertyMatches.values()).some((matches) => matches === keywordsCount);\n    });\n    // If we have full matches and threshold < 1, return full matches plus a percentage of partial matches\n    if (fullMatches.length > 0) {\n        const remainingResults = results.filter(([id]) => !fullMatches.some(([fid]) => fid === id));\n        const additionalResults = Math.ceil(remainingResults.length * threshold);\n        return [...fullMatches, ...remainingResults.slice(0, additionalResults)];\n    }\n    // If no full matches, return all results\n    return results;\n}\nfunction searchByWhereClause(index, tokenizer, filters, language) {\n    // Handle logical operators\n    if ('and' in filters && filters.and && Array.isArray(filters.and)) {\n        const andFilters = filters.and;\n        if (andFilters.length === 0) {\n            return new Set();\n        }\n        const results = andFilters.map((filter) => searchByWhereClause(index, tokenizer, filter, language));\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setIntersection)(...results);\n    }\n    if ('or' in filters && filters.or && Array.isArray(filters.or)) {\n        const orFilters = filters.or;\n        if (orFilters.length === 0) {\n            return new Set();\n        }\n        const results = orFilters.map((filter) => searchByWhereClause(index, tokenizer, filter, language));\n        // Use reduce to union all sets\n        return results.reduce((acc, set) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(acc, set), new Set());\n    }\n    if ('not' in filters && filters.not) {\n        const notFilter = filters.not;\n        // Get all document IDs from the internal document store\n        const allDocs = new Set();\n        // Get all document IDs from the internal document store\n        const docsStore = index.sharedInternalDocumentStore;\n        for (let i = 1; i <= docsStore.internalIdToId.length; i++) {\n            allDocs.add(i);\n        }\n        const notResult = searchByWhereClause(index, tokenizer, notFilter, language);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setDifference)(allDocs, notResult);\n    }\n    // Handle regular property filters (existing logic)\n    const filterKeys = Object.keys(filters);\n    const filtersMap = filterKeys.reduce((acc, key) => ({\n        [key]: new Set(),\n        ...acc\n    }), {});\n    for (const param of filterKeys) {\n        const operation = filters[param];\n        if (typeof index.indexes[param] === 'undefined') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('UNKNOWN_FILTER_PROPERTY', param);\n        }\n        const { node, type, isArray } = index.indexes[param];\n        if (type === 'Bool') {\n            const idx = node;\n            const filteredIDs = operation ? idx.true : idx.false;\n            filtersMap[param] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(filtersMap[param], filteredIDs);\n            continue;\n        }\n        if (type === 'BKD') {\n            let reqOperation;\n            if ('radius' in operation) {\n                reqOperation = 'radius';\n            }\n            else if ('polygon' in operation) {\n                reqOperation = 'polygon';\n            }\n            else {\n                throw new Error(`Invalid operation ${operation}`);\n            }\n            if (reqOperation === 'radius') {\n                const { value, coordinates, unit = 'm', inside = true, highPrecision = false } = operation[reqOperation];\n                const distanceInMeters = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.convertDistanceToMeters)(value, unit);\n                const ids = node.searchByRadius(coordinates, distanceInMeters, inside, undefined, highPrecision);\n                filtersMap[param] = addGeoResult(filtersMap[param], ids);\n            }\n            else {\n                const { coordinates, inside = true, highPrecision = false } = operation[reqOperation];\n                const ids = node.searchByPolygon(coordinates, inside, undefined, highPrecision);\n                filtersMap[param] = addGeoResult(filtersMap[param], ids);\n            }\n            continue;\n        }\n        if (type === 'Radix' && (typeof operation === 'string' || Array.isArray(operation))) {\n            for (const raw of [operation].flat()) {\n                const term = tokenizer.tokenize(raw, language, param);\n                for (const t of term) {\n                    const filteredIDsResults = node.find({ term: t, exact: true });\n                    filtersMap[param] = addFindResult(filtersMap[param], filteredIDsResults);\n                }\n            }\n            continue;\n        }\n        const operationKeys = Object.keys(operation);\n        if (operationKeys.length > 1) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_FILTER_OPERATION', operationKeys.length);\n        }\n        if (type === 'Flat') {\n            const results = new Set(isArray\n                ? node.filterArr(operation)\n                : node.filter(operation));\n            filtersMap[param] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(filtersMap[param], results);\n            continue;\n        }\n        if (type === 'AVL') {\n            const operationOpt = operationKeys[0];\n            const operationValue = operation[operationOpt];\n            let filteredIDs;\n            switch (operationOpt) {\n                case 'gt': {\n                    filteredIDs = node.greaterThan(operationValue, false);\n                    break;\n                }\n                case 'gte': {\n                    filteredIDs = node.greaterThan(operationValue, true);\n                    break;\n                }\n                case 'lt': {\n                    filteredIDs = node.lessThan(operationValue, false);\n                    break;\n                }\n                case 'lte': {\n                    filteredIDs = node.lessThan(operationValue, true);\n                    break;\n                }\n                case 'eq': {\n                    const ret = node.find(operationValue);\n                    filteredIDs = ret ?? new Set();\n                    break;\n                }\n                case 'between': {\n                    const [min, max] = operationValue;\n                    filteredIDs = node.rangeSearch(min, max);\n                    break;\n                }\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_FILTER_OPERATION', operationOpt);\n            }\n            filtersMap[param] = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setUnion)(filtersMap[param], filteredIDs);\n        }\n    }\n    // AND operation: calculate the intersection between all the IDs in filterMap\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.setIntersection)(...Object.values(filtersMap));\n}\nfunction getSearchableProperties(index) {\n    return index.searchableProperties;\n}\nfunction getSearchablePropertiesWithTypes(index) {\n    return index.searchablePropertiesWithTypes;\n}\nfunction load(sharedInternalDocumentStore, raw) {\n    const { indexes: rawIndexes, vectorIndexes: rawVectorIndexes, searchableProperties, searchablePropertiesWithTypes, frequencies, tokenOccurrences, avgFieldLength, fieldLengths } = raw;\n    const indexes = {};\n    const vectorIndexes = {};\n    for (const prop of Object.keys(rawIndexes)) {\n        const { node, type, isArray } = rawIndexes[prop];\n        switch (type) {\n            case 'Radix':\n                indexes[prop] = {\n                    type: 'Radix',\n                    node: _trees_radix_js__WEBPACK_IMPORTED_MODULE_3__.RadixTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'Flat':\n                indexes[prop] = {\n                    type: 'Flat',\n                    node: _trees_flat_js__WEBPACK_IMPORTED_MODULE_2__.FlatTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'AVL':\n                indexes[prop] = {\n                    type: 'AVL',\n                    node: _trees_avl_js__WEBPACK_IMPORTED_MODULE_1__.AVLTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'BKD':\n                indexes[prop] = {\n                    type: 'BKD',\n                    node: _trees_bkd_js__WEBPACK_IMPORTED_MODULE_4__.BKDTree.fromJSON(node),\n                    isArray\n                };\n                break;\n            case 'Bool':\n                indexes[prop] = {\n                    type: 'Bool',\n                    node: _trees_bool_js__WEBPACK_IMPORTED_MODULE_5__.BoolNode.fromJSON(node),\n                    isArray\n                };\n                break;\n            default:\n                indexes[prop] = rawIndexes[prop];\n        }\n    }\n    for (const idx of Object.keys(rawVectorIndexes)) {\n        vectorIndexes[idx] = {\n            type: 'Vector',\n            isArray: false,\n            node: _trees_vector_js__WEBPACK_IMPORTED_MODULE_10__.VectorIndex.fromJSON(rawVectorIndexes[idx])\n        };\n    }\n    return {\n        sharedInternalDocumentStore,\n        indexes,\n        vectorIndexes,\n        searchableProperties,\n        searchablePropertiesWithTypes,\n        frequencies,\n        tokenOccurrences,\n        avgFieldLength,\n        fieldLengths\n    };\n}\nfunction save(index) {\n    const { indexes, vectorIndexes, searchableProperties, searchablePropertiesWithTypes, frequencies, tokenOccurrences, avgFieldLength, fieldLengths } = index;\n    const dumpVectorIndexes = {};\n    for (const idx of Object.keys(vectorIndexes)) {\n        dumpVectorIndexes[idx] = vectorIndexes[idx].node.toJSON();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const savedIndexes = {};\n    for (const name of Object.keys(indexes)) {\n        const { type, node, isArray } = indexes[name];\n        if (type === 'Flat' || type === 'Radix' || type === 'AVL' || type === 'BKD' || type === 'Bool') {\n            savedIndexes[name] = {\n                type,\n                node: node.toJSON(),\n                isArray\n            };\n        }\n        else {\n            savedIndexes[name] = indexes[name];\n            savedIndexes[name].node = savedIndexes[name].node.toJSON();\n        }\n    }\n    return {\n        indexes: savedIndexes,\n        vectorIndexes: dumpVectorIndexes,\n        searchableProperties,\n        searchablePropertiesWithTypes,\n        frequencies,\n        tokenOccurrences,\n        avgFieldLength,\n        fieldLengths\n    };\n}\nfunction createIndex() {\n    return {\n        create,\n        insert,\n        remove,\n        insertDocumentScoreParameters,\n        insertTokenScoreParameters,\n        removeDocumentScoreParameters,\n        removeTokenScoreParameters,\n        calculateResultScores,\n        search,\n        searchByWhereClause,\n        getSearchableProperties,\n        getSearchablePropertiesWithTypes,\n        load,\n        save\n    };\n}\nfunction addGeoResult(set, ids) {\n    if (!set) {\n        set = new Set();\n    }\n    const idsLength = ids.length;\n    for (let i = 0; i < idsLength; i++) {\n        const entry = ids[i].docIDs;\n        const idsLength = entry.length;\n        for (let j = 0; j < idsLength; j++) {\n            set.add(entry[j]);\n        }\n    }\n    return set;\n}\nfunction addFindResult(set, filteredIDsResults) {\n    if (!set) {\n        set = new Set();\n    }\n    const keys = Object.keys(filteredIDsResults);\n    const keysLength = keys.length;\n    for (let i = 0; i < keysLength; i++) {\n        const ids = filteredIDsResults[keys[i]];\n        const idsLength = ids.length;\n        for (let j = 0; j < idsLength; j++) {\n            set.add(ids[j]);\n        }\n    }\n    return set;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createInternalDocumentIDStore: () => (/* binding */ createInternalDocumentIDStore),\n/* harmony export */   getDocumentIdFromInternalId: () => (/* binding */ getDocumentIdFromInternalId),\n/* harmony export */   getInternalDocumentId: () => (/* binding */ getInternalDocumentId),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   save: () => (/* binding */ save)\n/* harmony export */ });\nfunction createInternalDocumentIDStore() {\n    return {\n        idToInternalId: new Map(),\n        internalIdToId: [],\n        save,\n        load\n    };\n}\nfunction save(store) {\n    return {\n        internalIdToId: store.internalIdToId\n    };\n}\nfunction load(orama, raw) {\n    const { internalIdToId } = raw;\n    orama.internalDocumentIDStore.idToInternalId.clear();\n    orama.internalDocumentIDStore.internalIdToId = [];\n    const internalIdToIdLength = internalIdToId.length;\n    for (let i = 0; i < internalIdToIdLength; i++) {\n        const internalIdItem = internalIdToId[i];\n        orama.internalDocumentIDStore.idToInternalId.set(internalIdItem, i + 1);\n        orama.internalDocumentIDStore.internalIdToId.push(internalIdItem);\n    }\n}\nfunction getInternalDocumentId(store, id) {\n    if (typeof id === 'string') {\n        const internalId = store.idToInternalId.get(id);\n        if (internalId) {\n            return internalId;\n        }\n        const currentId = store.idToInternalId.size + 1;\n        store.idToInternalId.set(id, currentId);\n        store.internalIdToId.push(id);\n        return currentId;\n    }\n    if (id > store.internalIdToId.length) {\n        return getInternalDocumentId(store, id.toString());\n    }\n    return id;\n}\nfunction getDocumentIdFromInternalId(store, internalId) {\n    if (store.internalIdToId.length < internalId) {\n        throw new Error(`Invalid internalId ${internalId}`);\n    }\n    return store.internalIdToId[internalId - 1];\n}\n//# sourceMappingURL=internal-document-id-store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvaW50ZXJuYWwtZG9jdW1lbnQtaWQtc3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxpQkFBaUI7QUFDN0I7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBCQUEwQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsOENBQThDLFdBQVc7QUFDekQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2Jyb3dzZXIvY29tcG9uZW50cy9pbnRlcm5hbC1kb2N1bWVudC1pZC1zdG9yZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY3JlYXRlSW50ZXJuYWxEb2N1bWVudElEU3RvcmUoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaWRUb0ludGVybmFsSWQ6IG5ldyBNYXAoKSxcbiAgICAgICAgaW50ZXJuYWxJZFRvSWQ6IFtdLFxuICAgICAgICBzYXZlLFxuICAgICAgICBsb2FkXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzYXZlKHN0b3JlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW50ZXJuYWxJZFRvSWQ6IHN0b3JlLmludGVybmFsSWRUb0lkXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsb2FkKG9yYW1hLCByYXcpIHtcbiAgICBjb25zdCB7IGludGVybmFsSWRUb0lkIH0gPSByYXc7XG4gICAgb3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUuaWRUb0ludGVybmFsSWQuY2xlYXIoKTtcbiAgICBvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZS5pbnRlcm5hbElkVG9JZCA9IFtdO1xuICAgIGNvbnN0IGludGVybmFsSWRUb0lkTGVuZ3RoID0gaW50ZXJuYWxJZFRvSWQubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW50ZXJuYWxJZFRvSWRMZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBpbnRlcm5hbElkSXRlbSA9IGludGVybmFsSWRUb0lkW2ldO1xuICAgICAgICBvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZS5pZFRvSW50ZXJuYWxJZC5zZXQoaW50ZXJuYWxJZEl0ZW0sIGkgKyAxKTtcbiAgICAgICAgb3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUuaW50ZXJuYWxJZFRvSWQucHVzaChpbnRlcm5hbElkSXRlbSk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEludGVybmFsRG9jdW1lbnRJZChzdG9yZSwgaWQpIHtcbiAgICBpZiAodHlwZW9mIGlkID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCBpbnRlcm5hbElkID0gc3RvcmUuaWRUb0ludGVybmFsSWQuZ2V0KGlkKTtcbiAgICAgICAgaWYgKGludGVybmFsSWQpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnRlcm5hbElkO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGN1cnJlbnRJZCA9IHN0b3JlLmlkVG9JbnRlcm5hbElkLnNpemUgKyAxO1xuICAgICAgICBzdG9yZS5pZFRvSW50ZXJuYWxJZC5zZXQoaWQsIGN1cnJlbnRJZCk7XG4gICAgICAgIHN0b3JlLmludGVybmFsSWRUb0lkLnB1c2goaWQpO1xuICAgICAgICByZXR1cm4gY3VycmVudElkO1xuICAgIH1cbiAgICBpZiAoaWQgPiBzdG9yZS5pbnRlcm5hbElkVG9JZC5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGdldEludGVybmFsRG9jdW1lbnRJZChzdG9yZSwgaWQudG9TdHJpbmcoKSk7XG4gICAgfVxuICAgIHJldHVybiBpZDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREb2N1bWVudElkRnJvbUludGVybmFsSWQoc3RvcmUsIGludGVybmFsSWQpIHtcbiAgICBpZiAoc3RvcmUuaW50ZXJuYWxJZFRvSWQubGVuZ3RoIDwgaW50ZXJuYWxJZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgaW50ZXJuYWxJZCAke2ludGVybmFsSWR9YCk7XG4gICAgfVxuICAgIHJldHVybiBzdG9yZS5pbnRlcm5hbElkVG9JZFtpbnRlcm5hbElkIC0gMV07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbC1kb2N1bWVudC1pZC1zdG9yZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/levenshtein.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/levenshtein.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boundedLevenshtein: () => (/* binding */ boundedLevenshtein),\n/* harmony export */   levenshtein: () => (/* binding */ levenshtein),\n/* harmony export */   syncBoundedLevenshtein: () => (/* binding */ syncBoundedLevenshtein)\n/* harmony export */ });\n/**\n * Inspired by:\n * https://github.com/Yomguithereal/talisman/blob/86ae55cbd040ff021d05e282e0e6c71f2dde21f8/src/metrics/levenshtein.js#L218-L340\n */\nfunction _boundedLevenshtein(term, word, tolerance) {\n    // Handle base cases\n    if (tolerance < 0)\n        return -1;\n    if (term === word)\n        return 0;\n    const m = term.length;\n    const n = word.length;\n    // Special case for empty strings\n    if (m === 0)\n        return n <= tolerance ? n : -1;\n    if (n === 0)\n        return m <= tolerance ? m : -1;\n    // term = term.toLowerCase()\n    // word = word.toLowerCase()\n    const diff = Math.abs(m - n);\n    // Special case for prefixes\n    // If the searching word starts with the indexed word, return early.\n    if (term.startsWith(word)) {\n        // We just check if the remaining characters are within the tolerance\n        return diff <= tolerance ? diff : -1;\n    }\n    // If the indexed word starts with the searching word, return early.\n    if (word.startsWith(term)) {\n        // any prefixed word is within the tolerance\n        return 0;\n    }\n    // If the length difference is greater than the tolerance, return early\n    if (diff > tolerance)\n        return -1;\n    // Initialize the matrix\n    const matrix = [];\n    for (let i = 0; i <= m; i++) {\n        matrix[i] = [i];\n        for (let j = 1; j <= n; j++) {\n            matrix[i][j] = i === 0 ? j : 0;\n        }\n    }\n    // Fill the matrix\n    for (let i = 1; i <= m; i++) {\n        let rowMin = Infinity;\n        for (let j = 1; j <= n; j++) {\n            if (term[i - 1] === word[j - 1]) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                matrix[i][j] = Math.min(matrix[i - 1][j] + 1, // deletion\n                matrix[i][j - 1] + 1, // insertion\n                matrix[i - 1][j - 1] + 1 // substitution\n                );\n            }\n            rowMin = Math.min(rowMin, matrix[i][j]);\n        }\n        // Early termination if all values in this row exceed tolerance\n        if (rowMin > tolerance) {\n            return -1;\n        }\n    }\n    return matrix[m][n] <= tolerance ? matrix[m][n] : -1;\n}\n/**\n * Computes the Levenshtein distance between two strings (a, b), returning early with -1 if the distance\n * is greater than the given tolerance.\n * It assumes that:\n * - tolerance >= ||a| - |b|| >= 0\n */\nfunction boundedLevenshtein(term, w, tolerance) {\n    const distance = _boundedLevenshtein(term, w, tolerance);\n    return {\n        distance,\n        isBounded: distance >= 0\n    };\n}\n// This is only used internally, keep in sync with the previous one\nfunction syncBoundedLevenshtein(term, w, tolerance) {\n    const distance = _boundedLevenshtein(term, w, tolerance);\n    return {\n        distance,\n        isBounded: distance >= 0\n    };\n}\nfunction levenshtein(a, b) {\n    /* c8 ignore next 3 */\n    if (!a.length) {\n        return b.length;\n    }\n    /* c8 ignore next 3 */\n    if (!b.length) {\n        return a.length;\n    }\n    const swap = a;\n    if (a.length > b.length) {\n        a = b;\n        b = swap;\n    }\n    const row = Array.from({ length: a.length + 1 }, (_, i) => i);\n    let val = 0;\n    for (let i = 1; i <= b.length; i++) {\n        let prev = i;\n        for (let j = 1; j <= a.length; j++) {\n            if (b[i - 1] === a[j - 1]) {\n                val = row[j - 1];\n            }\n            else {\n                val = Math.min(row[j - 1] + 1, Math.min(prev + 1, row[j] + 1));\n            }\n            row[j - 1] = prev;\n            prev = val;\n        }\n        row[a.length] = prev;\n    }\n    return row[a.length];\n}\n//# sourceMappingURL=levenshtein.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvbGV2ZW5zaHRlaW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFFBQVE7QUFDNUI7QUFDQSx3QkFBd0IsUUFBUTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0Esd0JBQXdCLFFBQVE7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzQkFBc0I7QUFDbkQ7QUFDQSxvQkFBb0IsZUFBZTtBQUNuQztBQUNBLHdCQUF3QixlQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2Jyb3dzZXIvY29tcG9uZW50cy9sZXZlbnNodGVpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEluc3BpcmVkIGJ5OlxuICogaHR0cHM6Ly9naXRodWIuY29tL1lvbWd1aXRoZXJlYWwvdGFsaXNtYW4vYmxvYi84NmFlNTVjYmQwNDBmZjAyMWQwNWUyODJlMGU2YzcxZjJkZGUyMWY4L3NyYy9tZXRyaWNzL2xldmVuc2h0ZWluLmpzI0wyMTgtTDM0MFxuICovXG5mdW5jdGlvbiBfYm91bmRlZExldmVuc2h0ZWluKHRlcm0sIHdvcmQsIHRvbGVyYW5jZSkge1xuICAgIC8vIEhhbmRsZSBiYXNlIGNhc2VzXG4gICAgaWYgKHRvbGVyYW5jZSA8IDApXG4gICAgICAgIHJldHVybiAtMTtcbiAgICBpZiAodGVybSA9PT0gd29yZClcbiAgICAgICAgcmV0dXJuIDA7XG4gICAgY29uc3QgbSA9IHRlcm0ubGVuZ3RoO1xuICAgIGNvbnN0IG4gPSB3b3JkLmxlbmd0aDtcbiAgICAvLyBTcGVjaWFsIGNhc2UgZm9yIGVtcHR5IHN0cmluZ3NcbiAgICBpZiAobSA9PT0gMClcbiAgICAgICAgcmV0dXJuIG4gPD0gdG9sZXJhbmNlID8gbiA6IC0xO1xuICAgIGlmIChuID09PSAwKVxuICAgICAgICByZXR1cm4gbSA8PSB0b2xlcmFuY2UgPyBtIDogLTE7XG4gICAgLy8gdGVybSA9IHRlcm0udG9Mb3dlckNhc2UoKVxuICAgIC8vIHdvcmQgPSB3b3JkLnRvTG93ZXJDYXNlKClcbiAgICBjb25zdCBkaWZmID0gTWF0aC5hYnMobSAtIG4pO1xuICAgIC8vIFNwZWNpYWwgY2FzZSBmb3IgcHJlZml4ZXNcbiAgICAvLyBJZiB0aGUgc2VhcmNoaW5nIHdvcmQgc3RhcnRzIHdpdGggdGhlIGluZGV4ZWQgd29yZCwgcmV0dXJuIGVhcmx5LlxuICAgIGlmICh0ZXJtLnN0YXJ0c1dpdGgod29yZCkpIHtcbiAgICAgICAgLy8gV2UganVzdCBjaGVjayBpZiB0aGUgcmVtYWluaW5nIGNoYXJhY3RlcnMgYXJlIHdpdGhpbiB0aGUgdG9sZXJhbmNlXG4gICAgICAgIHJldHVybiBkaWZmIDw9IHRvbGVyYW5jZSA/IGRpZmYgOiAtMTtcbiAgICB9XG4gICAgLy8gSWYgdGhlIGluZGV4ZWQgd29yZCBzdGFydHMgd2l0aCB0aGUgc2VhcmNoaW5nIHdvcmQsIHJldHVybiBlYXJseS5cbiAgICBpZiAod29yZC5zdGFydHNXaXRoKHRlcm0pKSB7XG4gICAgICAgIC8vIGFueSBwcmVmaXhlZCB3b3JkIGlzIHdpdGhpbiB0aGUgdG9sZXJhbmNlXG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbiAgICAvLyBJZiB0aGUgbGVuZ3RoIGRpZmZlcmVuY2UgaXMgZ3JlYXRlciB0aGFuIHRoZSB0b2xlcmFuY2UsIHJldHVybiBlYXJseVxuICAgIGlmIChkaWZmID4gdG9sZXJhbmNlKVxuICAgICAgICByZXR1cm4gLTE7XG4gICAgLy8gSW5pdGlhbGl6ZSB0aGUgbWF0cml4XG4gICAgY29uc3QgbWF0cml4ID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gbTsgaSsrKSB7XG4gICAgICAgIG1hdHJpeFtpXSA9IFtpXTtcbiAgICAgICAgZm9yIChsZXQgaiA9IDE7IGogPD0gbjsgaisrKSB7XG4gICAgICAgICAgICBtYXRyaXhbaV1bal0gPSBpID09PSAwID8gaiA6IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gRmlsbCB0aGUgbWF0cml4XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gbTsgaSsrKSB7XG4gICAgICAgIGxldCByb3dNaW4gPSBJbmZpbml0eTtcbiAgICAgICAgZm9yIChsZXQgaiA9IDE7IGogPD0gbjsgaisrKSB7XG4gICAgICAgICAgICBpZiAodGVybVtpIC0gMV0gPT09IHdvcmRbaiAtIDFdKSB7XG4gICAgICAgICAgICAgICAgbWF0cml4W2ldW2pdID0gbWF0cml4W2kgLSAxXVtqIC0gMV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBtYXRyaXhbaV1bal0gPSBNYXRoLm1pbihtYXRyaXhbaSAtIDFdW2pdICsgMSwgLy8gZGVsZXRpb25cbiAgICAgICAgICAgICAgICBtYXRyaXhbaV1baiAtIDFdICsgMSwgLy8gaW5zZXJ0aW9uXG4gICAgICAgICAgICAgICAgbWF0cml4W2kgLSAxXVtqIC0gMV0gKyAxIC8vIHN1YnN0aXR1dGlvblxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByb3dNaW4gPSBNYXRoLm1pbihyb3dNaW4sIG1hdHJpeFtpXVtqXSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRWFybHkgdGVybWluYXRpb24gaWYgYWxsIHZhbHVlcyBpbiB0aGlzIHJvdyBleGNlZWQgdG9sZXJhbmNlXG4gICAgICAgIGlmIChyb3dNaW4gPiB0b2xlcmFuY2UpIHtcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWF0cml4W21dW25dIDw9IHRvbGVyYW5jZSA/IG1hdHJpeFttXVtuXSA6IC0xO1xufVxuLyoqXG4gKiBDb21wdXRlcyB0aGUgTGV2ZW5zaHRlaW4gZGlzdGFuY2UgYmV0d2VlbiB0d28gc3RyaW5ncyAoYSwgYiksIHJldHVybmluZyBlYXJseSB3aXRoIC0xIGlmIHRoZSBkaXN0YW5jZVxuICogaXMgZ3JlYXRlciB0aGFuIHRoZSBnaXZlbiB0b2xlcmFuY2UuXG4gKiBJdCBhc3N1bWVzIHRoYXQ6XG4gKiAtIHRvbGVyYW5jZSA+PSB8fGF8IC0gfGJ8fCA+PSAwXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBib3VuZGVkTGV2ZW5zaHRlaW4odGVybSwgdywgdG9sZXJhbmNlKSB7XG4gICAgY29uc3QgZGlzdGFuY2UgPSBfYm91bmRlZExldmVuc2h0ZWluKHRlcm0sIHcsIHRvbGVyYW5jZSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGlzdGFuY2UsXG4gICAgICAgIGlzQm91bmRlZDogZGlzdGFuY2UgPj0gMFxuICAgIH07XG59XG4vLyBUaGlzIGlzIG9ubHkgdXNlZCBpbnRlcm5hbGx5LCBrZWVwIGluIHN5bmMgd2l0aCB0aGUgcHJldmlvdXMgb25lXG5leHBvcnQgZnVuY3Rpb24gc3luY0JvdW5kZWRMZXZlbnNodGVpbih0ZXJtLCB3LCB0b2xlcmFuY2UpIHtcbiAgICBjb25zdCBkaXN0YW5jZSA9IF9ib3VuZGVkTGV2ZW5zaHRlaW4odGVybSwgdywgdG9sZXJhbmNlKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBkaXN0YW5jZSxcbiAgICAgICAgaXNCb3VuZGVkOiBkaXN0YW5jZSA+PSAwXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsZXZlbnNodGVpbihhLCBiKSB7XG4gICAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICAgIGlmICghYS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGIubGVuZ3RoO1xuICAgIH1cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gICAgaWYgKCFiLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gYS5sZW5ndGg7XG4gICAgfVxuICAgIGNvbnN0IHN3YXAgPSBhO1xuICAgIGlmIChhLmxlbmd0aCA+IGIubGVuZ3RoKSB7XG4gICAgICAgIGEgPSBiO1xuICAgICAgICBiID0gc3dhcDtcbiAgICB9XG4gICAgY29uc3Qgcm93ID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogYS5sZW5ndGggKyAxIH0sIChfLCBpKSA9PiBpKTtcbiAgICBsZXQgdmFsID0gMDtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8PSBiLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBwcmV2ID0gaTtcbiAgICAgICAgZm9yIChsZXQgaiA9IDE7IGogPD0gYS5sZW5ndGg7IGorKykge1xuICAgICAgICAgICAgaWYgKGJbaSAtIDFdID09PSBhW2ogLSAxXSkge1xuICAgICAgICAgICAgICAgIHZhbCA9IHJvd1tqIC0gMV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YWwgPSBNYXRoLm1pbihyb3dbaiAtIDFdICsgMSwgTWF0aC5taW4ocHJldiArIDEsIHJvd1tqXSArIDEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJvd1tqIC0gMV0gPSBwcmV2O1xuICAgICAgICAgICAgcHJldiA9IHZhbDtcbiAgICAgICAgfVxuICAgICAgICByb3dbYS5sZW5ndGhdID0gcHJldjtcbiAgICB9XG4gICAgcmV0dXJuIHJvd1thLmxlbmd0aF07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sZXZlbnNodGVpbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/levenshtein.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/plugins.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/plugins.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVAILABLE_PLUGIN_HOOKS: () => (/* binding */ AVAILABLE_PLUGIN_HOOKS),\n/* harmony export */   getAllPluginsByHook: () => (/* binding */ getAllPluginsByHook)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n\nconst AVAILABLE_PLUGIN_HOOKS = [\n    'beforeInsert',\n    'afterInsert',\n    'beforeRemove',\n    'afterRemove',\n    'beforeUpdate',\n    'afterUpdate',\n    'beforeUpsert',\n    'afterUpsert',\n    'beforeSearch',\n    'afterSearch',\n    'beforeInsertMultiple',\n    'afterInsertMultiple',\n    'beforeRemoveMultiple',\n    'afterRemoveMultiple',\n    'beforeUpdateMultiple',\n    'afterUpdateMultiple',\n    'beforeUpsertMultiple',\n    'afterUpsertMultiple',\n    'beforeLoad',\n    'afterLoad',\n    'afterCreate'\n];\nfunction getAllPluginsByHook(orama, hook) {\n    const pluginsToRun = [];\n    const pluginsLength = orama.plugins?.length;\n    if (!pluginsLength) {\n        return pluginsToRun;\n    }\n    for (let i = 0; i < pluginsLength; i++) {\n        try {\n            const plugin = orama.plugins[i];\n            if (typeof plugin[hook] === 'function') {\n                pluginsToRun.push(plugin[hook]);\n            }\n        }\n        catch (error) {\n            console.error('Caught error in getAllPluginsByHook:', error);\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_CRASHED');\n        }\n    }\n    return pluginsToRun;\n}\n//# sourceMappingURL=plugins.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvcGx1Z2lucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDcEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixtQkFBbUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvcGx1Z2lucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFcnJvciB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5leHBvcnQgY29uc3QgQVZBSUxBQkxFX1BMVUdJTl9IT09LUyA9IFtcbiAgICAnYmVmb3JlSW5zZXJ0JyxcbiAgICAnYWZ0ZXJJbnNlcnQnLFxuICAgICdiZWZvcmVSZW1vdmUnLFxuICAgICdhZnRlclJlbW92ZScsXG4gICAgJ2JlZm9yZVVwZGF0ZScsXG4gICAgJ2FmdGVyVXBkYXRlJyxcbiAgICAnYmVmb3JlVXBzZXJ0JyxcbiAgICAnYWZ0ZXJVcHNlcnQnLFxuICAgICdiZWZvcmVTZWFyY2gnLFxuICAgICdhZnRlclNlYXJjaCcsXG4gICAgJ2JlZm9yZUluc2VydE11bHRpcGxlJyxcbiAgICAnYWZ0ZXJJbnNlcnRNdWx0aXBsZScsXG4gICAgJ2JlZm9yZVJlbW92ZU11bHRpcGxlJyxcbiAgICAnYWZ0ZXJSZW1vdmVNdWx0aXBsZScsXG4gICAgJ2JlZm9yZVVwZGF0ZU11bHRpcGxlJyxcbiAgICAnYWZ0ZXJVcGRhdGVNdWx0aXBsZScsXG4gICAgJ2JlZm9yZVVwc2VydE11bHRpcGxlJyxcbiAgICAnYWZ0ZXJVcHNlcnRNdWx0aXBsZScsXG4gICAgJ2JlZm9yZUxvYWQnLFxuICAgICdhZnRlckxvYWQnLFxuICAgICdhZnRlckNyZWF0ZSdcbl07XG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsUGx1Z2luc0J5SG9vayhvcmFtYSwgaG9vaykge1xuICAgIGNvbnN0IHBsdWdpbnNUb1J1biA9IFtdO1xuICAgIGNvbnN0IHBsdWdpbnNMZW5ndGggPSBvcmFtYS5wbHVnaW5zPy5sZW5ndGg7XG4gICAgaWYgKCFwbHVnaW5zTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBwbHVnaW5zVG9SdW47XG4gICAgfVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGx1Z2luc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBwbHVnaW4gPSBvcmFtYS5wbHVnaW5zW2ldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBwbHVnaW5baG9va10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBwbHVnaW5zVG9SdW4ucHVzaChwbHVnaW5baG9va10pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignQ2F1Z2h0IGVycm9yIGluIGdldEFsbFBsdWdpbnNCeUhvb2s6JywgZXJyb3IpO1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ1BMVUdJTl9DUkFTSEVEJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHBsdWdpbnNUb1J1bjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBsdWdpbnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/plugins.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/sorter.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/sorter.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSorter: () => (/* binding */ createSorter),\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   save: () => (/* binding */ save)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _defaults_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaults.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/defaults.js\");\n/* harmony import */ var _internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tokenizer/languages.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/languages.js\");\n\n\n\n\n\nfunction innerCreate(orama, sharedInternalDocumentStore, schema, sortableDeniedProperties, prefix) {\n    const sorter = {\n        language: orama.tokenizer.language,\n        sharedInternalDocumentStore,\n        enabled: true,\n        isSorted: true,\n        sortableProperties: [],\n        sortablePropertiesWithTypes: {},\n        sorts: {}\n    };\n    for (const [prop, type] of Object.entries(schema)) {\n        const path = `${prefix}${prefix ? '.' : ''}${prop}`;\n        if (sortableDeniedProperties.includes(path)) {\n            continue;\n        }\n        if (typeof type === 'object' && !Array.isArray(type)) {\n            // Nested\n            const ret = innerCreate(orama, sharedInternalDocumentStore, type, sortableDeniedProperties, path);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.safeArrayPush)(sorter.sortableProperties, ret.sortableProperties);\n            sorter.sorts = {\n                ...sorter.sorts,\n                ...ret.sorts\n            };\n            sorter.sortablePropertiesWithTypes = {\n                ...sorter.sortablePropertiesWithTypes,\n                ...ret.sortablePropertiesWithTypes\n            };\n            continue;\n        }\n        if (!(0,_defaults_js__WEBPACK_IMPORTED_MODULE_1__.isVectorType)(type)) {\n            switch (type) {\n                case 'boolean':\n                case 'number':\n                case 'string':\n                    sorter.sortableProperties.push(path);\n                    sorter.sortablePropertiesWithTypes[path] = type;\n                    sorter.sorts[path] = {\n                        docs: new Map(),\n                        orderedDocsToRemove: new Map(),\n                        orderedDocs: [],\n                        type: type\n                    };\n                    break;\n                case 'geopoint':\n                case 'enum':\n                    // We don't allow to sort by enums or geopoints\n                    continue;\n                case 'enum[]':\n                case 'boolean[]':\n                case 'number[]':\n                case 'string[]':\n                    // We don't allow to sort by arrays\n                    continue;\n                default:\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_SORT_SCHEMA_TYPE', Array.isArray(type) ? 'array' : type, path);\n            }\n        }\n    }\n    return sorter;\n}\nfunction create(orama, sharedInternalDocumentStore, schema, config) {\n    const isSortEnabled = config?.enabled !== false;\n    if (!isSortEnabled) {\n        return {\n            disabled: true\n        };\n    }\n    return innerCreate(orama, sharedInternalDocumentStore, schema, (config || {}).unsortableProperties || [], '');\n}\nfunction insert(sorter, prop, id, value) {\n    if (!sorter.enabled) {\n        return;\n    }\n    sorter.isSorted = false;\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, id);\n    const s = sorter.sorts[prop];\n    // This happen during a document updating\n    // Because we re-use the same internalId\n    // We need to clean-up the data structure before re-inserting\n    // to avoid duplicates in the orderedDocs array\n    // See: https://github.com/oramasearch/orama/issues/629\n    if (s.orderedDocsToRemove.has(internalId)) {\n        ensureOrderedDocsAreDeletedByProperty(sorter, prop);\n    }\n    s.docs.set(internalId, s.orderedDocs.length);\n    s.orderedDocs.push([internalId, value]);\n}\nfunction ensureIsSorted(sorter) {\n    if (sorter.isSorted || !sorter.enabled) {\n        return;\n    }\n    const properties = Object.keys(sorter.sorts);\n    for (const prop of properties) {\n        ensurePropertyIsSorted(sorter, prop);\n    }\n    sorter.isSorted = true;\n}\nfunction stringSort(language, value, d) {\n    return value[1].localeCompare(d[1], (0,_tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_4__.getLocale)(language));\n}\nfunction numberSort(value, d) {\n    return value[1] - d[1];\n}\nfunction booleanSort(value, d) {\n    return d[1] ? -1 : 1;\n}\nfunction ensurePropertyIsSorted(sorter, prop) {\n    const s = sorter.sorts[prop];\n    let predicate;\n    switch (s.type) {\n        case 'string':\n            predicate = stringSort.bind(null, sorter.language);\n            break;\n        case 'number':\n            predicate = numberSort.bind(null);\n            break;\n        case 'boolean':\n            predicate = booleanSort.bind(null);\n            break;\n    }\n    s.orderedDocs.sort(predicate);\n    // Increment position for the greather documents\n    const orderedDocsLength = s.orderedDocs.length;\n    for (let i = 0; i < orderedDocsLength; i++) {\n        const docId = s.orderedDocs[i][0];\n        s.docs.set(docId, i);\n    }\n}\nfunction ensureOrderedDocsAreDeleted(sorter) {\n    const properties = Object.keys(sorter.sorts);\n    for (const prop of properties) {\n        ensureOrderedDocsAreDeletedByProperty(sorter, prop);\n    }\n}\nfunction ensureOrderedDocsAreDeletedByProperty(sorter, prop) {\n    const s = sorter.sorts[prop];\n    if (!s.orderedDocsToRemove.size)\n        return;\n    s.orderedDocs = s.orderedDocs.filter((doc) => !s.orderedDocsToRemove.has(doc[0]));\n    s.orderedDocsToRemove.clear();\n}\nfunction remove(sorter, prop, id) {\n    if (!sorter.enabled) {\n        return;\n    }\n    const s = sorter.sorts[prop];\n    const internalId = (0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, id);\n    const index = s.docs.get(internalId);\n    if (!index)\n        return;\n    s.docs.delete(internalId);\n    s.orderedDocsToRemove.set(internalId, true);\n}\nfunction sortBy(sorter, docIds, by) {\n    if (!sorter.enabled) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('SORT_DISABLED');\n    }\n    const property = by.property;\n    const isDesc = by.order === 'DESC';\n    const s = sorter.sorts[property];\n    if (!s) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('UNABLE_TO_SORT_ON_UNKNOWN_FIELD', property, sorter.sortableProperties.join(', '));\n    }\n    ensureOrderedDocsAreDeletedByProperty(sorter, property);\n    ensureIsSorted(sorter);\n    docIds.sort((a, b) => {\n        // This sort algorithm works leveraging on\n        // that s.docs is a map of docId -> position\n        // If a document is not indexed, it will be not present in the map\n        const indexOfA = s.docs.get((0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, a[0]));\n        const indexOfB = s.docs.get((0,_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_2__.getInternalDocumentId)(sorter.sharedInternalDocumentStore, b[0]));\n        const isAIndexed = typeof indexOfA !== 'undefined';\n        const isBIndexed = typeof indexOfB !== 'undefined';\n        if (!isAIndexed && !isBIndexed) {\n            return 0;\n        }\n        // unindexed documents are always at the end\n        if (!isAIndexed) {\n            return 1;\n        }\n        if (!isBIndexed) {\n            return -1;\n        }\n        return isDesc ? indexOfB - indexOfA : indexOfA - indexOfB;\n    });\n    return docIds;\n}\nfunction getSortableProperties(sorter) {\n    if (!sorter.enabled) {\n        return [];\n    }\n    return sorter.sortableProperties;\n}\nfunction getSortablePropertiesWithTypes(sorter) {\n    if (!sorter.enabled) {\n        return {};\n    }\n    return sorter.sortablePropertiesWithTypes;\n}\nfunction load(sharedInternalDocumentStore, raw) {\n    const rawDocument = raw;\n    if (!rawDocument.enabled) {\n        return {\n            enabled: false\n        };\n    }\n    const sorts = Object.keys(rawDocument.sorts).reduce((acc, prop) => {\n        const { docs, orderedDocs, type } = rawDocument.sorts[prop];\n        acc[prop] = {\n            docs: new Map(Object.entries(docs).map(([k, v]) => [+k, v])),\n            orderedDocsToRemove: new Map(),\n            orderedDocs,\n            type\n        };\n        return acc;\n    }, {});\n    return {\n        sharedInternalDocumentStore,\n        language: rawDocument.language,\n        sortableProperties: rawDocument.sortableProperties,\n        sortablePropertiesWithTypes: rawDocument.sortablePropertiesWithTypes,\n        sorts,\n        enabled: true,\n        isSorted: rawDocument.isSorted\n    };\n}\nfunction save(sorter) {\n    if (!sorter.enabled) {\n        return {\n            enabled: false\n        };\n    }\n    ensureOrderedDocsAreDeleted(sorter);\n    ensureIsSorted(sorter);\n    const sorts = Object.keys(sorter.sorts).reduce((acc, prop) => {\n        const { docs, orderedDocs, type } = sorter.sorts[prop];\n        acc[prop] = {\n            docs: Object.fromEntries(docs.entries()),\n            orderedDocs,\n            type\n        };\n        return acc;\n    }, {});\n    return {\n        language: sorter.language,\n        sortableProperties: sorter.sortableProperties,\n        sortablePropertiesWithTypes: sorter.sortablePropertiesWithTypes,\n        sorts,\n        enabled: sorter.enabled,\n        isSorted: sorter.isSorted\n    };\n}\nfunction createSorter() {\n    return {\n        create,\n        insert,\n        remove,\n        save,\n        load,\n        sortBy,\n        getSortableProperties,\n        getSortablePropertiesWithTypes\n    };\n}\n//# sourceMappingURL=sorter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/sorter.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/diacritics.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/tokenizer/diacritics.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   replaceDiacritics: () => (/* binding */ replaceDiacritics)\n/* harmony export */ });\nconst DIACRITICS_CHARCODE_START = 192;\nconst DIACRITICS_CHARCODE_END = 383;\nconst CHARCODE_REPLACE_MAPPING = [\n    65,\n    65,\n    65,\n    65,\n    65,\n    65,\n    65,\n    67,\n    69,\n    69,\n    69,\n    69,\n    73,\n    73,\n    73,\n    73,\n    69,\n    78,\n    79,\n    79,\n    79,\n    79,\n    79,\n    null,\n    79,\n    85,\n    85,\n    85,\n    85,\n    89,\n    80,\n    115,\n    97,\n    97,\n    97,\n    97,\n    97,\n    97,\n    97,\n    99,\n    101,\n    101,\n    101,\n    101,\n    105,\n    105,\n    105,\n    105,\n    101,\n    110,\n    111,\n    111,\n    111,\n    111,\n    111,\n    null,\n    111,\n    117,\n    117,\n    117,\n    117,\n    121,\n    112,\n    121,\n    65,\n    97,\n    65,\n    97,\n    65,\n    97,\n    67,\n    99,\n    67,\n    99,\n    67,\n    99,\n    67,\n    99,\n    68,\n    100,\n    68,\n    100,\n    69,\n    101,\n    69,\n    101,\n    69,\n    101,\n    69,\n    101,\n    69,\n    101,\n    71,\n    103,\n    71,\n    103,\n    71,\n    103,\n    71,\n    103,\n    72,\n    104,\n    72,\n    104,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    73,\n    105,\n    74,\n    106,\n    75,\n    107,\n    107,\n    76,\n    108,\n    76,\n    108,\n    76,\n    108,\n    76,\n    108,\n    76,\n    108,\n    78,\n    110,\n    78,\n    110,\n    78,\n    110,\n    110,\n    78,\n    110,\n    79,\n    111,\n    79,\n    111,\n    79,\n    111,\n    79,\n    111,\n    82,\n    114,\n    82,\n    114,\n    82,\n    114,\n    83,\n    115,\n    83,\n    115,\n    83,\n    115,\n    83,\n    115,\n    84,\n    116,\n    84,\n    116,\n    84,\n    116,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    85,\n    117,\n    87,\n    119,\n    89,\n    121,\n    89,\n    90,\n    122,\n    90,\n    122,\n    90,\n    122,\n    115\n];\nfunction replaceChar(charCode) {\n    if (charCode < DIACRITICS_CHARCODE_START || charCode > DIACRITICS_CHARCODE_END)\n        return charCode;\n    /* c8 ignore next  */\n    return CHARCODE_REPLACE_MAPPING[charCode - DIACRITICS_CHARCODE_START] || charCode;\n}\nfunction replaceDiacritics(str) {\n    const stringCharCode = [];\n    for (let idx = 0; idx < str.length; idx++) {\n        stringCharCode[idx] = replaceChar(str.charCodeAt(idx));\n    }\n    return String.fromCharCode(...stringCharCode);\n}\n//# sourceMappingURL=diacritics.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvdG9rZW5pemVyL2RpYWNyaXRpY3MuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHNCQUFzQixrQkFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9jb21wb25lbnRzL3Rva2VuaXplci9kaWFjcml0aWNzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IERJQUNSSVRJQ1NfQ0hBUkNPREVfU1RBUlQgPSAxOTI7XG5jb25zdCBESUFDUklUSUNTX0NIQVJDT0RFX0VORCA9IDM4MztcbmNvbnN0IENIQVJDT0RFX1JFUExBQ0VfTUFQUElORyA9IFtcbiAgICA2NSxcbiAgICA2NSxcbiAgICA2NSxcbiAgICA2NSxcbiAgICA2NSxcbiAgICA2NSxcbiAgICA2NSxcbiAgICA2NyxcbiAgICA2OSxcbiAgICA2OSxcbiAgICA2OSxcbiAgICA2OSxcbiAgICA3MyxcbiAgICA3MyxcbiAgICA3MyxcbiAgICA3MyxcbiAgICA2OSxcbiAgICA3OCxcbiAgICA3OSxcbiAgICA3OSxcbiAgICA3OSxcbiAgICA3OSxcbiAgICA3OSxcbiAgICBudWxsLFxuICAgIDc5LFxuICAgIDg1LFxuICAgIDg1LFxuICAgIDg1LFxuICAgIDg1LFxuICAgIDg5LFxuICAgIDgwLFxuICAgIDExNSxcbiAgICA5NyxcbiAgICA5NyxcbiAgICA5NyxcbiAgICA5NyxcbiAgICA5NyxcbiAgICA5NyxcbiAgICA5NyxcbiAgICA5OSxcbiAgICAxMDEsXG4gICAgMTAxLFxuICAgIDEwMSxcbiAgICAxMDEsXG4gICAgMTA1LFxuICAgIDEwNSxcbiAgICAxMDUsXG4gICAgMTA1LFxuICAgIDEwMSxcbiAgICAxMTAsXG4gICAgMTExLFxuICAgIDExMSxcbiAgICAxMTEsXG4gICAgMTExLFxuICAgIDExMSxcbiAgICBudWxsLFxuICAgIDExMSxcbiAgICAxMTcsXG4gICAgMTE3LFxuICAgIDExNyxcbiAgICAxMTcsXG4gICAgMTIxLFxuICAgIDExMixcbiAgICAxMjEsXG4gICAgNjUsXG4gICAgOTcsXG4gICAgNjUsXG4gICAgOTcsXG4gICAgNjUsXG4gICAgOTcsXG4gICAgNjcsXG4gICAgOTksXG4gICAgNjcsXG4gICAgOTksXG4gICAgNjcsXG4gICAgOTksXG4gICAgNjcsXG4gICAgOTksXG4gICAgNjgsXG4gICAgMTAwLFxuICAgIDY4LFxuICAgIDEwMCxcbiAgICA2OSxcbiAgICAxMDEsXG4gICAgNjksXG4gICAgMTAxLFxuICAgIDY5LFxuICAgIDEwMSxcbiAgICA2OSxcbiAgICAxMDEsXG4gICAgNjksXG4gICAgMTAxLFxuICAgIDcxLFxuICAgIDEwMyxcbiAgICA3MSxcbiAgICAxMDMsXG4gICAgNzEsXG4gICAgMTAzLFxuICAgIDcxLFxuICAgIDEwMyxcbiAgICA3MixcbiAgICAxMDQsXG4gICAgNzIsXG4gICAgMTA0LFxuICAgIDczLFxuICAgIDEwNSxcbiAgICA3MyxcbiAgICAxMDUsXG4gICAgNzMsXG4gICAgMTA1LFxuICAgIDczLFxuICAgIDEwNSxcbiAgICA3MyxcbiAgICAxMDUsXG4gICAgNzMsXG4gICAgMTA1LFxuICAgIDc0LFxuICAgIDEwNixcbiAgICA3NSxcbiAgICAxMDcsXG4gICAgMTA3LFxuICAgIDc2LFxuICAgIDEwOCxcbiAgICA3NixcbiAgICAxMDgsXG4gICAgNzYsXG4gICAgMTA4LFxuICAgIDc2LFxuICAgIDEwOCxcbiAgICA3NixcbiAgICAxMDgsXG4gICAgNzgsXG4gICAgMTEwLFxuICAgIDc4LFxuICAgIDExMCxcbiAgICA3OCxcbiAgICAxMTAsXG4gICAgMTEwLFxuICAgIDc4LFxuICAgIDExMCxcbiAgICA3OSxcbiAgICAxMTEsXG4gICAgNzksXG4gICAgMTExLFxuICAgIDc5LFxuICAgIDExMSxcbiAgICA3OSxcbiAgICAxMTEsXG4gICAgODIsXG4gICAgMTE0LFxuICAgIDgyLFxuICAgIDExNCxcbiAgICA4MixcbiAgICAxMTQsXG4gICAgODMsXG4gICAgMTE1LFxuICAgIDgzLFxuICAgIDExNSxcbiAgICA4MyxcbiAgICAxMTUsXG4gICAgODMsXG4gICAgMTE1LFxuICAgIDg0LFxuICAgIDExNixcbiAgICA4NCxcbiAgICAxMTYsXG4gICAgODQsXG4gICAgMTE2LFxuICAgIDg1LFxuICAgIDExNyxcbiAgICA4NSxcbiAgICAxMTcsXG4gICAgODUsXG4gICAgMTE3LFxuICAgIDg1LFxuICAgIDExNyxcbiAgICA4NSxcbiAgICAxMTcsXG4gICAgODUsXG4gICAgMTE3LFxuICAgIDg3LFxuICAgIDExOSxcbiAgICA4OSxcbiAgICAxMjEsXG4gICAgODksXG4gICAgOTAsXG4gICAgMTIyLFxuICAgIDkwLFxuICAgIDEyMixcbiAgICA5MCxcbiAgICAxMjIsXG4gICAgMTE1XG5dO1xuZnVuY3Rpb24gcmVwbGFjZUNoYXIoY2hhckNvZGUpIHtcbiAgICBpZiAoY2hhckNvZGUgPCBESUFDUklUSUNTX0NIQVJDT0RFX1NUQVJUIHx8IGNoYXJDb2RlID4gRElBQ1JJVElDU19DSEFSQ09ERV9FTkQpXG4gICAgICAgIHJldHVybiBjaGFyQ29kZTtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAgKi9cbiAgICByZXR1cm4gQ0hBUkNPREVfUkVQTEFDRV9NQVBQSU5HW2NoYXJDb2RlIC0gRElBQ1JJVElDU19DSEFSQ09ERV9TVEFSVF0gfHwgY2hhckNvZGU7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVwbGFjZURpYWNyaXRpY3Moc3RyKSB7XG4gICAgY29uc3Qgc3RyaW5nQ2hhckNvZGUgPSBbXTtcbiAgICBmb3IgKGxldCBpZHggPSAwOyBpZHggPCBzdHIubGVuZ3RoOyBpZHgrKykge1xuICAgICAgICBzdHJpbmdDaGFyQ29kZVtpZHhdID0gcmVwbGFjZUNoYXIoc3RyLmNoYXJDb2RlQXQoaWR4KSk7XG4gICAgfVxuICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKC4uLnN0cmluZ0NoYXJDb2RlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRpYWNyaXRpY3MuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/diacritics.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/english-stemmer.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/tokenizer/english-stemmer.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stemmer: () => (/* binding */ stemmer)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst step2List = {\n    ational: 'ate',\n    tional: 'tion',\n    enci: 'ence',\n    anci: 'ance',\n    izer: 'ize',\n    bli: 'ble',\n    alli: 'al',\n    entli: 'ent',\n    eli: 'e',\n    ousli: 'ous',\n    ization: 'ize',\n    ation: 'ate',\n    ator: 'ate',\n    alism: 'al',\n    iveness: 'ive',\n    fulness: 'ful',\n    ousness: 'ous',\n    aliti: 'al',\n    iviti: 'ive',\n    biliti: 'ble',\n    logi: 'log'\n};\nconst step3List = {\n    icate: 'ic',\n    ative: '',\n    alize: 'al',\n    iciti: 'ic',\n    ical: 'ic',\n    ful: '',\n    ness: ''\n};\n// Consonant\nconst c = '[^aeiou]';\n// Vowel\nconst v = '[aeiouy]';\n// Consonant sequence\nconst C = c + '[^aeiouy]*';\n// Vowel sequence\nconst V = v + '[aeiou]*';\n// [C]VC... is m>0\nconst mgr0 = '^(' + C + ')?' + V + C;\n// [C]VC[V] is m=1\nconst meq1 = '^(' + C + ')?' + V + C + '(' + V + ')?$';\n// [C]VCVC... is m>1\nconst mgr1 = '^(' + C + ')?' + V + C + V + C;\n// vowel in stem\nconst s_v = '^(' + C + ')?' + v;\nfunction stemmer(w) {\n    let stem;\n    let suffix;\n    let re;\n    let re2;\n    let re3;\n    let re4;\n    if (w.length < 3) {\n        return w;\n    }\n    const firstch = w.substring(0, 1);\n    if (firstch == 'y') {\n        w = firstch.toUpperCase() + w.substring(1);\n    }\n    re = /^(.+?)(ss|i)es$/;\n    re2 = /^(.+?)([^s])s$/;\n    if (re.test(w)) {\n        w = w.replace(re, '$1$2');\n    }\n    else if (re2.test(w)) {\n        w = w.replace(re2, '$1$2');\n    }\n    re = /^(.+?)eed$/;\n    re2 = /^(.+?)(ed|ing)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        re = new RegExp(mgr0);\n        if (re.test(fp[1])) {\n            re = /.$/;\n            w = w.replace(re, '');\n        }\n    }\n    else if (re2.test(w)) {\n        const fp = re2.exec(w);\n        stem = fp[1];\n        re2 = new RegExp(s_v);\n        if (re2.test(stem)) {\n            w = stem;\n            re2 = /(at|bl|iz)$/;\n            re3 = new RegExp('([^aeiouylsz])\\\\1$');\n            re4 = new RegExp('^' + C + v + '[^aeiouwxy]$');\n            if (re2.test(w)) {\n                w = w + 'e';\n            }\n            else if (re3.test(w)) {\n                re = /.$/;\n                w = w.replace(re, '');\n            }\n            else if (re4.test(w)) {\n                w = w + 'e';\n            }\n        }\n    }\n    re = /^(.+?)y$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        re = new RegExp(s_v);\n        if (stem && re.test(stem)) {\n            w = stem + 'i';\n        }\n    }\n    re =\n        /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        suffix = fp?.[2];\n        re = new RegExp(mgr0);\n        if (stem && re.test(stem)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            w = stem + step2List[suffix];\n        }\n    }\n    re = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        suffix = fp?.[2];\n        re = new RegExp(mgr0);\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (stem && re.test(stem)) {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            w = stem + step3List[suffix];\n        }\n    }\n    re = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    re2 = /^(.+?)(s|t)(ion)$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        re = new RegExp(mgr1);\n        if (stem && re.test(stem)) {\n            w = stem;\n        }\n    }\n    else if (re2.test(w)) {\n        const fp = re2.exec(w);\n        stem = fp?.[1] ?? '' + fp?.[2] ?? '';\n        re2 = new RegExp(mgr1);\n        if (re2.test(stem)) {\n            w = stem;\n        }\n    }\n    re = /^(.+?)e$/;\n    if (re.test(w)) {\n        const fp = re.exec(w);\n        stem = fp?.[1];\n        re = new RegExp(mgr1);\n        re2 = new RegExp(meq1);\n        re3 = new RegExp('^' + C + v + '[^aeiouwxy]$');\n        if (stem && (re.test(stem) || (re2.test(stem) && !re3.test(stem)))) {\n            w = stem;\n        }\n    }\n    re = /ll$/;\n    re2 = new RegExp(mgr1);\n    if (re.test(w) && re2.test(w)) {\n        re = /.$/;\n        w = w.replace(re, '');\n    }\n    if (firstch == 'y') {\n        w = firstch.toLowerCase() + w.substring(1);\n    }\n    return w;\n}\n//# sourceMappingURL=english-stemmer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/english-stemmer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/index.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/tokenizer/index.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTokenizer: () => (/* binding */ createTokenizer),\n/* harmony export */   normalizeToken: () => (/* binding */ normalizeToken)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _diacritics_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./diacritics.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/diacritics.js\");\n/* harmony import */ var _languages_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./languages.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/languages.js\");\n/* harmony import */ var _english_stemmer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./english-stemmer.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/english-stemmer.js\");\n\n\n\n\nfunction normalizeToken(prop, token, withCache = true) {\n    const key = `${this.language}:${prop}:${token}`;\n    if (withCache && this.normalizationCache.has(key)) {\n        return this.normalizationCache.get(key);\n    }\n    // Remove stopwords if enabled\n    if (this.stopWords?.includes(token)) {\n        if (withCache) {\n            this.normalizationCache.set(key, '');\n        }\n        return '';\n    }\n    // Apply stemming if enabled\n    if (this.stemmer && !this.stemmerSkipProperties.has(prop)) {\n        token = this.stemmer(token);\n    }\n    token = (0,_diacritics_js__WEBPACK_IMPORTED_MODULE_1__.replaceDiacritics)(token);\n    if (withCache) {\n        this.normalizationCache.set(key, token);\n    }\n    return token;\n}\n/* c8 ignore next 10 */\nfunction trim(text) {\n    while (text[text.length - 1] === '') {\n        text.pop();\n    }\n    while (text[0] === '') {\n        text.shift();\n    }\n    return text;\n}\nfunction tokenize(input, language, prop, withCache = true) {\n    if (language && language !== this.language) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('LANGUAGE_NOT_SUPPORTED', language);\n    }\n    /* c8 ignore next 3 */\n    if (typeof input !== 'string') {\n        return [input];\n    }\n    const normalizeToken = this.normalizeToken.bind(this, prop ?? '');\n    let tokens;\n    if (prop && this.tokenizeSkipProperties.has(prop)) {\n        tokens = [normalizeToken(input, withCache)];\n    }\n    else {\n        const splitRule = _languages_js__WEBPACK_IMPORTED_MODULE_2__.SPLITTERS[this.language];\n        tokens = input\n            .toLowerCase()\n            .split(splitRule)\n            .map(t => normalizeToken(t, withCache))\n            .filter(Boolean);\n    }\n    const trimTokens = trim(tokens);\n    if (!this.allowDuplicates) {\n        return Array.from(new Set(trimTokens));\n    }\n    return trimTokens;\n}\nfunction createTokenizer(config = {}) {\n    if (!config.language) {\n        config.language = 'english';\n    }\n    else if (!_languages_js__WEBPACK_IMPORTED_MODULE_2__.SUPPORTED_LANGUAGES.includes(config.language)) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('LANGUAGE_NOT_SUPPORTED', config.language);\n    }\n    // Handle stemming - It is disabled by default\n    let stemmer;\n    if (config.stemming || (config.stemmer && !('stemming' in config))) {\n        if (config.stemmer) {\n            if (typeof config.stemmer !== 'function') {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_STEMMER_FUNCTION_TYPE');\n            }\n            stemmer = config.stemmer;\n        }\n        else {\n            if (config.language === 'english') {\n                stemmer = _english_stemmer_js__WEBPACK_IMPORTED_MODULE_3__.stemmer;\n            }\n            else {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('MISSING_STEMMER', config.language);\n            }\n        }\n    }\n    // Handle stopwords\n    let stopWords;\n    if (config.stopWords !== false) {\n        stopWords = [];\n        if (Array.isArray(config.stopWords)) {\n            stopWords = config.stopWords;\n        }\n        else if (typeof config.stopWords === 'function') {\n            stopWords = config.stopWords(stopWords);\n        }\n        else if (config.stopWords) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY');\n        }\n        // Make sure stopWords is just an array of strings\n        if (!Array.isArray(stopWords)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY');\n        }\n        for (const s of stopWords) {\n            if (typeof s !== 'string') {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY');\n            }\n        }\n    }\n    // Create the tokenizer\n    const tokenizer = {\n        tokenize,\n        language: config.language,\n        stemmer,\n        stemmerSkipProperties: new Set(config.stemmerSkipProperties ? [config.stemmerSkipProperties].flat() : []),\n        tokenizeSkipProperties: new Set(config.tokenizeSkipProperties ? [config.tokenizeSkipProperties].flat() : []),\n        stopWords,\n        allowDuplicates: Boolean(config.allowDuplicates),\n        normalizeToken,\n        normalizationCache: new Map()\n    };\n    tokenizer.tokenize = tokenize.bind(tokenizer);\n    tokenizer.normalizeToken = normalizeToken;\n    return tokenizer;\n}\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvdG9rZW5pemVyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4QztBQUNNO0FBQ1k7QUFDTjtBQUNuRDtBQUNQLG1CQUFtQixjQUFjLEdBQUcsS0FBSyxHQUFHLE1BQU07QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaUVBQWlCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHVEQUFXO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsb0RBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sb0NBQW9DO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQW1CO0FBQ2pDLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHVEQUFXO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsd0RBQU87QUFDakM7QUFDQTtBQUNBLHNCQUFzQix1REFBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVEQUFXO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsdURBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9jb21wb25lbnRzL3Rva2VuaXplci9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFcnJvciB9IGZyb20gJy4uLy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyByZXBsYWNlRGlhY3JpdGljcyB9IGZyb20gJy4vZGlhY3JpdGljcy5qcyc7XG5pbXBvcnQgeyBTUExJVFRFUlMsIFNVUFBPUlRFRF9MQU5HVUFHRVMgfSBmcm9tICcuL2xhbmd1YWdlcy5qcyc7XG5pbXBvcnQgeyBzdGVtbWVyIGFzIGVuZ2xpc2ggfSBmcm9tICcuL2VuZ2xpc2gtc3RlbW1lci5qcyc7XG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplVG9rZW4ocHJvcCwgdG9rZW4sIHdpdGhDYWNoZSA9IHRydWUpIHtcbiAgICBjb25zdCBrZXkgPSBgJHt0aGlzLmxhbmd1YWdlfToke3Byb3B9OiR7dG9rZW59YDtcbiAgICBpZiAod2l0aENhY2hlICYmIHRoaXMubm9ybWFsaXphdGlvbkNhY2hlLmhhcyhrZXkpKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm5vcm1hbGl6YXRpb25DYWNoZS5nZXQoa2V5KTtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIHN0b3B3b3JkcyBpZiBlbmFibGVkXG4gICAgaWYgKHRoaXMuc3RvcFdvcmRzPy5pbmNsdWRlcyh0b2tlbikpIHtcbiAgICAgICAgaWYgKHdpdGhDYWNoZSkge1xuICAgICAgICAgICAgdGhpcy5ub3JtYWxpemF0aW9uQ2FjaGUuc2V0KGtleSwgJycpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgLy8gQXBwbHkgc3RlbW1pbmcgaWYgZW5hYmxlZFxuICAgIGlmICh0aGlzLnN0ZW1tZXIgJiYgIXRoaXMuc3RlbW1lclNraXBQcm9wZXJ0aWVzLmhhcyhwcm9wKSkge1xuICAgICAgICB0b2tlbiA9IHRoaXMuc3RlbW1lcih0b2tlbik7XG4gICAgfVxuICAgIHRva2VuID0gcmVwbGFjZURpYWNyaXRpY3ModG9rZW4pO1xuICAgIGlmICh3aXRoQ2FjaGUpIHtcbiAgICAgICAgdGhpcy5ub3JtYWxpemF0aW9uQ2FjaGUuc2V0KGtleSwgdG9rZW4pO1xuICAgIH1cbiAgICByZXR1cm4gdG9rZW47XG59XG4vKiBjOCBpZ25vcmUgbmV4dCAxMCAqL1xuZnVuY3Rpb24gdHJpbSh0ZXh0KSB7XG4gICAgd2hpbGUgKHRleHRbdGV4dC5sZW5ndGggLSAxXSA9PT0gJycpIHtcbiAgICAgICAgdGV4dC5wb3AoKTtcbiAgICB9XG4gICAgd2hpbGUgKHRleHRbMF0gPT09ICcnKSB7XG4gICAgICAgIHRleHQuc2hpZnQoKTtcbiAgICB9XG4gICAgcmV0dXJuIHRleHQ7XG59XG5mdW5jdGlvbiB0b2tlbml6ZShpbnB1dCwgbGFuZ3VhZ2UsIHByb3AsIHdpdGhDYWNoZSA9IHRydWUpIHtcbiAgICBpZiAobGFuZ3VhZ2UgJiYgbGFuZ3VhZ2UgIT09IHRoaXMubGFuZ3VhZ2UpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0xBTkdVQUdFX05PVF9TVVBQT1JURUQnLCBsYW5ndWFnZSk7XG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICBpZiAodHlwZW9mIGlucHV0ICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gW2lucHV0XTtcbiAgICB9XG4gICAgY29uc3Qgbm9ybWFsaXplVG9rZW4gPSB0aGlzLm5vcm1hbGl6ZVRva2VuLmJpbmQodGhpcywgcHJvcCA/PyAnJyk7XG4gICAgbGV0IHRva2VucztcbiAgICBpZiAocHJvcCAmJiB0aGlzLnRva2VuaXplU2tpcFByb3BlcnRpZXMuaGFzKHByb3ApKSB7XG4gICAgICAgIHRva2VucyA9IFtub3JtYWxpemVUb2tlbihpbnB1dCwgd2l0aENhY2hlKV07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBzcGxpdFJ1bGUgPSBTUExJVFRFUlNbdGhpcy5sYW5ndWFnZV07XG4gICAgICAgIHRva2VucyA9IGlucHV0XG4gICAgICAgICAgICAudG9Mb3dlckNhc2UoKVxuICAgICAgICAgICAgLnNwbGl0KHNwbGl0UnVsZSlcbiAgICAgICAgICAgIC5tYXAodCA9PiBub3JtYWxpemVUb2tlbih0LCB3aXRoQ2FjaGUpKVxuICAgICAgICAgICAgLmZpbHRlcihCb29sZWFuKTtcbiAgICB9XG4gICAgY29uc3QgdHJpbVRva2VucyA9IHRyaW0odG9rZW5zKTtcbiAgICBpZiAoIXRoaXMuYWxsb3dEdXBsaWNhdGVzKSB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKG5ldyBTZXQodHJpbVRva2VucykpO1xuICAgIH1cbiAgICByZXR1cm4gdHJpbVRva2Vucztcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUb2tlbml6ZXIoY29uZmlnID0ge30pIHtcbiAgICBpZiAoIWNvbmZpZy5sYW5ndWFnZSkge1xuICAgICAgICBjb25maWcubGFuZ3VhZ2UgPSAnZW5nbGlzaCc7XG4gICAgfVxuICAgIGVsc2UgaWYgKCFTVVBQT1JURURfTEFOR1VBR0VTLmluY2x1ZGVzKGNvbmZpZy5sYW5ndWFnZSkpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0xBTkdVQUdFX05PVF9TVVBQT1JURUQnLCBjb25maWcubGFuZ3VhZ2UpO1xuICAgIH1cbiAgICAvLyBIYW5kbGUgc3RlbW1pbmcgLSBJdCBpcyBkaXNhYmxlZCBieSBkZWZhdWx0XG4gICAgbGV0IHN0ZW1tZXI7XG4gICAgaWYgKGNvbmZpZy5zdGVtbWluZyB8fCAoY29uZmlnLnN0ZW1tZXIgJiYgISgnc3RlbW1pbmcnIGluIGNvbmZpZykpKSB7XG4gICAgICAgIGlmIChjb25maWcuc3RlbW1lcikge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBjb25maWcuc3RlbW1lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdJTlZBTElEX1NURU1NRVJfRlVOQ1RJT05fVFlQRScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RlbW1lciA9IGNvbmZpZy5zdGVtbWVyO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGNvbmZpZy5sYW5ndWFnZSA9PT0gJ2VuZ2xpc2gnKSB7XG4gICAgICAgICAgICAgICAgc3RlbW1lciA9IGVuZ2xpc2g7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignTUlTU0lOR19TVEVNTUVSJywgY29uZmlnLmxhbmd1YWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBIYW5kbGUgc3RvcHdvcmRzXG4gICAgbGV0IHN0b3BXb3JkcztcbiAgICBpZiAoY29uZmlnLnN0b3BXb3JkcyAhPT0gZmFsc2UpIHtcbiAgICAgICAgc3RvcFdvcmRzID0gW107XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvbmZpZy5zdG9wV29yZHMpKSB7XG4gICAgICAgICAgICBzdG9wV29yZHMgPSBjb25maWcuc3RvcFdvcmRzO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBjb25maWcuc3RvcFdvcmRzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBzdG9wV29yZHMgPSBjb25maWcuc3RvcFdvcmRzKHN0b3BXb3Jkcyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoY29uZmlnLnN0b3BXb3Jkcykge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0NVU1RPTV9TVE9QX1dPUkRTX01VU1RfQkVfRlVOQ1RJT05fT1JfQVJSQVknKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBNYWtlIHN1cmUgc3RvcFdvcmRzIGlzIGp1c3QgYW4gYXJyYXkgb2Ygc3RyaW5nc1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoc3RvcFdvcmRzKSkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0NVU1RPTV9TVE9QX1dPUkRTX01VU1RfQkVfRlVOQ1RJT05fT1JfQVJSQVknKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHMgb2Ygc3RvcFdvcmRzKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHMgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0NVU1RPTV9TVE9QX1dPUkRTX01VU1RfQkVfRlVOQ1RJT05fT1JfQVJSQVknKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBDcmVhdGUgdGhlIHRva2VuaXplclxuICAgIGNvbnN0IHRva2VuaXplciA9IHtcbiAgICAgICAgdG9rZW5pemUsXG4gICAgICAgIGxhbmd1YWdlOiBjb25maWcubGFuZ3VhZ2UsXG4gICAgICAgIHN0ZW1tZXIsXG4gICAgICAgIHN0ZW1tZXJTa2lwUHJvcGVydGllczogbmV3IFNldChjb25maWcuc3RlbW1lclNraXBQcm9wZXJ0aWVzID8gW2NvbmZpZy5zdGVtbWVyU2tpcFByb3BlcnRpZXNdLmZsYXQoKSA6IFtdKSxcbiAgICAgICAgdG9rZW5pemVTa2lwUHJvcGVydGllczogbmV3IFNldChjb25maWcudG9rZW5pemVTa2lwUHJvcGVydGllcyA/IFtjb25maWcudG9rZW5pemVTa2lwUHJvcGVydGllc10uZmxhdCgpIDogW10pLFxuICAgICAgICBzdG9wV29yZHMsXG4gICAgICAgIGFsbG93RHVwbGljYXRlczogQm9vbGVhbihjb25maWcuYWxsb3dEdXBsaWNhdGVzKSxcbiAgICAgICAgbm9ybWFsaXplVG9rZW4sXG4gICAgICAgIG5vcm1hbGl6YXRpb25DYWNoZTogbmV3IE1hcCgpXG4gICAgfTtcbiAgICB0b2tlbml6ZXIudG9rZW5pemUgPSB0b2tlbml6ZS5iaW5kKHRva2VuaXplcik7XG4gICAgdG9rZW5pemVyLm5vcm1hbGl6ZVRva2VuID0gbm9ybWFsaXplVG9rZW47XG4gICAgcmV0dXJuIHRva2VuaXplcjtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/languages.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/components/tokenizer/languages.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SPLITTERS: () => (/* binding */ SPLITTERS),\n/* harmony export */   STEMMERS: () => (/* binding */ STEMMERS),\n/* harmony export */   SUPPORTED_LANGUAGES: () => (/* binding */ SUPPORTED_LANGUAGES),\n/* harmony export */   getLocale: () => (/* binding */ getLocale)\n/* harmony export */ });\nconst STEMMERS = {\n    arabic: 'ar',\n    armenian: 'am',\n    bulgarian: 'bg',\n    czech: 'cz',\n    danish: 'dk',\n    dutch: 'nl',\n    english: 'en',\n    finnish: 'fi',\n    french: 'fr',\n    german: 'de',\n    greek: 'gr',\n    hungarian: 'hu',\n    indian: 'in',\n    indonesian: 'id',\n    irish: 'ie',\n    italian: 'it',\n    lithuanian: 'lt',\n    nepali: 'np',\n    norwegian: 'no',\n    portuguese: 'pt',\n    romanian: 'ro',\n    russian: 'ru',\n    serbian: 'rs',\n    slovenian: 'ru',\n    spanish: 'es',\n    swedish: 'se',\n    tamil: 'ta',\n    turkish: 'tr',\n    ukrainian: 'uk',\n    sanskrit: 'sk'\n};\nconst SPLITTERS = {\n    dutch: /[^A-Za-zàèéìòóù0-9_'-]+/gim,\n    english: /[^A-Za-zàèéìòóù0-9_'-]+/gim,\n    french: /[^a-z0-9äâàéèëêïîöôùüûœç-]+/gim,\n    italian: /[^A-Za-zàèéìòóù0-9_'-]+/gim,\n    norwegian: /[^a-z0-9_æøåÆØÅäÄöÖüÜ]+/gim,\n    portuguese: /[^a-z0-9à-úÀ-Ú]/gim,\n    russian: /[^a-z0-9а-яА-ЯёЁ]+/gim,\n    spanish: /[^a-z0-9A-Zá-úÁ-ÚñÑüÜ]+/gim,\n    swedish: /[^a-z0-9_åÅäÄöÖüÜ-]+/gim,\n    german: /[^a-z0-9A-ZäöüÄÖÜß]+/gim,\n    finnish: /[^a-z0-9äöÄÖ]+/gim,\n    danish: /[^a-z0-9æøåÆØÅ]+/gim,\n    hungarian: /[^a-z0-9áéíóöőúüűÁÉÍÓÖŐÚÜŰ]+/gim,\n    romanian: /[^a-z0-9ăâîșțĂÂÎȘȚ]+/gim,\n    serbian: /[^a-z0-9čćžšđČĆŽŠĐ]+/gim,\n    turkish: /[^a-z0-9çÇğĞıİöÖşŞüÜ]+/gim,\n    lithuanian: /[^a-z0-9ąčęėįšųūžĄČĘĖĮŠŲŪŽ]+/gim,\n    arabic: /[^a-z0-9أ-ي]+/gim,\n    nepali: /[^a-z0-9अ-ह]+/gim,\n    irish: /[^a-z0-9áéíóúÁÉÍÓÚ]+/gim,\n    indian: /[^a-z0-9अ-ह]+/gim,\n    armenian: /[^a-z0-9ա-ֆ]+/gim,\n    greek: /[^a-z0-9α-ωά-ώ]+/gim,\n    indonesian: /[^a-z0-9]+/gim,\n    ukrainian: /[^a-z0-9а-яА-ЯіїєІЇЄ]+/gim,\n    slovenian: /[^a-z0-9čžšČŽŠ]+/gim,\n    bulgarian: /[^a-z0-9а-яА-Я]+/gim,\n    tamil: /[^a-z0-9அ-ஹ]+/gim,\n    sanskrit: /[^a-z0-9A-Zāīūṛḷṃṁḥśṣṭḍṇṅñḻḹṝ]+/gim,\n    czech: /[^A-Z0-9a-zěščřžýáíéúůóťďĚŠČŘŽÝÁÍÉÓÚŮŤĎ-]+/gim\n};\nconst SUPPORTED_LANGUAGES = Object.keys(STEMMERS);\nfunction getLocale(language) {\n    return language !== undefined && SUPPORTED_LANGUAGES.includes(language) ? STEMMERS[language] : undefined;\n}\n//# sourceMappingURL=languages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvdG9rZW5pemVyL2xhbmd1YWdlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbXBvbmVudHMvdG9rZW5pemVyL2xhbmd1YWdlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgU1RFTU1FUlMgPSB7XG4gICAgYXJhYmljOiAnYXInLFxuICAgIGFybWVuaWFuOiAnYW0nLFxuICAgIGJ1bGdhcmlhbjogJ2JnJyxcbiAgICBjemVjaDogJ2N6JyxcbiAgICBkYW5pc2g6ICdkaycsXG4gICAgZHV0Y2g6ICdubCcsXG4gICAgZW5nbGlzaDogJ2VuJyxcbiAgICBmaW5uaXNoOiAnZmknLFxuICAgIGZyZW5jaDogJ2ZyJyxcbiAgICBnZXJtYW46ICdkZScsXG4gICAgZ3JlZWs6ICdncicsXG4gICAgaHVuZ2FyaWFuOiAnaHUnLFxuICAgIGluZGlhbjogJ2luJyxcbiAgICBpbmRvbmVzaWFuOiAnaWQnLFxuICAgIGlyaXNoOiAnaWUnLFxuICAgIGl0YWxpYW46ICdpdCcsXG4gICAgbGl0aHVhbmlhbjogJ2x0JyxcbiAgICBuZXBhbGk6ICducCcsXG4gICAgbm9yd2VnaWFuOiAnbm8nLFxuICAgIHBvcnR1Z3Vlc2U6ICdwdCcsXG4gICAgcm9tYW5pYW46ICdybycsXG4gICAgcnVzc2lhbjogJ3J1JyxcbiAgICBzZXJiaWFuOiAncnMnLFxuICAgIHNsb3ZlbmlhbjogJ3J1JyxcbiAgICBzcGFuaXNoOiAnZXMnLFxuICAgIHN3ZWRpc2g6ICdzZScsXG4gICAgdGFtaWw6ICd0YScsXG4gICAgdHVya2lzaDogJ3RyJyxcbiAgICB1a3JhaW5pYW46ICd1aycsXG4gICAgc2Fuc2tyaXQ6ICdzaydcbn07XG5leHBvcnQgY29uc3QgU1BMSVRURVJTID0ge1xuICAgIGR1dGNoOiAvW15BLVphLXrDoMOow6nDrMOyw7PDuTAtOV8nLV0rL2dpbSxcbiAgICBlbmdsaXNoOiAvW15BLVphLXrDoMOow6nDrMOyw7PDuTAtOV8nLV0rL2dpbSxcbiAgICBmcmVuY2g6IC9bXmEtejAtOcOkw6LDoMOpw6jDq8Oqw6/DrsO2w7TDucO8w7vFk8OnLV0rL2dpbSxcbiAgICBpdGFsaWFuOiAvW15BLVphLXrDoMOow6nDrMOyw7PDuTAtOV8nLV0rL2dpbSxcbiAgICBub3J3ZWdpYW46IC9bXmEtejAtOV/DpsO4w6XDhsOYw4XDpMOEw7bDlsO8w5xdKy9naW0sXG4gICAgcG9ydHVndWVzZTogL1teYS16MC05w6Atw7rDgC3Dml0vZ2ltLFxuICAgIHJ1c3NpYW46IC9bXmEtejAtOdCwLdGP0JAt0K/RkdCBXSsvZ2ltLFxuICAgIHNwYW5pc2g6IC9bXmEtejAtOUEtWsOhLcO6w4Etw5rDscORw7zDnF0rL2dpbSxcbiAgICBzd2VkaXNoOiAvW15hLXowLTlfw6XDhcOkw4TDtsOWw7zDnC1dKy9naW0sXG4gICAgZ2VybWFuOiAvW15hLXowLTlBLVrDpMO2w7zDhMOWw5zDn10rL2dpbSxcbiAgICBmaW5uaXNoOiAvW15hLXowLTnDpMO2w4TDll0rL2dpbSxcbiAgICBkYW5pc2g6IC9bXmEtejAtOcOmw7jDpcOGw5jDhV0rL2dpbSxcbiAgICBodW5nYXJpYW46IC9bXmEtejAtOcOhw6nDrcOzw7bFkcO6w7zFscOBw4nDjcOTw5bFkMOaw5zFsF0rL2dpbSxcbiAgICByb21hbmlhbjogL1teYS16MC05xIPDosOuyJnIm8SCw4LDjsiYyJpdKy9naW0sXG4gICAgc2VyYmlhbjogL1teYS16MC05xI3Eh8W+xaHEkcSMxIbFvcWgxJBdKy9naW0sXG4gICAgdHVya2lzaDogL1teYS16MC05w6fDh8SfxJ7EscSww7bDlsWfxZ7DvMOcXSsvZ2ltLFxuICAgIGxpdGh1YW5pYW46IC9bXmEtejAtOcSFxI3EmcSXxK/FocWzxavFvsSExIzEmMSWxK7FoMWyxarFvV0rL2dpbSxcbiAgICBhcmFiaWM6IC9bXmEtejAtOdijLdmKXSsvZ2ltLFxuICAgIG5lcGFsaTogL1teYS16MC054KSFLeCkuV0rL2dpbSxcbiAgICBpcmlzaDogL1teYS16MC05w6HDqcOtw7PDusOBw4nDjcOTw5pdKy9naW0sXG4gICAgaW5kaWFuOiAvW15hLXowLTngpIUt4KS5XSsvZ2ltLFxuICAgIGFybWVuaWFuOiAvW15hLXowLTnVoS3Whl0rL2dpbSxcbiAgICBncmVlazogL1teYS16MC05zrEtz4nOrC3Pjl0rL2dpbSxcbiAgICBpbmRvbmVzaWFuOiAvW15hLXowLTldKy9naW0sXG4gICAgdWtyYWluaWFuOiAvW15hLXowLTnQsC3Rj9CQLdCv0ZbRl9GU0IbQh9CEXSsvZ2ltLFxuICAgIHNsb3ZlbmlhbjogL1teYS16MC05xI3FvsWhxIzFvcWgXSsvZ2ltLFxuICAgIGJ1bGdhcmlhbjogL1teYS16MC050LAt0Y/QkC3Qr10rL2dpbSxcbiAgICB0YW1pbDogL1teYS16MC054K6FLeCuuV0rL2dpbSxcbiAgICBzYW5za3JpdDogL1teYS16MC05QS1axIHEq8Wr4bmb4bi34bmD4bmB4bilxZvhuaPhua3huI3huYfhuYXDseG4u+G4ueG5nV0rL2dpbSxcbiAgICBjemVjaDogL1teQS1aMC05YS16xJvFocSNxZnFvsO9w6HDrcOpw7rFr8OzxaXEj8SaxaDEjMWYxb3DncOBw43DicOTw5rFrsWkxI4tXSsvZ2ltXG59O1xuZXhwb3J0IGNvbnN0IFNVUFBPUlRFRF9MQU5HVUFHRVMgPSBPYmplY3Qua2V5cyhTVEVNTUVSUyk7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9jYWxlKGxhbmd1YWdlKSB7XG4gICAgcmV0dXJuIGxhbmd1YWdlICE9PSB1bmRlZmluZWQgJiYgU1VQUE9SVEVEX0xBTkdVQUdFUy5pbmNsdWRlcyhsYW5ndWFnZSkgPyBTVEVNTUVSU1tsYW5ndWFnZV0gOiB1bmRlZmluZWQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sYW5ndWFnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/languages.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/constants.js":
/*!*************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/constants.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MODE_FULLTEXT_SEARCH: () => (/* binding */ MODE_FULLTEXT_SEARCH),\n/* harmony export */   MODE_HYBRID_SEARCH: () => (/* binding */ MODE_HYBRID_SEARCH),\n/* harmony export */   MODE_VECTOR_SEARCH: () => (/* binding */ MODE_VECTOR_SEARCH)\n/* harmony export */ });\nconst MODE_FULLTEXT_SEARCH = 'fulltext';\nconst MODE_HYBRID_SEARCH = 'hybrid';\nconst MODE_VECTOR_SEARCH = 'vector';\n//# sourceMappingURL=constants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNBO0FBQ0E7QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9jb25zdGFudHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IE1PREVfRlVMTFRFWFRfU0VBUkNIID0gJ2Z1bGx0ZXh0JztcbmV4cG9ydCBjb25zdCBNT0RFX0hZQlJJRF9TRUFSQ0ggPSAnaHlicmlkJztcbmV4cG9ydCBjb25zdCBNT0RFX1ZFQ1RPUl9TRUFSQ0ggPSAndmVjdG9yJztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbnN0YW50cy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/constants.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js":
/*!**********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/errors.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createError: () => (/* binding */ createError)\n/* harmony export */ });\n/* harmony import */ var _components_tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/tokenizer/languages.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/languages.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\n\nconst allLanguages = _components_tokenizer_languages_js__WEBPACK_IMPORTED_MODULE_0__.SUPPORTED_LANGUAGES.join('\\n - ');\nconst errors = {\n    NO_LANGUAGE_WITH_CUSTOM_TOKENIZER: 'Do not pass the language option to create when using a custom tokenizer.',\n    LANGUAGE_NOT_SUPPORTED: `Language \"%s\" is not supported.\\nSupported languages are:\\n - ${allLanguages}`,\n    INVALID_STEMMER_FUNCTION_TYPE: `config.stemmer property must be a function.`,\n    MISSING_STEMMER: `As of version 1.0.0 @orama/orama does not ship non English stemmers by default. To solve this, please explicitly import and specify the \"%s\" stemmer from the package @orama/stemmers. See https://docs.orama.com/open-source/text-analysis/stemming for more information.`,\n    CUSTOM_STOP_WORDS_MUST_BE_FUNCTION_OR_ARRAY: 'Custom stop words array must only contain strings.',\n    UNSUPPORTED_COMPONENT: `Unsupported component \"%s\".`,\n    COMPONENT_MUST_BE_FUNCTION: `The component \"%s\" must be a function.`,\n    COMPONENT_MUST_BE_FUNCTION_OR_ARRAY_FUNCTIONS: `The component \"%s\" must be a function or an array of functions.`,\n    INVALID_SCHEMA_TYPE: `Unsupported schema type \"%s\" at \"%s\". Expected \"string\", \"boolean\" or \"number\" or array of them.`,\n    DOCUMENT_ID_MUST_BE_STRING: `Document id must be of type \"string\". Got \"%s\" instead.`,\n    DOCUMENT_ALREADY_EXISTS: `A document with id \"%s\" already exists.`,\n    DOCUMENT_DOES_NOT_EXIST: `A document with id \"%s\" does not exists.`,\n    MISSING_DOCUMENT_PROPERTY: `Missing searchable property \"%s\".`,\n    INVALID_DOCUMENT_PROPERTY: `Invalid document property \"%s\": expected \"%s\", got \"%s\"`,\n    UNKNOWN_INDEX: `Invalid property name \"%s\". Expected a wildcard string (\"*\") or array containing one of the following properties: %s`,\n    INVALID_BOOST_VALUE: `Boost value must be a number greater than, or less than 0.`,\n    INVALID_FILTER_OPERATION: `You can only use one operation per filter, you requested %d.`,\n    SCHEMA_VALIDATION_FAILURE: `Cannot insert document due schema validation failure on \"%s\" property.`,\n    INVALID_SORT_SCHEMA_TYPE: `Unsupported sort schema type \"%s\" at \"%s\". Expected \"string\" or \"number\".`,\n    CANNOT_SORT_BY_ARRAY: `Cannot configure sort for \"%s\" because it is an array (%s).`,\n    UNABLE_TO_SORT_ON_UNKNOWN_FIELD: `Unable to sort on unknown field \"%s\". Allowed fields: %s`,\n    SORT_DISABLED: `Sort is disabled. Please read the documentation at https://docs.oramasearch for more information.`,\n    UNKNOWN_GROUP_BY_PROPERTY: `Unknown groupBy property \"%s\".`,\n    INVALID_GROUP_BY_PROPERTY: `Invalid groupBy property \"%s\". Allowed types: \"%s\", but given \"%s\".`,\n    UNKNOWN_FILTER_PROPERTY: `Unknown filter property \"%s\".`,\n    INVALID_VECTOR_SIZE: `Vector size must be a number greater than 0. Got \"%s\" instead.`,\n    INVALID_VECTOR_VALUE: `Vector value must be a number greater than 0. Got \"%s\" instead.`,\n    INVALID_INPUT_VECTOR: `Property \"%s\" was declared as a %s-dimensional vector, but got a %s-dimensional vector instead.\\nInput vectors must be of the size declared in the schema, as calculating similarity between vectors of different sizes can lead to unexpected results.`,\n    WRONG_SEARCH_PROPERTY_TYPE: `Property \"%s\" is not searchable. Only \"string\" properties are searchable.`,\n    FACET_NOT_SUPPORTED: `Facet doens't support the type \"%s\".`,\n    INVALID_DISTANCE_SUFFIX: `Invalid distance suffix \"%s\". Valid suffixes are: cm, m, km, mi, yd, ft.`,\n    INVALID_SEARCH_MODE: `Invalid search mode \"%s\". Valid modes are: \"fulltext\", \"vector\", \"hybrid\".`,\n    MISSING_VECTOR_AND_SECURE_PROXY: `No vector was provided and no secure proxy was configured. Please provide a vector or configure an Orama Secure Proxy to perform hybrid search.`,\n    MISSING_TERM: `\"term\" is a required parameter when performing hybrid search. Please provide a search term.`,\n    INVALID_VECTOR_INPUT: `Invalid \"vector\" property. Expected an object with \"value\" and \"property\" properties, but got \"%s\" instead.`,\n    PLUGIN_CRASHED: `A plugin crashed during initialization. Please check the error message for more information:`,\n    PLUGIN_SECURE_PROXY_NOT_FOUND: `Could not find '@orama/secure-proxy-plugin' installed in your Orama instance.\\nPlease install it before proceeding with creating an answer session.\\nRead more at https://docs.orama.com/open-source/plugins/plugin-secure-proxy#plugin-secure-proxy\\n`,\n    PLUGIN_SECURE_PROXY_MISSING_CHAT_MODEL: `Could not find a chat model defined in the secure proxy plugin configuration.\\nPlease provide a chat model before proceeding with creating an answer session.\\nRead more at https://docs.orama.com/open-source/plugins/plugin-secure-proxy#plugin-secure-proxy\\n`,\n    ANSWER_SESSION_LAST_MESSAGE_IS_NOT_ASSISTANT: `The last message in the session is not an assistant message. Cannot regenerate non-assistant messages.`,\n    PLUGIN_COMPONENT_CONFLICT: `The component \"%s\" is already defined. The plugin \"%s\" is trying to redefine it.`,\n};\nfunction createError(code, ...args) {\n    const error = new Error((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sprintf)(errors[code] ?? `Unsupported Orama Error code: ${code}`, ...args));\n    error.code = code;\n    if ('captureStackTrace' in Error.prototype) {\n        Error.captureStackTrace(error);\n    }\n    return error;\n}\n//# sourceMappingURL=errors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnswerSession: () => (/* reexport safe */ _methods_answer_session_js__WEBPACK_IMPORTED_MODULE_9__.AnswerSession),\n/* harmony export */   MODE_FULLTEXT_SEARCH: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.MODE_FULLTEXT_SEARCH),\n/* harmony export */   MODE_HYBRID_SEARCH: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.MODE_HYBRID_SEARCH),\n/* harmony export */   MODE_VECTOR_SEARCH: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.MODE_VECTOR_SEARCH),\n/* harmony export */   components: () => (/* reexport module object */ _components_js__WEBPACK_IMPORTED_MODULE_11__),\n/* harmony export */   count: () => (/* reexport safe */ _methods_docs_js__WEBPACK_IMPORTED_MODULE_1__.count),\n/* harmony export */   create: () => (/* reexport safe */ _methods_create_js__WEBPACK_IMPORTED_MODULE_0__.create),\n/* harmony export */   getByID: () => (/* reexport safe */ _methods_docs_js__WEBPACK_IMPORTED_MODULE_1__.getByID),\n/* harmony export */   insert: () => (/* reexport safe */ _methods_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert),\n/* harmony export */   insertMultiple: () => (/* reexport safe */ _methods_insert_js__WEBPACK_IMPORTED_MODULE_2__.insertMultiple),\n/* harmony export */   internals: () => (/* reexport module object */ _internals_js__WEBPACK_IMPORTED_MODULE_12__),\n/* harmony export */   kInsertions: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.kInsertions),\n/* harmony export */   kRemovals: () => (/* reexport safe */ _types_js__WEBPACK_IMPORTED_MODULE_10__.kRemovals),\n/* harmony export */   load: () => (/* reexport safe */ _methods_serialization_js__WEBPACK_IMPORTED_MODULE_6__.load),\n/* harmony export */   remove: () => (/* reexport safe */ _methods_remove_js__WEBPACK_IMPORTED_MODULE_3__.remove),\n/* harmony export */   removeMultiple: () => (/* reexport safe */ _methods_remove_js__WEBPACK_IMPORTED_MODULE_3__.removeMultiple),\n/* harmony export */   save: () => (/* reexport safe */ _methods_serialization_js__WEBPACK_IMPORTED_MODULE_6__.save),\n/* harmony export */   search: () => (/* reexport safe */ _methods_search_js__WEBPACK_IMPORTED_MODULE_4__.search),\n/* harmony export */   searchVector: () => (/* reexport safe */ _methods_search_vector_js__WEBPACK_IMPORTED_MODULE_5__.searchVector),\n/* harmony export */   update: () => (/* reexport safe */ _methods_update_js__WEBPACK_IMPORTED_MODULE_7__.update),\n/* harmony export */   updateMultiple: () => (/* reexport safe */ _methods_update_js__WEBPACK_IMPORTED_MODULE_7__.updateMultiple),\n/* harmony export */   upsert: () => (/* reexport safe */ _methods_upsert_js__WEBPACK_IMPORTED_MODULE_8__.upsert),\n/* harmony export */   upsertMultiple: () => (/* reexport safe */ _methods_upsert_js__WEBPACK_IMPORTED_MODULE_8__.upsertMultiple)\n/* harmony export */ });\n/* harmony import */ var _methods_create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./methods/create.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/create.js\");\n/* harmony import */ var _methods_docs_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./methods/docs.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/docs.js\");\n/* harmony import */ var _methods_insert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./methods/insert.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/insert.js\");\n/* harmony import */ var _methods_remove_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./methods/remove.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/remove.js\");\n/* harmony import */ var _methods_search_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./methods/search.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search.js\");\n/* harmony import */ var _methods_search_vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./methods/search-vector.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-vector.js\");\n/* harmony import */ var _methods_serialization_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./methods/serialization.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/serialization.js\");\n/* harmony import */ var _methods_update_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./methods/update.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/update.js\");\n/* harmony import */ var _methods_upsert_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./methods/upsert.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/upsert.js\");\n/* harmony import */ var _methods_answer_session_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./methods/answer-session.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/answer-session.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./types.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/types.js\");\n/* harmony import */ var _components_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components.js\");\n/* harmony import */ var _internals_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./internals.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/internals.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE2QztBQUNNO0FBQ1U7QUFDQTtBQUNoQjtBQUNhO0FBQ0Y7QUFDSztBQUNBO0FBQ0Q7QUFDakM7QUFDbUI7QUFDRjtBQUM1QyIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBjcmVhdGUgfSBmcm9tICcuL21ldGhvZHMvY3JlYXRlLmpzJztcbmV4cG9ydCB7IGNvdW50LCBnZXRCeUlEIH0gZnJvbSAnLi9tZXRob2RzL2RvY3MuanMnO1xuZXhwb3J0IHsgaW5zZXJ0LCBpbnNlcnRNdWx0aXBsZSB9IGZyb20gJy4vbWV0aG9kcy9pbnNlcnQuanMnO1xuZXhwb3J0IHsgcmVtb3ZlLCByZW1vdmVNdWx0aXBsZSB9IGZyb20gJy4vbWV0aG9kcy9yZW1vdmUuanMnO1xuZXhwb3J0IHsgc2VhcmNoIH0gZnJvbSAnLi9tZXRob2RzL3NlYXJjaC5qcyc7XG5leHBvcnQgeyBzZWFyY2hWZWN0b3IgfSBmcm9tICcuL21ldGhvZHMvc2VhcmNoLXZlY3Rvci5qcyc7XG5leHBvcnQgeyBsb2FkLCBzYXZlIH0gZnJvbSAnLi9tZXRob2RzL3NlcmlhbGl6YXRpb24uanMnO1xuZXhwb3J0IHsgdXBkYXRlLCB1cGRhdGVNdWx0aXBsZSB9IGZyb20gJy4vbWV0aG9kcy91cGRhdGUuanMnO1xuZXhwb3J0IHsgdXBzZXJ0LCB1cHNlcnRNdWx0aXBsZSB9IGZyb20gJy4vbWV0aG9kcy91cHNlcnQuanMnO1xuZXhwb3J0IHsgQW5zd2VyU2Vzc2lvbiB9IGZyb20gJy4vbWV0aG9kcy9hbnN3ZXItc2Vzc2lvbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzLmpzJztcbmV4cG9ydCAqIGFzIGNvbXBvbmVudHMgZnJvbSAnLi9jb21wb25lbnRzLmpzJztcbmV4cG9ydCAqIGFzIGludGVybmFscyBmcm9tICcuL2ludGVybmFscy5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/internals.js":
/*!*************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/internals.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   boundedLevenshtein: () => (/* reexport safe */ _components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__.boundedLevenshtein),\n/* harmony export */   convertDistanceToMeters: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.convertDistanceToMeters),\n/* harmony export */   formatBytes: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.formatBytes),\n/* harmony export */   formatNanoseconds: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.formatNanoseconds),\n/* harmony export */   getNanosecondsTime: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.getNanosecondsTime),\n/* harmony export */   normalizeToken: () => (/* reexport safe */ _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_2__.normalizeToken),\n/* harmony export */   safeArrayPush: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.safeArrayPush),\n/* harmony export */   setDifference: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.setDifference),\n/* harmony export */   setIntersection: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.setIntersection),\n/* harmony export */   setUnion: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.setUnion),\n/* harmony export */   uniqueId: () => (/* reexport safe */ _utils_js__WEBPACK_IMPORTED_MODULE_1__.uniqueId)\n/* harmony export */ });\n/* harmony import */ var _components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/levenshtein.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/levenshtein.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/tokenizer/index.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/index.js\");\n\n\n\n//# sourceMappingURL=internals.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL2ludGVybmFscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFpRTtBQUMyRztBQUMzRztBQUNqRSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9pbnRlcm5hbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgYm91bmRlZExldmVuc2h0ZWluIH0gZnJvbSAnLi9jb21wb25lbnRzL2xldmVuc2h0ZWluLmpzJztcbmV4cG9ydCB7IGZvcm1hdEJ5dGVzLCBmb3JtYXROYW5vc2Vjb25kcywgZ2V0TmFub3NlY29uZHNUaW1lLCB1bmlxdWVJZCwgY29udmVydERpc3RhbmNlVG9NZXRlcnMsIHNhZmVBcnJheVB1c2gsIHNldEludGVyc2VjdGlvbiwgc2V0VW5pb24sIHNldERpZmZlcmVuY2UgfSBmcm9tICcuL3V0aWxzLmpzJztcbmV4cG9ydCB7IG5vcm1hbGl6ZVRva2VuIH0gZnJvbSAnLi9jb21wb25lbnRzL3Rva2VuaXplci9pbmRleC5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnRlcm5hbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/internals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/answer-session.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/answer-session.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnswerSession: () => (/* binding */ AnswerSession)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./search.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search.js\");\n\n\nconst ORAMA_SECURE_PROXY_PLUGIN_NAME = 'orama-secure-proxy';\nclass AnswerSession {\n    db;\n    proxy = null;\n    config;\n    abortController = null;\n    lastInteractionParams = null;\n    chatModel = null;\n    conversationID;\n    messages = [];\n    events;\n    initPromise;\n    state = [];\n    constructor(db, config) {\n        this.db = db;\n        this.config = config;\n        this.init();\n        this.messages = config.initialMessages || [];\n        this.events = config.events || {};\n        this.conversationID = config.conversationID || this.generateRandomID();\n    }\n    async ask(query) {\n        await this.initPromise;\n        let output = '';\n        for await (const msg of await this.askStream(query)) {\n            output += msg;\n        }\n        return output;\n    }\n    async askStream(query) {\n        await this.initPromise;\n        return this.fetchAnswer(query);\n    }\n    abortAnswer() {\n        this.abortController?.abort();\n        this.state[this.state.length - 1].aborted = true;\n        this.triggerStateChange();\n    }\n    getMessages() {\n        return this.messages;\n    }\n    clearSession() {\n        this.messages = [];\n        this.state = [];\n    }\n    regenerateLast({ stream = true }) {\n        if (this.state.length === 0 || this.messages.length === 0) {\n            throw new Error('No messages to regenerate');\n        }\n        const isLastMessageAssistant = this.messages.at(-1)?.role === 'assistant';\n        if (!isLastMessageAssistant) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('ANSWER_SESSION_LAST_MESSAGE_IS_NOT_ASSISTANT');\n        }\n        this.messages.pop();\n        this.state.pop();\n        if (stream) {\n            return this.askStream(this.lastInteractionParams);\n        }\n        return this.ask(this.lastInteractionParams);\n    }\n    async *fetchAnswer(params) {\n        if (!this.chatModel) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_SECURE_PROXY_MISSING_CHAT_MODEL');\n        }\n        this.abortController = new AbortController();\n        this.lastInteractionParams = params;\n        const interactionId = this.generateRandomID();\n        this.messages.push({ role: 'user', content: params.term ?? '' });\n        this.state.push({\n            interactionId,\n            aborted: false,\n            loading: true,\n            query: params.term ?? '',\n            response: '',\n            sources: null,\n            translatedQuery: null,\n            error: false,\n            errorMessage: null\n        });\n        const stateIdx = this.state.length - 1;\n        this.addEmptyAssistantMessage();\n        this.triggerStateChange();\n        try {\n            const sources = await (0,_search_js__WEBPACK_IMPORTED_MODULE_1__.search)(this.db, params);\n            this.state[stateIdx].sources = sources;\n            this.triggerStateChange();\n            for await (const msg of this.proxy.chatStream({ model: this.chatModel, messages: this.messages })) {\n                yield msg;\n                this.state[stateIdx].response += msg;\n                this.messages.findLast((msg) => msg.role === 'assistant').content += msg;\n                this.triggerStateChange();\n            }\n        }\n        catch (err) {\n            if (err.name === 'AbortError') {\n                this.state[stateIdx].aborted = true;\n            }\n            else {\n                this.state[stateIdx].error = true;\n                this.state[stateIdx].errorMessage = err.toString();\n            }\n            this.triggerStateChange();\n        }\n        this.state[stateIdx].loading = false;\n        this.triggerStateChange();\n        return this.state[stateIdx].response;\n    }\n    generateRandomID(length = 24) {\n        return Array.from({ length }, () => Math.floor(Math.random() * 36).toString(36)).join('');\n    }\n    triggerStateChange() {\n        if (this.events.onStateChange) {\n            this.events.onStateChange(this.state);\n        }\n    }\n    async init() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const self = this;\n        async function getPlugin() {\n            return await self.db.plugins.find((plugin) => plugin.name === ORAMA_SECURE_PROXY_PLUGIN_NAME);\n        }\n        const plugin = await getPlugin();\n        if (!plugin) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_SECURE_PROXY_NOT_FOUND');\n        }\n        const pluginExtras = plugin.extra;\n        this.proxy = pluginExtras.proxy;\n        if (this.config.systemPrompt) {\n            this.messages.push({ role: 'system', content: this.config.systemPrompt });\n        }\n        if (pluginExtras?.pluginParams?.chat?.model) {\n            this.chatModel = pluginExtras.pluginParams.chat.model;\n        }\n        else {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('PLUGIN_SECURE_PROXY_MISSING_CHAT_MODEL');\n        }\n    }\n    addEmptyAssistantMessage() {\n        this.messages.push({ role: 'assistant', content: '' });\n    }\n}\n//# sourceMappingURL=answer-session.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvYW5zd2VyLXNlc3Npb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ047QUFDckM7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGVBQWU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QiwwQ0FBMEM7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msa0RBQU07QUFDeEM7QUFDQTtBQUNBLDREQUE0RCxnREFBZ0Q7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFFBQVE7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxtREFBbUQ7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsZ0NBQWdDO0FBQzdEO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9tZXRob2RzL2Fuc3dlci1zZXNzaW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IHNlYXJjaCB9IGZyb20gJy4vc2VhcmNoLmpzJztcbmNvbnN0IE9SQU1BX1NFQ1VSRV9QUk9YWV9QTFVHSU5fTkFNRSA9ICdvcmFtYS1zZWN1cmUtcHJveHknO1xuZXhwb3J0IGNsYXNzIEFuc3dlclNlc3Npb24ge1xuICAgIGRiO1xuICAgIHByb3h5ID0gbnVsbDtcbiAgICBjb25maWc7XG4gICAgYWJvcnRDb250cm9sbGVyID0gbnVsbDtcbiAgICBsYXN0SW50ZXJhY3Rpb25QYXJhbXMgPSBudWxsO1xuICAgIGNoYXRNb2RlbCA9IG51bGw7XG4gICAgY29udmVyc2F0aW9uSUQ7XG4gICAgbWVzc2FnZXMgPSBbXTtcbiAgICBldmVudHM7XG4gICAgaW5pdFByb21pc2U7XG4gICAgc3RhdGUgPSBbXTtcbiAgICBjb25zdHJ1Y3RvcihkYiwgY29uZmlnKSB7XG4gICAgICAgIHRoaXMuZGIgPSBkYjtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB0aGlzLm1lc3NhZ2VzID0gY29uZmlnLmluaXRpYWxNZXNzYWdlcyB8fCBbXTtcbiAgICAgICAgdGhpcy5ldmVudHMgPSBjb25maWcuZXZlbnRzIHx8IHt9O1xuICAgICAgICB0aGlzLmNvbnZlcnNhdGlvbklEID0gY29uZmlnLmNvbnZlcnNhdGlvbklEIHx8IHRoaXMuZ2VuZXJhdGVSYW5kb21JRCgpO1xuICAgIH1cbiAgICBhc3luYyBhc2socXVlcnkpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5pbml0UHJvbWlzZTtcbiAgICAgICAgbGV0IG91dHB1dCA9ICcnO1xuICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IG1zZyBvZiBhd2FpdCB0aGlzLmFza1N0cmVhbShxdWVyeSkpIHtcbiAgICAgICAgICAgIG91dHB1dCArPSBtc2c7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9XG4gICAgYXN5bmMgYXNrU3RyZWFtKHF1ZXJ5KSB7XG4gICAgICAgIGF3YWl0IHRoaXMuaW5pdFByb21pc2U7XG4gICAgICAgIHJldHVybiB0aGlzLmZldGNoQW5zd2VyKHF1ZXJ5KTtcbiAgICB9XG4gICAgYWJvcnRBbnN3ZXIoKSB7XG4gICAgICAgIHRoaXMuYWJvcnRDb250cm9sbGVyPy5hYm9ydCgpO1xuICAgICAgICB0aGlzLnN0YXRlW3RoaXMuc3RhdGUubGVuZ3RoIC0gMV0uYWJvcnRlZCA9IHRydWU7XG4gICAgICAgIHRoaXMudHJpZ2dlclN0YXRlQ2hhbmdlKCk7XG4gICAgfVxuICAgIGdldE1lc3NhZ2VzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tZXNzYWdlcztcbiAgICB9XG4gICAgY2xlYXJTZXNzaW9uKCkge1xuICAgICAgICB0aGlzLm1lc3NhZ2VzID0gW107XG4gICAgICAgIHRoaXMuc3RhdGUgPSBbXTtcbiAgICB9XG4gICAgcmVnZW5lcmF0ZUxhc3QoeyBzdHJlYW0gPSB0cnVlIH0pIHtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUubGVuZ3RoID09PSAwIHx8IHRoaXMubWVzc2FnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIG1lc3NhZ2VzIHRvIHJlZ2VuZXJhdGUnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpc0xhc3RNZXNzYWdlQXNzaXN0YW50ID0gdGhpcy5tZXNzYWdlcy5hdCgtMSk/LnJvbGUgPT09ICdhc3Npc3RhbnQnO1xuICAgICAgICBpZiAoIWlzTGFzdE1lc3NhZ2VBc3Npc3RhbnQpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdBTlNXRVJfU0VTU0lPTl9MQVNUX01FU1NBR0VfSVNfTk9UX0FTU0lTVEFOVCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubWVzc2FnZXMucG9wKCk7XG4gICAgICAgIHRoaXMuc3RhdGUucG9wKCk7XG4gICAgICAgIGlmIChzdHJlYW0pIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmFza1N0cmVhbSh0aGlzLmxhc3RJbnRlcmFjdGlvblBhcmFtcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuYXNrKHRoaXMubGFzdEludGVyYWN0aW9uUGFyYW1zKTtcbiAgICB9XG4gICAgYXN5bmMgKmZldGNoQW5zd2VyKHBhcmFtcykge1xuICAgICAgICBpZiAoIXRoaXMuY2hhdE1vZGVsKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignUExVR0lOX1NFQ1VSRV9QUk9YWV9NSVNTSU5HX0NIQVRfTU9ERUwnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFib3J0Q29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICAgICAgdGhpcy5sYXN0SW50ZXJhY3Rpb25QYXJhbXMgPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IGludGVyYWN0aW9uSWQgPSB0aGlzLmdlbmVyYXRlUmFuZG9tSUQoKTtcbiAgICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKHsgcm9sZTogJ3VzZXInLCBjb250ZW50OiBwYXJhbXMudGVybSA/PyAnJyB9KTtcbiAgICAgICAgdGhpcy5zdGF0ZS5wdXNoKHtcbiAgICAgICAgICAgIGludGVyYWN0aW9uSWQsXG4gICAgICAgICAgICBhYm9ydGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGxvYWRpbmc6IHRydWUsXG4gICAgICAgICAgICBxdWVyeTogcGFyYW1zLnRlcm0gPz8gJycsXG4gICAgICAgICAgICByZXNwb25zZTogJycsXG4gICAgICAgICAgICBzb3VyY2VzOiBudWxsLFxuICAgICAgICAgICAgdHJhbnNsYXRlZFF1ZXJ5OiBudWxsLFxuICAgICAgICAgICAgZXJyb3I6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3JNZXNzYWdlOiBudWxsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBzdGF0ZUlkeCA9IHRoaXMuc3RhdGUubGVuZ3RoIC0gMTtcbiAgICAgICAgdGhpcy5hZGRFbXB0eUFzc2lzdGFudE1lc3NhZ2UoKTtcbiAgICAgICAgdGhpcy50cmlnZ2VyU3RhdGVDaGFuZ2UoKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHNvdXJjZXMgPSBhd2FpdCBzZWFyY2godGhpcy5kYiwgcGFyYW1zKTtcbiAgICAgICAgICAgIHRoaXMuc3RhdGVbc3RhdGVJZHhdLnNvdXJjZXMgPSBzb3VyY2VzO1xuICAgICAgICAgICAgdGhpcy50cmlnZ2VyU3RhdGVDaGFuZ2UoKTtcbiAgICAgICAgICAgIGZvciBhd2FpdCAoY29uc3QgbXNnIG9mIHRoaXMucHJveHkuY2hhdFN0cmVhbSh7IG1vZGVsOiB0aGlzLmNoYXRNb2RlbCwgbWVzc2FnZXM6IHRoaXMubWVzc2FnZXMgfSkpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBtc2c7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZVtzdGF0ZUlkeF0ucmVzcG9uc2UgKz0gbXNnO1xuICAgICAgICAgICAgICAgIHRoaXMubWVzc2FnZXMuZmluZExhc3QoKG1zZykgPT4gbXNnLnJvbGUgPT09ICdhc3Npc3RhbnQnKS5jb250ZW50ICs9IG1zZztcbiAgICAgICAgICAgICAgICB0aGlzLnRyaWdnZXJTdGF0ZUNoYW5nZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGlmIChlcnIubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZVtzdGF0ZUlkeF0uYWJvcnRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlW3N0YXRlSWR4XS5lcnJvciA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhpcy5zdGF0ZVtzdGF0ZUlkeF0uZXJyb3JNZXNzYWdlID0gZXJyLnRvU3RyaW5nKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnRyaWdnZXJTdGF0ZUNoYW5nZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc3RhdGVbc3RhdGVJZHhdLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy50cmlnZ2VyU3RhdGVDaGFuZ2UoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGVbc3RhdGVJZHhdLnJlc3BvbnNlO1xuICAgIH1cbiAgICBnZW5lcmF0ZVJhbmRvbUlEKGxlbmd0aCA9IDI0KSB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoIH0sICgpID0+IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDM2KS50b1N0cmluZygzNikpLmpvaW4oJycpO1xuICAgIH1cbiAgICB0cmlnZ2VyU3RhdGVDaGFuZ2UoKSB7XG4gICAgICAgIGlmICh0aGlzLmV2ZW50cy5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICAgICAgICB0aGlzLmV2ZW50cy5vblN0YXRlQ2hhbmdlKHRoaXMuc3RhdGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFzeW5jIGluaXQoKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdGhpcy1hbGlhc1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgYXN5bmMgZnVuY3Rpb24gZ2V0UGx1Z2luKCkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHNlbGYuZGIucGx1Z2lucy5maW5kKChwbHVnaW4pID0+IHBsdWdpbi5uYW1lID09PSBPUkFNQV9TRUNVUkVfUFJPWFlfUExVR0lOX05BTUUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBsdWdpbiA9IGF3YWl0IGdldFBsdWdpbigpO1xuICAgICAgICBpZiAoIXBsdWdpbikge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ1BMVUdJTl9TRUNVUkVfUFJPWFlfTk9UX0ZPVU5EJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcGx1Z2luRXh0cmFzID0gcGx1Z2luLmV4dHJhO1xuICAgICAgICB0aGlzLnByb3h5ID0gcGx1Z2luRXh0cmFzLnByb3h5O1xuICAgICAgICBpZiAodGhpcy5jb25maWcuc3lzdGVtUHJvbXB0KSB7XG4gICAgICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goeyByb2xlOiAnc3lzdGVtJywgY29udGVudDogdGhpcy5jb25maWcuc3lzdGVtUHJvbXB0IH0pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwbHVnaW5FeHRyYXM/LnBsdWdpblBhcmFtcz8uY2hhdD8ubW9kZWwpIHtcbiAgICAgICAgICAgIHRoaXMuY2hhdE1vZGVsID0gcGx1Z2luRXh0cmFzLnBsdWdpblBhcmFtcy5jaGF0Lm1vZGVsO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ1BMVUdJTl9TRUNVUkVfUFJPWFlfTUlTU0lOR19DSEFUX01PREVMJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkRW1wdHlBc3Npc3RhbnRNZXNzYWdlKCkge1xuICAgICAgICB0aGlzLm1lc3NhZ2VzLnB1c2goeyByb2xlOiAnYXNzaXN0YW50JywgY29udGVudDogJycgfSk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW5zd2VyLXNlc3Npb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/answer-session.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/create.js":
/*!******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/create.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   create: () => (/* binding */ create)\n/* harmony export */ });\n/* harmony import */ var _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/defaults.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/defaults.js\");\n/* harmony import */ var _components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/documents-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/documents-store.js\");\n/* harmony import */ var _components_plugins_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/plugins.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/plugins.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n/* harmony import */ var _components_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/index.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/index.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n/* harmony import */ var _components_sorter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/sorter.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/sorter.js\");\n/* harmony import */ var _components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/tokenizer/index.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/tokenizer/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\n\n\n\n\n\n\n\n\n\nfunction validateComponents(components) {\n    const defaultComponents = {\n        formatElapsedTime: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.formatElapsedTime,\n        getDocumentIndexId: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIndexId,\n        getDocumentProperties: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentProperties,\n        validateSchema: _components_defaults_js__WEBPACK_IMPORTED_MODULE_0__.validateSchema\n    };\n    for (const rawKey of _components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.FUNCTION_COMPONENTS) {\n        const key = rawKey;\n        if (components[key]) {\n            if (typeof components[key] !== 'function') {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('COMPONENT_MUST_BE_FUNCTION', key);\n            }\n        }\n        else {\n            // @ts-expect-error TSC is unable to resolve this\n            components[key] = defaultComponents[key];\n        }\n    }\n    for (const rawKey of Object.keys(components)) {\n        if (!_components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.OBJECT_COMPONENTS.includes(rawKey) && !_components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.FUNCTION_COMPONENTS.includes(rawKey)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('UNSUPPORTED_COMPONENT', rawKey);\n        }\n    }\n}\nfunction create({ schema, sort, language, components, id, plugins }) {\n    if (!components) {\n        components = {};\n    }\n    for (const plugin of plugins ?? []) {\n        if (!('getComponents' in plugin)) {\n            continue;\n        }\n        if (typeof plugin.getComponents !== 'function') {\n            continue;\n        }\n        const pluginComponents = plugin.getComponents(schema);\n        const keys = Object.keys(pluginComponents);\n        for (const key of keys) {\n            if (components[key]) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('PLUGIN_COMPONENT_CONFLICT', key, plugin.name);\n            }\n        }\n        components = {\n            ...components,\n            ...pluginComponents\n        };\n    }\n    if (!id) {\n        id = (0,_utils_js__WEBPACK_IMPORTED_MODULE_9__.uniqueId)();\n    }\n    let tokenizer = components.tokenizer;\n    let index = components.index;\n    let documentsStore = components.documentsStore;\n    let sorter = components.sorter;\n    if (!tokenizer) {\n        // Use the default tokenizer\n        tokenizer = (0,_components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.createTokenizer)({ language: language ?? 'english' });\n    }\n    else if (!tokenizer.tokenize) {\n        // If there is no tokenizer function, we assume this is a TokenizerConfig\n        tokenizer = (0,_components_tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.createTokenizer)(tokenizer);\n    }\n    else {\n        const customTokenizer = tokenizer;\n        tokenizer = customTokenizer;\n    }\n    if (components.tokenizer && language) {\n        // Accept language only if a tokenizer is not provided\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_8__.createError)('NO_LANGUAGE_WITH_CUSTOM_TOKENIZER');\n    }\n    const internalDocumentStore = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_5__.createInternalDocumentIDStore)();\n    index ||= (0,_components_index_js__WEBPACK_IMPORTED_MODULE_4__.createIndex)();\n    sorter ||= (0,_components_sorter_js__WEBPACK_IMPORTED_MODULE_6__.createSorter)();\n    documentsStore ||= (0,_components_documents_store_js__WEBPACK_IMPORTED_MODULE_1__.createDocumentsStore)();\n    // Validate all other components\n    validateComponents(components);\n    // Assign only recognized components and hooks\n    const { getDocumentProperties, getDocumentIndexId, validateSchema, formatElapsedTime } = components;\n    const orama = {\n        data: {},\n        caches: {},\n        schema,\n        tokenizer,\n        index,\n        sorter,\n        documentsStore,\n        internalDocumentIDStore: internalDocumentStore,\n        getDocumentProperties,\n        getDocumentIndexId,\n        validateSchema,\n        beforeInsert: [],\n        afterInsert: [],\n        beforeRemove: [],\n        afterRemove: [],\n        beforeUpdate: [],\n        afterUpdate: [],\n        beforeUpsert: [],\n        afterUpsert: [],\n        beforeSearch: [],\n        afterSearch: [],\n        beforeInsertMultiple: [],\n        afterInsertMultiple: [],\n        beforeRemoveMultiple: [],\n        afterRemoveMultiple: [],\n        beforeUpdateMultiple: [],\n        afterUpdateMultiple: [],\n        beforeUpsertMultiple: [],\n        afterUpsertMultiple: [],\n        afterCreate: [],\n        formatElapsedTime,\n        id,\n        plugins,\n        version: getVersion()\n    };\n    orama.data = {\n        index: orama.index.create(orama, internalDocumentStore, schema),\n        docs: orama.documentsStore.create(orama, internalDocumentStore),\n        sorting: orama.sorter.create(orama, internalDocumentStore, schema, sort)\n    };\n    for (const hook of _components_plugins_js__WEBPACK_IMPORTED_MODULE_2__.AVAILABLE_PLUGIN_HOOKS) {\n        orama[hook] = (orama[hook] ?? []).concat((0,_components_plugins_js__WEBPACK_IMPORTED_MODULE_2__.getAllPluginsByHook)(orama, hook));\n    }\n    const afterCreate = orama['afterCreate'];\n    if (afterCreate) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_3__.runAfterCreate)(afterCreate, orama);\n    }\n    return orama;\n}\nfunction getVersion() {\n    return '{{VERSION}}';\n}\n//# sourceMappingURL=create.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/create.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/docs.js":
/*!****************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/docs.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   count: () => (/* binding */ count),\n/* harmony export */   getByID: () => (/* binding */ getByID)\n/* harmony export */ });\nfunction getByID(db, id) {\n    return db.documentsStore.get(db.data.docs, id);\n}\nfunction count(db) {\n    return db.documentsStore.count(db.data.docs);\n}\n//# sourceMappingURL=docs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvZG9jcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvZG9jcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2V0QnlJRChkYiwgaWQpIHtcbiAgICByZXR1cm4gZGIuZG9jdW1lbnRzU3RvcmUuZ2V0KGRiLmRhdGEuZG9jcywgaWQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvdW50KGRiKSB7XG4gICAgcmV0dXJuIGRiLmRvY3VtZW50c1N0b3JlLmNvdW50KGRiLmRhdGEuZG9jcyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kb2NzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/docs.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/insert.js":
/*!******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/insert.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   innerInsertMultiple: () => (/* binding */ innerInsertMultiple),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertMultiple: () => (/* binding */ insertMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n\n\n\n\n\nfunction insert(orama, doc, language, skipHooks, options) {\n    const errorProperty = orama.validateSchema(doc, orama.schema);\n    if (errorProperty) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n    }\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return innerInsertAsync(orama, doc, language, skipHooks, options);\n    }\n    return innerInsertSync(orama, doc, language, skipHooks, options);\n}\nconst ENUM_TYPE = new Set(['enum', 'enum[]']);\nconst STRING_NUMBER_TYPE = new Set(['string', 'number']);\nasync function innerInsertAsync(orama, doc, language, skipHooks, options) {\n    const { index, docs } = orama.data;\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    if (!orama.documentsStore.store(docs, id, internalId, doc)) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ALREADY_EXISTS', id);\n    }\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.beforeInsert, orama, id, doc);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const indexableValues = orama.getDocumentProperties(doc, indexableProperties);\n    for (const [key, value] of Object.entries(indexableValues)) {\n        if (typeof value === 'undefined')\n            continue;\n        const actualType = typeof value;\n        const expectedType = indexablePropertiesWithTypes[key];\n        validateDocumentProperty(actualType, expectedType, key, value);\n    }\n    await indexAndSortDocument(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.afterInsert, orama, id, doc);\n    }\n    return id;\n}\nfunction innerInsertSync(orama, doc, language, skipHooks, options) {\n    const { index, docs } = orama.data;\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    if (!orama.documentsStore.store(docs, id, internalId, doc)) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('DOCUMENT_ALREADY_EXISTS', id);\n    }\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.beforeInsert, orama, id, doc);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const indexableValues = orama.getDocumentProperties(doc, indexableProperties);\n    for (const [key, value] of Object.entries(indexableValues)) {\n        if (typeof value === 'undefined')\n            continue;\n        const actualType = typeof value;\n        const expectedType = indexablePropertiesWithTypes[key];\n        validateDocumentProperty(actualType, expectedType, key, value);\n    }\n    indexAndSortDocumentSync(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runSingleHook)(orama.afterInsert, orama, id, doc);\n    }\n    return id;\n}\nfunction validateDocumentProperty(actualType, expectedType, key, value) {\n    if ((0,_components_js__WEBPACK_IMPORTED_MODULE_0__.isGeoPointType)(expectedType) &&\n        typeof value === 'object' &&\n        typeof value.lon === 'number' &&\n        typeof value.lat === 'number') {\n        return;\n    }\n    if ((0,_components_js__WEBPACK_IMPORTED_MODULE_0__.isVectorType)(expectedType) && Array.isArray(value))\n        return;\n    if ((0,_components_js__WEBPACK_IMPORTED_MODULE_0__.isArrayType)(expectedType) && Array.isArray(value))\n        return;\n    if (ENUM_TYPE.has(expectedType) && STRING_NUMBER_TYPE.has(actualType))\n        return;\n    if (actualType !== expectedType) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_3__.createError)('INVALID_DOCUMENT_PROPERTY', key, expectedType, actualType);\n    }\n}\nasync function indexAndSortDocument(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options) {\n    for (const prop of indexableProperties) {\n        const value = indexableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.index.getSearchablePropertiesWithTypes(orama.data.index)[prop];\n        await orama.index.beforeInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n        const internalId = orama.internalDocumentIDStore.idToInternalId.get(id);\n        await orama.index.insert(orama.index, orama.data.index, prop, id, internalId, value, expectedType, language, orama.tokenizer, docsCount, options);\n        await orama.index.afterInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        const value = sortableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.sorter.getSortablePropertiesWithTypes(orama.data.sorting)[prop];\n        orama.sorter.insert(orama.data.sorting, prop, id, value, expectedType, language);\n    }\n}\nfunction indexAndSortDocumentSync(orama, id, indexableProperties, indexableValues, docsCount, language, doc, options) {\n    for (const prop of indexableProperties) {\n        const value = indexableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.index.getSearchablePropertiesWithTypes(orama.data.index)[prop];\n        const internalDocumentId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n        orama.index.beforeInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n        orama.index.insert(orama.index, orama.data.index, prop, id, internalDocumentId, value, expectedType, language, orama.tokenizer, docsCount, options);\n        orama.index.afterInsert?.(orama.data.index, prop, id, value, expectedType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        const value = sortableValues[prop];\n        if (typeof value === 'undefined')\n            continue;\n        const expectedType = orama.sorter.getSortablePropertiesWithTypes(orama.data.sorting)[prop];\n        orama.sorter.insert(orama.data.sorting, prop, id, value, expectedType, language);\n    }\n}\nfunction insertMultiple(orama, docs, batchSize, language, skipHooks, timeout) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.afterInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.beforeInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return innerInsertMultipleAsync(orama, docs, batchSize, language, skipHooks, timeout);\n    }\n    return innerInsertMultipleSync(orama, docs, batchSize, language, skipHooks, timeout);\n}\nasync function innerInsertMultipleAsync(orama, docs, batchSize = 1000, language, skipHooks, timeout = 0) {\n    const ids = [];\n    const processNextBatch = async (startIndex) => {\n        const endIndex = Math.min(startIndex + batchSize, docs.length);\n        const batch = docs.slice(startIndex, endIndex);\n        for (const doc of batch) {\n            const options = { avlRebalanceThreshold: batch.length };\n            const id = await insert(orama, doc, language, skipHooks, options);\n            ids.push(id);\n        }\n        return endIndex;\n    };\n    const processAllBatches = async () => {\n        let currentIndex = 0;\n        while (currentIndex < docs.length) {\n            const startTime = Date.now();\n            currentIndex = await processNextBatch(currentIndex);\n            if (timeout > 0) {\n                const elapsedTime = Date.now() - startTime;\n                const waitTime = timeout - elapsedTime;\n                if (waitTime > 0) {\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sleep)(waitTime);\n                }\n            }\n        }\n    };\n    await processAllBatches();\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runMultipleHook)(orama.afterInsertMultiple, orama, docs);\n    }\n    return ids;\n}\nfunction innerInsertMultipleSync(orama, docs, batchSize = 1000, language, skipHooks, timeout = 0) {\n    const ids = [];\n    let i = 0;\n    function processNextBatch() {\n        const batch = docs.slice(i * batchSize, (i + 1) * batchSize);\n        if (batch.length === 0)\n            return false;\n        for (const doc of batch) {\n            const options = { avlRebalanceThreshold: batch.length };\n            const id = insert(orama, doc, language, skipHooks, options);\n            ids.push(id);\n        }\n        i++;\n        return true;\n    }\n    function processAllBatches() {\n        const startTime = Date.now();\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const hasMoreBatches = processNextBatch();\n            if (!hasMoreBatches)\n                break;\n            if (timeout > 0) {\n                const elapsedTime = Date.now() - startTime;\n                if (elapsedTime >= timeout) {\n                    const remainingTime = timeout - (elapsedTime % timeout);\n                    if (remainingTime > 0) {\n                        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sleep)(remainingTime);\n                    }\n                }\n            }\n        }\n    }\n    processAllBatches();\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runMultipleHook)(orama.afterInsertMultiple, orama, docs);\n    }\n    return ids;\n}\nfunction innerInsertMultiple(orama, docs, batchSize, language, skipHooks, timeout) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return innerInsertMultipleAsync(orama, docs, batchSize, language, skipHooks, timeout);\n    }\n    return innerInsertMultipleSync(orama, docs, batchSize, language, skipHooks, timeout);\n}\n//# sourceMappingURL=insert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/insert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/remove.js":
/*!******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/remove.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   removeMultiple: () => (/* binding */ removeMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\n\n\nfunction remove(orama, id, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.remove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.afterRemove);\n    if (asyncNeeded) {\n        return removeAsync(orama, id, language, skipHooks);\n    }\n    return removeSync(orama, id, language, skipHooks);\n}\nasync function removeAsync(orama, id, language, skipHooks) {\n    let result = true;\n    const { index, docs } = orama.data;\n    const doc = orama.documentsStore.get(docs, id);\n    if (!doc) {\n        return false;\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    const docId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, internalId);\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeRemove, orama, docId);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const values = orama.getDocumentProperties(doc, indexableProperties);\n    for (const prop of indexableProperties) {\n        const value = values[prop];\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        const schemaType = indexablePropertiesWithTypes[prop];\n        await orama.index.beforeRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n        if (!(await orama.index.remove(orama.index, orama.data.index, prop, id, internalId, value, schemaType, language, orama.tokenizer, docsCount))) {\n            result = false;\n        }\n        await orama.index.afterRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = await orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = await orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        if (typeof sortableValues[prop] === 'undefined') {\n            continue;\n        }\n        orama.sorter.remove(orama.data.sorting, prop, id);\n    }\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterRemove, orama, docId);\n    }\n    orama.documentsStore.remove(orama.data.docs, id, internalId);\n    return result;\n}\nfunction removeSync(orama, id, language, skipHooks) {\n    let result = true;\n    const { index, docs } = orama.data;\n    const doc = orama.documentsStore.get(docs, id);\n    if (!doc) {\n        return false;\n    }\n    const internalId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id);\n    const docId = (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, internalId);\n    const docsCount = orama.documentsStore.count(docs);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeRemove, orama, docId);\n    }\n    const indexableProperties = orama.index.getSearchableProperties(index);\n    const indexablePropertiesWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n    const values = orama.getDocumentProperties(doc, indexableProperties);\n    for (const prop of indexableProperties) {\n        const value = values[prop];\n        if (typeof value === 'undefined') {\n            continue;\n        }\n        const schemaType = indexablePropertiesWithTypes[prop];\n        orama.index.beforeRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n        if (!orama.index.remove(orama.index, orama.data.index, prop, id, internalId, value, schemaType, language, orama.tokenizer, docsCount)) {\n            result = false;\n        }\n        orama.index.afterRemove?.(orama.data.index, prop, docId, value, schemaType, language, orama.tokenizer, docsCount);\n    }\n    const sortableProperties = orama.sorter.getSortableProperties(orama.data.sorting);\n    const sortableValues = orama.getDocumentProperties(doc, sortableProperties);\n    for (const prop of sortableProperties) {\n        if (typeof sortableValues[prop] === 'undefined') {\n            continue;\n        }\n        orama.sorter.remove(orama.data.sorting, prop, id);\n    }\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterRemove, orama, docId);\n    }\n    orama.documentsStore.remove(orama.data.docs, id, internalId);\n    return result;\n}\nfunction removeMultiple(orama, ids, batchSize, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.remove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.index.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.beforeRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.isAsyncFunction)(orama.afterRemoveMultiple);\n    if (asyncNeeded) {\n        return removeMultipleAsync(orama, ids, batchSize, language, skipHooks);\n    }\n    return removeMultipleSync(orama, ids, batchSize, language, skipHooks);\n}\nasync function removeMultipleAsync(orama, ids, batchSize, language, skipHooks) {\n    let result = 0;\n    if (!batchSize) {\n        batchSize = 1000;\n    }\n    const docIdsForHooks = skipHooks\n        ? []\n        : ids.map((id) => (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id)));\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeRemoveMultiple, orama, docIdsForHooks);\n    }\n    await new Promise((resolve, reject) => {\n        let i = 0;\n        async function _removeMultiple() {\n            const batch = ids.slice(i * batchSize, ++i * batchSize);\n            if (!batch.length) {\n                return resolve();\n            }\n            for (const doc of batch) {\n                try {\n                    if (await remove(orama, doc, language, skipHooks)) {\n                        result++;\n                    }\n                }\n                catch (err) {\n                    reject(err);\n                }\n            }\n            setTimeout(_removeMultiple, 0);\n        }\n        setTimeout(_removeMultiple, 0);\n    });\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterRemoveMultiple, orama, docIdsForHooks);\n    }\n    return result;\n}\nfunction removeMultipleSync(orama, ids, batchSize, language, skipHooks) {\n    let result = 0;\n    if (!batchSize) {\n        batchSize = 1000;\n    }\n    const docIdsForHooks = skipHooks\n        ? []\n        : ids.map((id) => (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_1__.getInternalDocumentId)(orama.internalDocumentIDStore, id)));\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeRemoveMultiple, orama, docIdsForHooks);\n    }\n    let i = 0;\n    function _removeMultipleSync() {\n        const batch = ids.slice(i * batchSize, ++i * batchSize);\n        if (!batch.length)\n            return;\n        for (const doc of batch) {\n            if (remove(orama, doc, language, skipHooks)) {\n                result++;\n            }\n        }\n        setTimeout(_removeMultipleSync, 0);\n    }\n    _removeMultipleSync();\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterRemoveMultiple, orama, docIdsForHooks);\n    }\n    return result;\n}\n//# sourceMappingURL=remove.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/remove.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-fulltext.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/search-fulltext.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultBM25Params: () => (/* binding */ defaultBM25Params),\n/* harmony export */   fullTextSearch: () => (/* binding */ fullTextSearch),\n/* harmony export */   innerFullTextSearch: () => (/* binding */ innerFullTextSearch)\n/* harmony export */ });\n/* harmony import */ var _components_facets_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/facets.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/facets.js\");\n/* harmony import */ var _components_groups_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/groups.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/groups.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _docs_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./docs.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/docs.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./search.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search.js\");\n\n\n\n\n\n\n\n\nfunction innerFullTextSearch(orama, params, language) {\n    const { term, properties } = params;\n    const index = orama.data.index;\n    // Get searchable string properties\n    let propertiesToSearch = orama.caches['propertiesToSearch'];\n    if (!propertiesToSearch) {\n        const propertiesToSearchWithTypes = orama.index.getSearchablePropertiesWithTypes(index);\n        propertiesToSearch = orama.index.getSearchableProperties(index);\n        propertiesToSearch = propertiesToSearch.filter((prop) => propertiesToSearchWithTypes[prop].startsWith('string'));\n        orama.caches['propertiesToSearch'] = propertiesToSearch;\n    }\n    if (properties && properties !== '*') {\n        for (const prop of properties) {\n            if (!propertiesToSearch.includes(prop)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_4__.createError)('UNKNOWN_INDEX', prop, propertiesToSearch.join(', '));\n            }\n        }\n        propertiesToSearch = propertiesToSearch.filter((prop) => properties.includes(prop));\n    }\n    // If filters are enabled, we need to get the IDs of the documents that match the filters.\n    const hasFilters = Object.keys(params.where ?? {}).length > 0;\n    let whereFiltersIDs;\n    if (hasFilters) {\n        whereFiltersIDs = orama.index.searchByWhereClause(index, orama.tokenizer, params.where, language);\n    }\n    let uniqueDocsIDs;\n    // We need to perform the search if:\n    // - we have a search term\n    // - or we have properties to search\n    //   in this case, we need to return all the documents that contains at least one of the given properties\n    const threshold = params.threshold !== undefined && params.threshold !== null ? params.threshold : 1;\n    if (term || properties) {\n        const docsCount = (0,_docs_js__WEBPACK_IMPORTED_MODULE_6__.count)(orama);\n        uniqueDocsIDs = orama.index.search(index, term || '', orama.tokenizer, language, propertiesToSearch, params.exact || false, params.tolerance || 0, params.boost || {}, applyDefault(params.relevance), docsCount, whereFiltersIDs, threshold);\n    }\n    else {\n        // Tokenizer returns empty array and the search term is empty as well.\n        // We return all the documents.\n        const docIds = whereFiltersIDs\n            ? Array.from(whereFiltersIDs)\n            : Object.keys(orama.documentsStore.getAll(orama.data.docs));\n        uniqueDocsIDs = docIds.map((k) => [+k, 0]);\n    }\n    return uniqueDocsIDs;\n}\nfunction fullTextSearch(orama, params, language) {\n    const timeStart = (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getNanosecondsTime)();\n    function performSearchLogic() {\n        const vectorProperties = Object.keys(orama.data.index.vectorIndexes);\n        const shouldCalculateFacets = params.facets && Object.keys(params.facets).length > 0;\n        const { limit = 10, offset = 0, distinctOn, includeVectors = false } = params;\n        const isPreflight = params.preflight === true;\n        let uniqueDocsArray = innerFullTextSearch(orama, params, language);\n        if (params.sortBy) {\n            if (typeof params.sortBy === 'function') {\n                const ids = uniqueDocsArray.map(([id]) => id);\n                const docs = orama.documentsStore.getMultiple(orama.data.docs, ids);\n                const docsWithIdAndScore = docs.map((d, i) => [\n                    uniqueDocsArray[i][0],\n                    uniqueDocsArray[i][1],\n                    d\n                ]);\n                docsWithIdAndScore.sort(params.sortBy);\n                uniqueDocsArray = docsWithIdAndScore.map(([id, score]) => [id, score]);\n            }\n            else {\n                uniqueDocsArray = orama.sorter\n                    .sortBy(orama.data.sorting, uniqueDocsArray, params.sortBy)\n                    .map(([id, score]) => [(0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_3__.getInternalDocumentId)(orama.internalDocumentIDStore, id), score]);\n            }\n        }\n        else {\n            uniqueDocsArray = uniqueDocsArray.sort(_utils_js__WEBPACK_IMPORTED_MODULE_5__.sortTokenScorePredicate);\n        }\n        let results;\n        if (!isPreflight) {\n            results = distinctOn\n                ? (0,_search_js__WEBPACK_IMPORTED_MODULE_7__.fetchDocumentsWithDistinct)(orama, uniqueDocsArray, offset, limit, distinctOn)\n                : (0,_search_js__WEBPACK_IMPORTED_MODULE_7__.fetchDocuments)(orama, uniqueDocsArray, offset, limit);\n        }\n        const searchResult = {\n            elapsed: {\n                formatted: '',\n                raw: 0\n            },\n            hits: [],\n            count: uniqueDocsArray.length\n        };\n        if (typeof results !== 'undefined') {\n            searchResult.hits = results.filter(Boolean);\n            if (!includeVectors) {\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.removeVectorsFromHits)(searchResult, vectorProperties);\n            }\n        }\n        if (shouldCalculateFacets) {\n            const facets = (0,_components_facets_js__WEBPACK_IMPORTED_MODULE_0__.getFacets)(orama, uniqueDocsArray, params.facets);\n            searchResult.facets = facets;\n        }\n        if (params.groupBy) {\n            searchResult.groups = (0,_components_groups_js__WEBPACK_IMPORTED_MODULE_1__.getGroups)(orama, uniqueDocsArray, params.groupBy);\n        }\n        searchResult.elapsed = orama.formatElapsedTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.getNanosecondsTime)() - timeStart);\n        return searchResult;\n    }\n    async function executeSearchAsync() {\n        if (orama.beforeSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runBeforeSearch)(orama.beforeSearch, orama, params, language);\n        }\n        const searchResult = performSearchLogic();\n        if (orama.afterSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_2__.runAfterSearch)(orama.afterSearch, orama, params, language, searchResult);\n        }\n        return searchResult;\n    }\n    const asyncNeeded = orama.beforeSearch?.length || orama.afterSearch?.length;\n    if (asyncNeeded) {\n        return executeSearchAsync();\n    }\n    return performSearchLogic();\n}\nconst defaultBM25Params = {\n    k: 1.2,\n    b: 0.75,\n    d: 0.5\n};\nfunction applyDefault(bm25Relevance) {\n    const r = bm25Relevance ?? {};\n    r.k = r.k ?? defaultBM25Params.k;\n    r.b = r.b ?? defaultBM25Params.b;\n    r.d = r.d ?? defaultBM25Params.d;\n    return r;\n}\n//# sourceMappingURL=search-fulltext.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvc2VhcmNoLWZ1bGx0ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW9EO0FBQ0E7QUFDcUI7QUFDVztBQUN6QztBQUNzRDtBQUMvRDtBQUN1QztBQUNsRTtBQUNQLFlBQVksbUJBQW1CO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix1REFBVztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsK0NBQUs7QUFDL0IsNktBQTZLO0FBQzdLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLHNCQUFzQiw2REFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZEQUE2RDtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGdHQUFxQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsOERBQXVCO0FBQzFFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNFQUEwQjtBQUM1QyxrQkFBa0IsMERBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0VBQXFCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixnRUFBUztBQUNwQztBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsZ0VBQVM7QUFDM0M7QUFDQSx1REFBdUQsNkRBQWtCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHFFQUFlO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixvRUFBYztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9tZXRob2RzL3NlYXJjaC1mdWxsdGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRGYWNldHMgfSBmcm9tICcuLi9jb21wb25lbnRzL2ZhY2V0cy5qcyc7XG5pbXBvcnQgeyBnZXRHcm91cHMgfSBmcm9tICcuLi9jb21wb25lbnRzL2dyb3Vwcy5qcyc7XG5pbXBvcnQgeyBydW5BZnRlclNlYXJjaCwgcnVuQmVmb3JlU2VhcmNoIH0gZnJvbSAnLi4vY29tcG9uZW50cy9ob29rcy5qcyc7XG5pbXBvcnQgeyBnZXRJbnRlcm5hbERvY3VtZW50SWQgfSBmcm9tICcuLi9jb21wb25lbnRzL2ludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzJztcbmltcG9ydCB7IGNyZWF0ZUVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGdldE5hbm9zZWNvbmRzVGltZSwgcmVtb3ZlVmVjdG9yc0Zyb21IaXRzLCBzb3J0VG9rZW5TY29yZVByZWRpY2F0ZSB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB7IGNvdW50IH0gZnJvbSAnLi9kb2NzLmpzJztcbmltcG9ydCB7IGZldGNoRG9jdW1lbnRzLCBmZXRjaERvY3VtZW50c1dpdGhEaXN0aW5jdCB9IGZyb20gJy4vc2VhcmNoLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBpbm5lckZ1bGxUZXh0U2VhcmNoKG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlKSB7XG4gICAgY29uc3QgeyB0ZXJtLCBwcm9wZXJ0aWVzIH0gPSBwYXJhbXM7XG4gICAgY29uc3QgaW5kZXggPSBvcmFtYS5kYXRhLmluZGV4O1xuICAgIC8vIEdldCBzZWFyY2hhYmxlIHN0cmluZyBwcm9wZXJ0aWVzXG4gICAgbGV0IHByb3BlcnRpZXNUb1NlYXJjaCA9IG9yYW1hLmNhY2hlc1sncHJvcGVydGllc1RvU2VhcmNoJ107XG4gICAgaWYgKCFwcm9wZXJ0aWVzVG9TZWFyY2gpIHtcbiAgICAgICAgY29uc3QgcHJvcGVydGllc1RvU2VhcmNoV2l0aFR5cGVzID0gb3JhbWEuaW5kZXguZ2V0U2VhcmNoYWJsZVByb3BlcnRpZXNXaXRoVHlwZXMoaW5kZXgpO1xuICAgICAgICBwcm9wZXJ0aWVzVG9TZWFyY2ggPSBvcmFtYS5pbmRleC5nZXRTZWFyY2hhYmxlUHJvcGVydGllcyhpbmRleCk7XG4gICAgICAgIHByb3BlcnRpZXNUb1NlYXJjaCA9IHByb3BlcnRpZXNUb1NlYXJjaC5maWx0ZXIoKHByb3ApID0+IHByb3BlcnRpZXNUb1NlYXJjaFdpdGhUeXBlc1twcm9wXS5zdGFydHNXaXRoKCdzdHJpbmcnKSk7XG4gICAgICAgIG9yYW1hLmNhY2hlc1sncHJvcGVydGllc1RvU2VhcmNoJ10gPSBwcm9wZXJ0aWVzVG9TZWFyY2g7XG4gICAgfVxuICAgIGlmIChwcm9wZXJ0aWVzICYmIHByb3BlcnRpZXMgIT09ICcqJykge1xuICAgICAgICBmb3IgKGNvbnN0IHByb3Agb2YgcHJvcGVydGllcykge1xuICAgICAgICAgICAgaWYgKCFwcm9wZXJ0aWVzVG9TZWFyY2guaW5jbHVkZXMocHJvcCkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignVU5LTk9XTl9JTkRFWCcsIHByb3AsIHByb3BlcnRpZXNUb1NlYXJjaC5qb2luKCcsICcpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBwcm9wZXJ0aWVzVG9TZWFyY2ggPSBwcm9wZXJ0aWVzVG9TZWFyY2guZmlsdGVyKChwcm9wKSA9PiBwcm9wZXJ0aWVzLmluY2x1ZGVzKHByb3ApKTtcbiAgICB9XG4gICAgLy8gSWYgZmlsdGVycyBhcmUgZW5hYmxlZCwgd2UgbmVlZCB0byBnZXQgdGhlIElEcyBvZiB0aGUgZG9jdW1lbnRzIHRoYXQgbWF0Y2ggdGhlIGZpbHRlcnMuXG4gICAgY29uc3QgaGFzRmlsdGVycyA9IE9iamVjdC5rZXlzKHBhcmFtcy53aGVyZSA/PyB7fSkubGVuZ3RoID4gMDtcbiAgICBsZXQgd2hlcmVGaWx0ZXJzSURzO1xuICAgIGlmIChoYXNGaWx0ZXJzKSB7XG4gICAgICAgIHdoZXJlRmlsdGVyc0lEcyA9IG9yYW1hLmluZGV4LnNlYXJjaEJ5V2hlcmVDbGF1c2UoaW5kZXgsIG9yYW1hLnRva2VuaXplciwgcGFyYW1zLndoZXJlLCBsYW5ndWFnZSk7XG4gICAgfVxuICAgIGxldCB1bmlxdWVEb2NzSURzO1xuICAgIC8vIFdlIG5lZWQgdG8gcGVyZm9ybSB0aGUgc2VhcmNoIGlmOlxuICAgIC8vIC0gd2UgaGF2ZSBhIHNlYXJjaCB0ZXJtXG4gICAgLy8gLSBvciB3ZSBoYXZlIHByb3BlcnRpZXMgdG8gc2VhcmNoXG4gICAgLy8gICBpbiB0aGlzIGNhc2UsIHdlIG5lZWQgdG8gcmV0dXJuIGFsbCB0aGUgZG9jdW1lbnRzIHRoYXQgY29udGFpbnMgYXQgbGVhc3Qgb25lIG9mIHRoZSBnaXZlbiBwcm9wZXJ0aWVzXG4gICAgY29uc3QgdGhyZXNob2xkID0gcGFyYW1zLnRocmVzaG9sZCAhPT0gdW5kZWZpbmVkICYmIHBhcmFtcy50aHJlc2hvbGQgIT09IG51bGwgPyBwYXJhbXMudGhyZXNob2xkIDogMTtcbiAgICBpZiAodGVybSB8fCBwcm9wZXJ0aWVzKSB7XG4gICAgICAgIGNvbnN0IGRvY3NDb3VudCA9IGNvdW50KG9yYW1hKTtcbiAgICAgICAgdW5pcXVlRG9jc0lEcyA9IG9yYW1hLmluZGV4LnNlYXJjaChpbmRleCwgdGVybSB8fCAnJywgb3JhbWEudG9rZW5pemVyLCBsYW5ndWFnZSwgcHJvcGVydGllc1RvU2VhcmNoLCBwYXJhbXMuZXhhY3QgfHwgZmFsc2UsIHBhcmFtcy50b2xlcmFuY2UgfHwgMCwgcGFyYW1zLmJvb3N0IHx8IHt9LCBhcHBseURlZmF1bHQocGFyYW1zLnJlbGV2YW5jZSksIGRvY3NDb3VudCwgd2hlcmVGaWx0ZXJzSURzLCB0aHJlc2hvbGQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gVG9rZW5pemVyIHJldHVybnMgZW1wdHkgYXJyYXkgYW5kIHRoZSBzZWFyY2ggdGVybSBpcyBlbXB0eSBhcyB3ZWxsLlxuICAgICAgICAvLyBXZSByZXR1cm4gYWxsIHRoZSBkb2N1bWVudHMuXG4gICAgICAgIGNvbnN0IGRvY0lkcyA9IHdoZXJlRmlsdGVyc0lEc1xuICAgICAgICAgICAgPyBBcnJheS5mcm9tKHdoZXJlRmlsdGVyc0lEcylcbiAgICAgICAgICAgIDogT2JqZWN0LmtleXMob3JhbWEuZG9jdW1lbnRzU3RvcmUuZ2V0QWxsKG9yYW1hLmRhdGEuZG9jcykpO1xuICAgICAgICB1bmlxdWVEb2NzSURzID0gZG9jSWRzLm1hcCgoaykgPT4gWytrLCAwXSk7XG4gICAgfVxuICAgIHJldHVybiB1bmlxdWVEb2NzSURzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZ1bGxUZXh0U2VhcmNoKG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlKSB7XG4gICAgY29uc3QgdGltZVN0YXJ0ID0gZ2V0TmFub3NlY29uZHNUaW1lKCk7XG4gICAgZnVuY3Rpb24gcGVyZm9ybVNlYXJjaExvZ2ljKCkge1xuICAgICAgICBjb25zdCB2ZWN0b3JQcm9wZXJ0aWVzID0gT2JqZWN0LmtleXMob3JhbWEuZGF0YS5pbmRleC52ZWN0b3JJbmRleGVzKTtcbiAgICAgICAgY29uc3Qgc2hvdWxkQ2FsY3VsYXRlRmFjZXRzID0gcGFyYW1zLmZhY2V0cyAmJiBPYmplY3Qua2V5cyhwYXJhbXMuZmFjZXRzKS5sZW5ndGggPiAwO1xuICAgICAgICBjb25zdCB7IGxpbWl0ID0gMTAsIG9mZnNldCA9IDAsIGRpc3RpbmN0T24sIGluY2x1ZGVWZWN0b3JzID0gZmFsc2UgfSA9IHBhcmFtcztcbiAgICAgICAgY29uc3QgaXNQcmVmbGlnaHQgPSBwYXJhbXMucHJlZmxpZ2h0ID09PSB0cnVlO1xuICAgICAgICBsZXQgdW5pcXVlRG9jc0FycmF5ID0gaW5uZXJGdWxsVGV4dFNlYXJjaChvcmFtYSwgcGFyYW1zLCBsYW5ndWFnZSk7XG4gICAgICAgIGlmIChwYXJhbXMuc29ydEJ5KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHBhcmFtcy5zb3J0QnkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpZHMgPSB1bmlxdWVEb2NzQXJyYXkubWFwKChbaWRdKSA9PiBpZCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZG9jcyA9IG9yYW1hLmRvY3VtZW50c1N0b3JlLmdldE11bHRpcGxlKG9yYW1hLmRhdGEuZG9jcywgaWRzKTtcbiAgICAgICAgICAgICAgICBjb25zdCBkb2NzV2l0aElkQW5kU2NvcmUgPSBkb2NzLm1hcCgoZCwgaSkgPT4gW1xuICAgICAgICAgICAgICAgICAgICB1bmlxdWVEb2NzQXJyYXlbaV1bMF0sXG4gICAgICAgICAgICAgICAgICAgIHVuaXF1ZURvY3NBcnJheVtpXVsxXSxcbiAgICAgICAgICAgICAgICAgICAgZFxuICAgICAgICAgICAgICAgIF0pO1xuICAgICAgICAgICAgICAgIGRvY3NXaXRoSWRBbmRTY29yZS5zb3J0KHBhcmFtcy5zb3J0QnkpO1xuICAgICAgICAgICAgICAgIHVuaXF1ZURvY3NBcnJheSA9IGRvY3NXaXRoSWRBbmRTY29yZS5tYXAoKFtpZCwgc2NvcmVdKSA9PiBbaWQsIHNjb3JlXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB1bmlxdWVEb2NzQXJyYXkgPSBvcmFtYS5zb3J0ZXJcbiAgICAgICAgICAgICAgICAgICAgLnNvcnRCeShvcmFtYS5kYXRhLnNvcnRpbmcsIHVuaXF1ZURvY3NBcnJheSwgcGFyYW1zLnNvcnRCeSlcbiAgICAgICAgICAgICAgICAgICAgLm1hcCgoW2lkLCBzY29yZV0pID0+IFtnZXRJbnRlcm5hbERvY3VtZW50SWQob3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUsIGlkKSwgc2NvcmVdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVuaXF1ZURvY3NBcnJheSA9IHVuaXF1ZURvY3NBcnJheS5zb3J0KHNvcnRUb2tlblNjb3JlUHJlZGljYXRlKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcmVzdWx0cztcbiAgICAgICAgaWYgKCFpc1ByZWZsaWdodCkge1xuICAgICAgICAgICAgcmVzdWx0cyA9IGRpc3RpbmN0T25cbiAgICAgICAgICAgICAgICA/IGZldGNoRG9jdW1lbnRzV2l0aERpc3RpbmN0KG9yYW1hLCB1bmlxdWVEb2NzQXJyYXksIG9mZnNldCwgbGltaXQsIGRpc3RpbmN0T24pXG4gICAgICAgICAgICAgICAgOiBmZXRjaERvY3VtZW50cyhvcmFtYSwgdW5pcXVlRG9jc0FycmF5LCBvZmZzZXQsIGxpbWl0KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZWFyY2hSZXN1bHQgPSB7XG4gICAgICAgICAgICBlbGFwc2VkOiB7XG4gICAgICAgICAgICAgICAgZm9ybWF0dGVkOiAnJyxcbiAgICAgICAgICAgICAgICByYXc6IDBcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoaXRzOiBbXSxcbiAgICAgICAgICAgIGNvdW50OiB1bmlxdWVEb2NzQXJyYXkubGVuZ3RoXG4gICAgICAgIH07XG4gICAgICAgIGlmICh0eXBlb2YgcmVzdWx0cyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHNlYXJjaFJlc3VsdC5oaXRzID0gcmVzdWx0cy5maWx0ZXIoQm9vbGVhbik7XG4gICAgICAgICAgICBpZiAoIWluY2x1ZGVWZWN0b3JzKSB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlVmVjdG9yc0Zyb21IaXRzKHNlYXJjaFJlc3VsdCwgdmVjdG9yUHJvcGVydGllcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHNob3VsZENhbGN1bGF0ZUZhY2V0cykge1xuICAgICAgICAgICAgY29uc3QgZmFjZXRzID0gZ2V0RmFjZXRzKG9yYW1hLCB1bmlxdWVEb2NzQXJyYXksIHBhcmFtcy5mYWNldHMpO1xuICAgICAgICAgICAgc2VhcmNoUmVzdWx0LmZhY2V0cyA9IGZhY2V0cztcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFyYW1zLmdyb3VwQnkpIHtcbiAgICAgICAgICAgIHNlYXJjaFJlc3VsdC5ncm91cHMgPSBnZXRHcm91cHMob3JhbWEsIHVuaXF1ZURvY3NBcnJheSwgcGFyYW1zLmdyb3VwQnkpO1xuICAgICAgICB9XG4gICAgICAgIHNlYXJjaFJlc3VsdC5lbGFwc2VkID0gb3JhbWEuZm9ybWF0RWxhcHNlZFRpbWUoZ2V0TmFub3NlY29uZHNUaW1lKCkgLSB0aW1lU3RhcnQpO1xuICAgICAgICByZXR1cm4gc2VhcmNoUmVzdWx0O1xuICAgIH1cbiAgICBhc3luYyBmdW5jdGlvbiBleGVjdXRlU2VhcmNoQXN5bmMoKSB7XG4gICAgICAgIGlmIChvcmFtYS5iZWZvcmVTZWFyY2gpIHtcbiAgICAgICAgICAgIGF3YWl0IHJ1bkJlZm9yZVNlYXJjaChvcmFtYS5iZWZvcmVTZWFyY2gsIG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZWFyY2hSZXN1bHQgPSBwZXJmb3JtU2VhcmNoTG9naWMoKTtcbiAgICAgICAgaWYgKG9yYW1hLmFmdGVyU2VhcmNoKSB7XG4gICAgICAgICAgICBhd2FpdCBydW5BZnRlclNlYXJjaChvcmFtYS5hZnRlclNlYXJjaCwgb3JhbWEsIHBhcmFtcywgbGFuZ3VhZ2UsIHNlYXJjaFJlc3VsdCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHNlYXJjaFJlc3VsdDtcbiAgICB9XG4gICAgY29uc3QgYXN5bmNOZWVkZWQgPSBvcmFtYS5iZWZvcmVTZWFyY2g/Lmxlbmd0aCB8fCBvcmFtYS5hZnRlclNlYXJjaD8ubGVuZ3RoO1xuICAgIGlmIChhc3luY05lZWRlZCkge1xuICAgICAgICByZXR1cm4gZXhlY3V0ZVNlYXJjaEFzeW5jKCk7XG4gICAgfVxuICAgIHJldHVybiBwZXJmb3JtU2VhcmNoTG9naWMoKTtcbn1cbmV4cG9ydCBjb25zdCBkZWZhdWx0Qk0yNVBhcmFtcyA9IHtcbiAgICBrOiAxLjIsXG4gICAgYjogMC43NSxcbiAgICBkOiAwLjVcbn07XG5mdW5jdGlvbiBhcHBseURlZmF1bHQoYm0yNVJlbGV2YW5jZSkge1xuICAgIGNvbnN0IHIgPSBibTI1UmVsZXZhbmNlID8/IHt9O1xuICAgIHIuayA9IHIuayA/PyBkZWZhdWx0Qk0yNVBhcmFtcy5rO1xuICAgIHIuYiA9IHIuYiA/PyBkZWZhdWx0Qk0yNVBhcmFtcy5iO1xuICAgIHIuZCA9IHIuZCA/PyBkZWZhdWx0Qk0yNVBhcmFtcy5kO1xuICAgIHJldHVybiByO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VhcmNoLWZ1bGx0ZXh0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-fulltext.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-hybrid.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/search-hybrid.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hybridSearch: () => (/* binding */ hybridSearch),\n/* harmony export */   innerHybridSearch: () => (/* binding */ innerHybridSearch)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _components_facets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/facets.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/facets.js\");\n/* harmony import */ var _components_groups_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/groups.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/groups.js\");\n/* harmony import */ var _search_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./search.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search.js\");\n/* harmony import */ var _search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search-fulltext.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-fulltext.js\");\n/* harmony import */ var _search_vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./search-vector.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-vector.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n\n\n\n\n\n\n\nfunction innerHybridSearch(orama, params, language) {\n    const fullTextIDs = minMaxScoreNormalization((0,_search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__.innerFullTextSearch)(orama, params, language));\n    const vectorIDs = (0,_search_vector_js__WEBPACK_IMPORTED_MODULE_5__.innerVectorSearch)(orama, params, language);\n    const hybridWeights = params.hybridWeights;\n    return mergeAndRankResults(fullTextIDs, vectorIDs, params.term ?? '', hybridWeights);\n}\nfunction hybridSearch(orama, params, language) {\n    const timeStart = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n    function performSearchLogic() {\n        const uniqueTokenScores = innerHybridSearch(orama, params, language);\n        let facetsResults;\n        const shouldCalculateFacets = params.facets && Object.keys(params.facets).length > 0;\n        if (shouldCalculateFacets) {\n            facetsResults = (0,_components_facets_js__WEBPACK_IMPORTED_MODULE_1__.getFacets)(orama, uniqueTokenScores, params.facets);\n        }\n        let groups;\n        if (params.groupBy) {\n            groups = (0,_components_groups_js__WEBPACK_IMPORTED_MODULE_2__.getGroups)(orama, uniqueTokenScores, params.groupBy);\n        }\n        const offset = params.offset ?? 0;\n        const limit = params.limit ?? 10;\n        const results = (0,_search_js__WEBPACK_IMPORTED_MODULE_3__.fetchDocuments)(orama, uniqueTokenScores, offset, limit).filter(Boolean);\n        const timeEnd = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n        const returningResults = {\n            count: uniqueTokenScores.length,\n            elapsed: {\n                raw: Number(timeEnd - timeStart),\n                formatted: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.formatNanoseconds)(timeEnd - timeStart)\n            },\n            hits: results,\n            ...(facetsResults ? { facets: facetsResults } : {}),\n            ...(groups ? { groups } : {})\n        };\n        const includeVectors = params.includeVectors ?? false;\n        if (!includeVectors) {\n            const vectorProperties = Object.keys(orama.data.index.vectorIndexes);\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.removeVectorsFromHits)(returningResults, vectorProperties);\n        }\n        return returningResults;\n    }\n    async function executeSearchAsync() {\n        if (orama.beforeSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_6__.runBeforeSearch)(orama.beforeSearch, orama, params, language);\n        }\n        const results = performSearchLogic();\n        if (orama.afterSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_6__.runAfterSearch)(orama.afterSearch, orama, params, language, results);\n        }\n        return results;\n    }\n    const asyncNeeded = orama.beforeSearch?.length || orama.afterSearch?.length;\n    if (asyncNeeded) {\n        return executeSearchAsync();\n    }\n    return performSearchLogic();\n}\nfunction extractScore(token) {\n    return token[1];\n}\nfunction minMaxScoreNormalization(results) {\n    // In this case I disabled the `prefer-spread` rule because spread seems to be slower\n    // eslint-disable-next-line prefer-spread\n    const maxScore = Math.max.apply(Math, results.map(extractScore));\n    return results.map(([id, score]) => [id, score / maxScore]);\n}\nfunction normalizeScore(score, maxScore) {\n    return score / maxScore;\n}\nfunction hybridScoreBuilder(textWeight, vectorWeight) {\n    return (textScore, vectorScore) => textScore * textWeight + vectorScore * vectorWeight;\n}\nfunction mergeAndRankResults(textResults, vectorResults, query, hybridWeights) {\n    // eslint-disable-next-line prefer-spread\n    const maxTextScore = Math.max.apply(Math, textResults.map(extractScore));\n    // eslint-disable-next-line prefer-spread\n    const maxVectorScore = Math.max.apply(Math, vectorResults.map(extractScore));\n    const hasHybridWeights = hybridWeights && hybridWeights.text && hybridWeights.vector;\n    const { text: textWeight, vector: vectorWeight } = hasHybridWeights ? hybridWeights : getQueryWeights(query);\n    const mergedResults = new Map();\n    const textResultsLength = textResults.length;\n    const hybridScore = hybridScoreBuilder(textWeight, vectorWeight);\n    for (let i = 0; i < textResultsLength; i++) {\n        const [id, score] = textResults[i];\n        const normalizedScore = normalizeScore(score, maxTextScore);\n        const hybridScoreValue = hybridScore(normalizedScore, 0);\n        mergedResults.set(id, hybridScoreValue);\n    }\n    const vectorResultsLength = vectorResults.length;\n    for (let i = 0; i < vectorResultsLength; i++) {\n        const [resultId, score] = vectorResults[i];\n        const normalizedScore = normalizeScore(score, maxVectorScore);\n        const existingRes = mergedResults.get(resultId) ?? 0;\n        mergedResults.set(resultId, existingRes + hybridScore(0, normalizedScore));\n    }\n    return [...mergedResults].sort((a, b) => b[1] - a[1]);\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction getQueryWeights(query) {\n    // In the next versions of Orama, we will ship a plugin containing a ML model to adjust the weights\n    // based on whether the query is keyword-focused, conceptual, etc.\n    // For now, we just return a fixed value.\n    return {\n        text: 0.5,\n        vector: 0.5\n    };\n}\n//# sourceMappingURL=search-hybrid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-hybrid.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-vector.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/search-vector.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   innerVectorSearch: () => (/* binding */ innerVectorSearch),\n/* harmony export */   searchVector: () => (/* binding */ searchVector)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _components_facets_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../components/facets.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/facets.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _components_groups_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../components/groups.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/groups.js\");\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n/* harmony import */ var _trees_vector_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../trees/vector.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/vector.js\");\n\n\n\n\n\n\n\nfunction innerVectorSearch(orama, params, language) {\n    const vector = params.vector;\n    if (vector && (!('value' in vector) || !('property' in vector))) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.createError)('INVALID_VECTOR_INPUT', Object.keys(vector).join(', '));\n    }\n    const vectorIndex = orama.data.index.vectorIndexes[vector.property];\n    const vectorSize = vectorIndex.node.size;\n    if (vector?.value.length !== vectorSize) {\n        if (vector?.property === undefined || vector?.value.length === undefined) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.createError)('INVALID_INPUT_VECTOR', 'undefined', vectorSize, 'undefined');\n        }\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.createError)('INVALID_INPUT_VECTOR', vector.property, vectorSize, vector.value.length);\n    }\n    const index = orama.data.index;\n    let whereFiltersIDs;\n    const hasFilters = Object.keys(params.where ?? {}).length > 0;\n    if (hasFilters) {\n        whereFiltersIDs = orama.index.searchByWhereClause(index, orama.tokenizer, params.where, language);\n    }\n    return vectorIndex.node.find(vector.value, params.similarity ?? _trees_vector_js__WEBPACK_IMPORTED_MODULE_6__.DEFAULT_SIMILARITY, whereFiltersIDs);\n}\nfunction searchVector(orama, params, language = 'english') {\n    const timeStart = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n    function performSearchLogic() {\n        const results = innerVectorSearch(orama, params, language)\n            .sort(_utils_js__WEBPACK_IMPORTED_MODULE_0__.sortTokenScorePredicate);\n        let facetsResults = [];\n        const shouldCalculateFacets = params.facets && Object.keys(params.facets).length > 0;\n        if (shouldCalculateFacets) {\n            const facets = (0,_components_facets_js__WEBPACK_IMPORTED_MODULE_1__.getFacets)(orama, results, params.facets);\n            facetsResults = facets;\n        }\n        const vectorProperty = params.vector.property;\n        const includeVectors = params.includeVectors ?? false;\n        const limit = params.limit ?? 10;\n        const offset = params.offset ?? 0;\n        const docs = Array.from({ length: limit });\n        for (let i = 0; i < limit; i++) {\n            const result = results[i + offset];\n            if (!result) {\n                break;\n            }\n            const doc = orama.data.docs.docs[result[0]];\n            if (doc) {\n                if (!includeVectors) {\n                    doc[vectorProperty] = null;\n                }\n                const newDoc = {\n                    id: (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_4__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, result[0]),\n                    score: result[1],\n                    document: doc\n                };\n                docs[i] = newDoc;\n            }\n        }\n        let groups = [];\n        if (params.groupBy) {\n            groups = (0,_components_groups_js__WEBPACK_IMPORTED_MODULE_3__.getGroups)(orama, results, params.groupBy);\n        }\n        const timeEnd = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.getNanosecondsTime)();\n        const elapsedTime = timeEnd - timeStart;\n        return {\n            count: results.length,\n            hits: docs.filter(Boolean),\n            elapsed: {\n                raw: Number(elapsedTime),\n                formatted: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.formatNanoseconds)(elapsedTime)\n            },\n            ...(facetsResults ? { facets: facetsResults } : {}),\n            ...(groups ? { groups } : {})\n        };\n    }\n    async function executeSearchAsync() {\n        if (orama.beforeSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_5__.runBeforeSearch)(orama.beforeSearch, orama, params, language);\n        }\n        const results = performSearchLogic();\n        if (orama.afterSearch) {\n            await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_5__.runAfterSearch)(orama.afterSearch, orama, params, language, results);\n        }\n        return results;\n    }\n    const asyncNeeded = orama.beforeSearch?.length || orama.afterSearch?.length;\n    if (asyncNeeded) {\n        return executeSearchAsync();\n    }\n    // Sync path\n    return performSearchLogic();\n}\n//# sourceMappingURL=search-vector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvc2VhcmNoLXZlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBNkY7QUFDekM7QUFDVDtBQUNTO0FBQ3NDO0FBQ2pCO0FBQ2pCO0FBQ2pEO0FBQ1A7QUFDQTtBQUNBLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBLGNBQWMsdURBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0EscURBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxnRUFBa0I7QUFDdEY7QUFDTztBQUNQLHNCQUFzQiw2REFBa0I7QUFDeEM7QUFDQTtBQUNBLGtCQUFrQiw4REFBdUI7QUFDekM7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGdFQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxlQUFlO0FBQ2pELHdCQUF3QixXQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNHQUEyQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLGdFQUFTO0FBQzlCO0FBQ0Esd0JBQXdCLDZEQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsNERBQWlCO0FBQzVDLGFBQWE7QUFDYixrQ0FBa0Msd0JBQXdCLElBQUk7QUFDOUQsMkJBQTJCLFNBQVMsSUFBSTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixxRUFBZTtBQUNqQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isb0VBQWM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9tZXRob2RzL3NlYXJjaC12ZWN0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFub3NlY29uZHNUaW1lLCBmb3JtYXROYW5vc2Vjb25kcywgc29ydFRva2VuU2NvcmVQcmVkaWNhdGUgfSBmcm9tICcuLi91dGlscy5qcyc7XG5pbXBvcnQgeyBnZXRGYWNldHMgfSBmcm9tICcuLi9jb21wb25lbnRzL2ZhY2V0cy5qcyc7XG5pbXBvcnQgeyBjcmVhdGVFcnJvciB9IGZyb20gJy4uL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBnZXRHcm91cHMgfSBmcm9tICcuLi9jb21wb25lbnRzL2dyb3Vwcy5qcyc7XG5pbXBvcnQgeyBnZXREb2N1bWVudElkRnJvbUludGVybmFsSWQgfSBmcm9tICcuLi9jb21wb25lbnRzL2ludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzJztcbmltcG9ydCB7IHJ1bkJlZm9yZVNlYXJjaCwgcnVuQWZ0ZXJTZWFyY2ggfSBmcm9tICcuLi9jb21wb25lbnRzL2hvb2tzLmpzJztcbmltcG9ydCB7IERFRkFVTFRfU0lNSUxBUklUWSB9IGZyb20gJy4uL3RyZWVzL3ZlY3Rvci5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaW5uZXJWZWN0b3JTZWFyY2gob3JhbWEsIHBhcmFtcywgbGFuZ3VhZ2UpIHtcbiAgICBjb25zdCB2ZWN0b3IgPSBwYXJhbXMudmVjdG9yO1xuICAgIGlmICh2ZWN0b3IgJiYgKCEoJ3ZhbHVlJyBpbiB2ZWN0b3IpIHx8ICEoJ3Byb3BlcnR5JyBpbiB2ZWN0b3IpKSkge1xuICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignSU5WQUxJRF9WRUNUT1JfSU5QVVQnLCBPYmplY3Qua2V5cyh2ZWN0b3IpLmpvaW4oJywgJykpO1xuICAgIH1cbiAgICBjb25zdCB2ZWN0b3JJbmRleCA9IG9yYW1hLmRhdGEuaW5kZXgudmVjdG9ySW5kZXhlc1t2ZWN0b3IucHJvcGVydHldO1xuICAgIGNvbnN0IHZlY3RvclNpemUgPSB2ZWN0b3JJbmRleC5ub2RlLnNpemU7XG4gICAgaWYgKHZlY3Rvcj8udmFsdWUubGVuZ3RoICE9PSB2ZWN0b3JTaXplKSB7XG4gICAgICAgIGlmICh2ZWN0b3I/LnByb3BlcnR5ID09PSB1bmRlZmluZWQgfHwgdmVjdG9yPy52YWx1ZS5sZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ0lOVkFMSURfSU5QVVRfVkVDVE9SJywgJ3VuZGVmaW5lZCcsIHZlY3RvclNpemUsICd1bmRlZmluZWQnKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBjcmVhdGVFcnJvcignSU5WQUxJRF9JTlBVVF9WRUNUT1InLCB2ZWN0b3IucHJvcGVydHksIHZlY3RvclNpemUsIHZlY3Rvci52YWx1ZS5sZW5ndGgpO1xuICAgIH1cbiAgICBjb25zdCBpbmRleCA9IG9yYW1hLmRhdGEuaW5kZXg7XG4gICAgbGV0IHdoZXJlRmlsdGVyc0lEcztcbiAgICBjb25zdCBoYXNGaWx0ZXJzID0gT2JqZWN0LmtleXMocGFyYW1zLndoZXJlID8/IHt9KS5sZW5ndGggPiAwO1xuICAgIGlmIChoYXNGaWx0ZXJzKSB7XG4gICAgICAgIHdoZXJlRmlsdGVyc0lEcyA9IG9yYW1hLmluZGV4LnNlYXJjaEJ5V2hlcmVDbGF1c2UoaW5kZXgsIG9yYW1hLnRva2VuaXplciwgcGFyYW1zLndoZXJlLCBsYW5ndWFnZSk7XG4gICAgfVxuICAgIHJldHVybiB2ZWN0b3JJbmRleC5ub2RlLmZpbmQodmVjdG9yLnZhbHVlLCBwYXJhbXMuc2ltaWxhcml0eSA/PyBERUZBVUxUX1NJTUlMQVJJVFksIHdoZXJlRmlsdGVyc0lEcyk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoVmVjdG9yKG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlID0gJ2VuZ2xpc2gnKSB7XG4gICAgY29uc3QgdGltZVN0YXJ0ID0gZ2V0TmFub3NlY29uZHNUaW1lKCk7XG4gICAgZnVuY3Rpb24gcGVyZm9ybVNlYXJjaExvZ2ljKCkge1xuICAgICAgICBjb25zdCByZXN1bHRzID0gaW5uZXJWZWN0b3JTZWFyY2gob3JhbWEsIHBhcmFtcywgbGFuZ3VhZ2UpXG4gICAgICAgICAgICAuc29ydChzb3J0VG9rZW5TY29yZVByZWRpY2F0ZSk7XG4gICAgICAgIGxldCBmYWNldHNSZXN1bHRzID0gW107XG4gICAgICAgIGNvbnN0IHNob3VsZENhbGN1bGF0ZUZhY2V0cyA9IHBhcmFtcy5mYWNldHMgJiYgT2JqZWN0LmtleXMocGFyYW1zLmZhY2V0cykubGVuZ3RoID4gMDtcbiAgICAgICAgaWYgKHNob3VsZENhbGN1bGF0ZUZhY2V0cykge1xuICAgICAgICAgICAgY29uc3QgZmFjZXRzID0gZ2V0RmFjZXRzKG9yYW1hLCByZXN1bHRzLCBwYXJhbXMuZmFjZXRzKTtcbiAgICAgICAgICAgIGZhY2V0c1Jlc3VsdHMgPSBmYWNldHM7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmVjdG9yUHJvcGVydHkgPSBwYXJhbXMudmVjdG9yLnByb3BlcnR5O1xuICAgICAgICBjb25zdCBpbmNsdWRlVmVjdG9ycyA9IHBhcmFtcy5pbmNsdWRlVmVjdG9ycyA/PyBmYWxzZTtcbiAgICAgICAgY29uc3QgbGltaXQgPSBwYXJhbXMubGltaXQgPz8gMTA7XG4gICAgICAgIGNvbnN0IG9mZnNldCA9IHBhcmFtcy5vZmZzZXQgPz8gMDtcbiAgICAgICAgY29uc3QgZG9jcyA9IEFycmF5LmZyb20oeyBsZW5ndGg6IGxpbWl0IH0pO1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbWl0OyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc3VsdHNbaSArIG9mZnNldF07XG4gICAgICAgICAgICBpZiAoIXJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZG9jID0gb3JhbWEuZGF0YS5kb2NzLmRvY3NbcmVzdWx0WzBdXTtcbiAgICAgICAgICAgIGlmIChkb2MpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWluY2x1ZGVWZWN0b3JzKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvY1t2ZWN0b3JQcm9wZXJ0eV0gPSBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBuZXdEb2MgPSB7XG4gICAgICAgICAgICAgICAgICAgIGlkOiBnZXREb2N1bWVudElkRnJvbUludGVybmFsSWQob3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUsIHJlc3VsdFswXSksXG4gICAgICAgICAgICAgICAgICAgIHNjb3JlOiByZXN1bHRbMV0sXG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50OiBkb2NcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIGRvY3NbaV0gPSBuZXdEb2M7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGdyb3VwcyA9IFtdO1xuICAgICAgICBpZiAocGFyYW1zLmdyb3VwQnkpIHtcbiAgICAgICAgICAgIGdyb3VwcyA9IGdldEdyb3VwcyhvcmFtYSwgcmVzdWx0cywgcGFyYW1zLmdyb3VwQnkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRpbWVFbmQgPSBnZXROYW5vc2Vjb25kc1RpbWUoKTtcbiAgICAgICAgY29uc3QgZWxhcHNlZFRpbWUgPSB0aW1lRW5kIC0gdGltZVN0YXJ0O1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY291bnQ6IHJlc3VsdHMubGVuZ3RoLFxuICAgICAgICAgICAgaGl0czogZG9jcy5maWx0ZXIoQm9vbGVhbiksXG4gICAgICAgICAgICBlbGFwc2VkOiB7XG4gICAgICAgICAgICAgICAgcmF3OiBOdW1iZXIoZWxhcHNlZFRpbWUpLFxuICAgICAgICAgICAgICAgIGZvcm1hdHRlZDogZm9ybWF0TmFub3NlY29uZHMoZWxhcHNlZFRpbWUpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLi4uKGZhY2V0c1Jlc3VsdHMgPyB7IGZhY2V0czogZmFjZXRzUmVzdWx0cyB9IDoge30pLFxuICAgICAgICAgICAgLi4uKGdyb3VwcyA/IHsgZ3JvdXBzIH0gOiB7fSlcbiAgICAgICAgfTtcbiAgICB9XG4gICAgYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZVNlYXJjaEFzeW5jKCkge1xuICAgICAgICBpZiAob3JhbWEuYmVmb3JlU2VhcmNoKSB7XG4gICAgICAgICAgICBhd2FpdCBydW5CZWZvcmVTZWFyY2gob3JhbWEuYmVmb3JlU2VhcmNoLCBvcmFtYSwgcGFyYW1zLCBsYW5ndWFnZSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IHBlcmZvcm1TZWFyY2hMb2dpYygpO1xuICAgICAgICBpZiAob3JhbWEuYWZ0ZXJTZWFyY2gpIHtcbiAgICAgICAgICAgIGF3YWl0IHJ1bkFmdGVyU2VhcmNoKG9yYW1hLmFmdGVyU2VhcmNoLCBvcmFtYSwgcGFyYW1zLCBsYW5ndWFnZSwgcmVzdWx0cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfVxuICAgIGNvbnN0IGFzeW5jTmVlZGVkID0gb3JhbWEuYmVmb3JlU2VhcmNoPy5sZW5ndGggfHwgb3JhbWEuYWZ0ZXJTZWFyY2g/Lmxlbmd0aDtcbiAgICBpZiAoYXN5bmNOZWVkZWQpIHtcbiAgICAgICAgcmV0dXJuIGV4ZWN1dGVTZWFyY2hBc3luYygpO1xuICAgIH1cbiAgICAvLyBTeW5jIHBhdGhcbiAgICByZXR1cm4gcGVyZm9ybVNlYXJjaExvZ2ljKCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWFyY2gtdmVjdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-vector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search.js":
/*!******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/search.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchDocuments: () => (/* binding */ fetchDocuments),\n/* harmony export */   fetchDocumentsWithDistinct: () => (/* binding */ fetchDocumentsWithDistinct),\n/* harmony export */   search: () => (/* binding */ search)\n/* harmony export */ });\n/* harmony import */ var _components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/internal-document-id-store.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/internal-document-id-store.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/constants.js\");\n/* harmony import */ var _search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./search-fulltext.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-fulltext.js\");\n/* harmony import */ var _search_vector_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./search-vector.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-vector.js\");\n/* harmony import */ var _search_hybrid_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./search-hybrid.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search-hybrid.js\");\n\n\n\n\n\n\n\nfunction search(orama, params, language) {\n    const mode = params.mode ?? _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_FULLTEXT_SEARCH;\n    if (mode === _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_FULLTEXT_SEARCH) {\n        return (0,_search_fulltext_js__WEBPACK_IMPORTED_MODULE_4__.fullTextSearch)(orama, params, language);\n    }\n    if (mode === _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_VECTOR_SEARCH) {\n        return (0,_search_vector_js__WEBPACK_IMPORTED_MODULE_5__.searchVector)(orama, params);\n    }\n    if (mode === _constants_js__WEBPACK_IMPORTED_MODULE_3__.MODE_HYBRID_SEARCH) {\n        return (0,_search_hybrid_js__WEBPACK_IMPORTED_MODULE_6__.hybridSearch)(orama, params);\n    }\n    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('INVALID_SEARCH_MODE', mode);\n}\nfunction fetchDocumentsWithDistinct(orama, uniqueDocsArray, offset, limit, distinctOn) {\n    const docs = orama.data.docs;\n    // Keep track which values we already seen\n    const values = new Map();\n    // We cannot know how many results we will have in the end,\n    // so we need cannot pre-allocate the array.\n    const results = [];\n    const resultIDs = new Set();\n    const uniqueDocsArrayLength = uniqueDocsArray.length;\n    let count = 0;\n    for (let i = 0; i < uniqueDocsArrayLength; i++) {\n        const idAndScore = uniqueDocsArray[i];\n        // If there are no more results, just break the loop\n        if (typeof idAndScore === 'undefined') {\n            continue;\n        }\n        const [id, score] = idAndScore;\n        if (resultIDs.has(id)) {\n            continue;\n        }\n        const doc = orama.documentsStore.get(docs, id);\n        const value = (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getNested)(doc, distinctOn);\n        if (typeof value === 'undefined' || values.has(value)) {\n            continue;\n        }\n        values.set(value, true);\n        count++;\n        // We shouldn't consider the document if it's not in the offset range\n        if (count <= offset) {\n            continue;\n        }\n        results.push({ id: (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, id), score, document: doc });\n        resultIDs.add(id);\n        // reached the limit, break the loop\n        if (count >= offset + limit) {\n            break;\n        }\n    }\n    return results;\n}\nfunction fetchDocuments(orama, uniqueDocsArray, offset, limit) {\n    const docs = orama.data.docs;\n    const results = Array.from({\n        length: limit\n    });\n    const resultIDs = new Set();\n    // We already have the list of ALL the document IDs containing the search terms.\n    // We loop over them starting from a positional value \"offset\" and ending at \"offset + limit\"\n    // to provide pagination capabilities to the search.\n    for (let i = offset; i < limit + offset; i++) {\n        const idAndScore = uniqueDocsArray[i];\n        // If there are no more results, just break the loop\n        if (typeof idAndScore === 'undefined') {\n            break;\n        }\n        const [id, score] = idAndScore;\n        if (!resultIDs.has(id)) {\n            // We retrieve the full document only AFTER making sure that we really want it.\n            // We never retrieve the full document preventively.\n            const fullDoc = orama.documentsStore.get(docs, id);\n            results[i] = { id: (0,_components_internal_document_id_store_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentIdFromInternalId)(orama.internalDocumentIDStore, id), score, document: fullDoc };\n            resultIDs.add(id);\n        }\n    }\n    return results;\n}\n//# sourceMappingURL=search.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvc2VhcmNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMEY7QUFDL0M7QUFDSDtBQUN1RDtBQUN6QztBQUNKO0FBQ0E7QUFDM0M7QUFDUCxnQ0FBZ0MsK0RBQW9CO0FBQ3BELGlCQUFpQiwrREFBb0I7QUFDckMsZUFBZSxtRUFBYztBQUM3QjtBQUNBLGlCQUFpQiw2REFBa0I7QUFDbkMsZUFBZSwrREFBWTtBQUMzQjtBQUNBLGlCQUFpQiw2REFBa0I7QUFDbkMsZUFBZSwrREFBWTtBQUMzQjtBQUNBLFVBQVUsdURBQVc7QUFDckI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwyQkFBMkI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isb0RBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLElBQUksc0dBQTJCLDJEQUEyRDtBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsb0JBQW9CO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLElBQUksc0dBQTJCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvQG9yYW1hL29yYW1hL2Rpc3QvYnJvd3Nlci9tZXRob2RzL3NlYXJjaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREb2N1bWVudElkRnJvbUludGVybmFsSWQgfSBmcm9tICcuLi9jb21wb25lbnRzL2ludGVybmFsLWRvY3VtZW50LWlkLXN0b3JlLmpzJztcbmltcG9ydCB7IGNyZWF0ZUVycm9yIH0gZnJvbSAnLi4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGdldE5lc3RlZCB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmltcG9ydCB7IE1PREVfRlVMTFRFWFRfU0VBUkNILCBNT0RFX0hZQlJJRF9TRUFSQ0gsIE1PREVfVkVDVE9SX1NFQVJDSCB9IGZyb20gJy4uL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBmdWxsVGV4dFNlYXJjaCB9IGZyb20gJy4vc2VhcmNoLWZ1bGx0ZXh0LmpzJztcbmltcG9ydCB7IHNlYXJjaFZlY3RvciB9IGZyb20gJy4vc2VhcmNoLXZlY3Rvci5qcyc7XG5pbXBvcnQgeyBoeWJyaWRTZWFyY2ggfSBmcm9tICcuL3NlYXJjaC1oeWJyaWQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHNlYXJjaChvcmFtYSwgcGFyYW1zLCBsYW5ndWFnZSkge1xuICAgIGNvbnN0IG1vZGUgPSBwYXJhbXMubW9kZSA/PyBNT0RFX0ZVTExURVhUX1NFQVJDSDtcbiAgICBpZiAobW9kZSA9PT0gTU9ERV9GVUxMVEVYVF9TRUFSQ0gpIHtcbiAgICAgICAgcmV0dXJuIGZ1bGxUZXh0U2VhcmNoKG9yYW1hLCBwYXJhbXMsIGxhbmd1YWdlKTtcbiAgICB9XG4gICAgaWYgKG1vZGUgPT09IE1PREVfVkVDVE9SX1NFQVJDSCkge1xuICAgICAgICByZXR1cm4gc2VhcmNoVmVjdG9yKG9yYW1hLCBwYXJhbXMpO1xuICAgIH1cbiAgICBpZiAobW9kZSA9PT0gTU9ERV9IWUJSSURfU0VBUkNIKSB7XG4gICAgICAgIHJldHVybiBoeWJyaWRTZWFyY2gob3JhbWEsIHBhcmFtcyk7XG4gICAgfVxuICAgIHRocm93IGNyZWF0ZUVycm9yKCdJTlZBTElEX1NFQVJDSF9NT0RFJywgbW9kZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZmV0Y2hEb2N1bWVudHNXaXRoRGlzdGluY3Qob3JhbWEsIHVuaXF1ZURvY3NBcnJheSwgb2Zmc2V0LCBsaW1pdCwgZGlzdGluY3RPbikge1xuICAgIGNvbnN0IGRvY3MgPSBvcmFtYS5kYXRhLmRvY3M7XG4gICAgLy8gS2VlcCB0cmFjayB3aGljaCB2YWx1ZXMgd2UgYWxyZWFkeSBzZWVuXG4gICAgY29uc3QgdmFsdWVzID0gbmV3IE1hcCgpO1xuICAgIC8vIFdlIGNhbm5vdCBrbm93IGhvdyBtYW55IHJlc3VsdHMgd2Ugd2lsbCBoYXZlIGluIHRoZSBlbmQsXG4gICAgLy8gc28gd2UgbmVlZCBjYW5ub3QgcHJlLWFsbG9jYXRlIHRoZSBhcnJheS5cbiAgICBjb25zdCByZXN1bHRzID0gW107XG4gICAgY29uc3QgcmVzdWx0SURzID0gbmV3IFNldCgpO1xuICAgIGNvbnN0IHVuaXF1ZURvY3NBcnJheUxlbmd0aCA9IHVuaXF1ZURvY3NBcnJheS5sZW5ndGg7XG4gICAgbGV0IGNvdW50ID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHVuaXF1ZURvY3NBcnJheUxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGlkQW5kU2NvcmUgPSB1bmlxdWVEb2NzQXJyYXlbaV07XG4gICAgICAgIC8vIElmIHRoZXJlIGFyZSBubyBtb3JlIHJlc3VsdHMsIGp1c3QgYnJlYWsgdGhlIGxvb3BcbiAgICAgICAgaWYgKHR5cGVvZiBpZEFuZFNjb3JlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW2lkLCBzY29yZV0gPSBpZEFuZFNjb3JlO1xuICAgICAgICBpZiAocmVzdWx0SURzLmhhcyhpZCkpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRvYyA9IG9yYW1hLmRvY3VtZW50c1N0b3JlLmdldChkb2NzLCBpZCk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gZ2V0TmVzdGVkKGRvYywgZGlzdGluY3RPbik7XG4gICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnIHx8IHZhbHVlcy5oYXModmFsdWUpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICB2YWx1ZXMuc2V0KHZhbHVlLCB0cnVlKTtcbiAgICAgICAgY291bnQrKztcbiAgICAgICAgLy8gV2Ugc2hvdWxkbid0IGNvbnNpZGVyIHRoZSBkb2N1bWVudCBpZiBpdCdzIG5vdCBpbiB0aGUgb2Zmc2V0IHJhbmdlXG4gICAgICAgIGlmIChjb3VudCA8PSBvZmZzZXQpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdHMucHVzaCh7IGlkOiBnZXREb2N1bWVudElkRnJvbUludGVybmFsSWQob3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUsIGlkKSwgc2NvcmUsIGRvY3VtZW50OiBkb2MgfSk7XG4gICAgICAgIHJlc3VsdElEcy5hZGQoaWQpO1xuICAgICAgICAvLyByZWFjaGVkIHRoZSBsaW1pdCwgYnJlYWsgdGhlIGxvb3BcbiAgICAgICAgaWYgKGNvdW50ID49IG9mZnNldCArIGxpbWl0KSB7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0cztcbn1cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaERvY3VtZW50cyhvcmFtYSwgdW5pcXVlRG9jc0FycmF5LCBvZmZzZXQsIGxpbWl0KSB7XG4gICAgY29uc3QgZG9jcyA9IG9yYW1hLmRhdGEuZG9jcztcbiAgICBjb25zdCByZXN1bHRzID0gQXJyYXkuZnJvbSh7XG4gICAgICAgIGxlbmd0aDogbGltaXRcbiAgICB9KTtcbiAgICBjb25zdCByZXN1bHRJRHMgPSBuZXcgU2V0KCk7XG4gICAgLy8gV2UgYWxyZWFkeSBoYXZlIHRoZSBsaXN0IG9mIEFMTCB0aGUgZG9jdW1lbnQgSURzIGNvbnRhaW5pbmcgdGhlIHNlYXJjaCB0ZXJtcy5cbiAgICAvLyBXZSBsb29wIG92ZXIgdGhlbSBzdGFydGluZyBmcm9tIGEgcG9zaXRpb25hbCB2YWx1ZSBcIm9mZnNldFwiIGFuZCBlbmRpbmcgYXQgXCJvZmZzZXQgKyBsaW1pdFwiXG4gICAgLy8gdG8gcHJvdmlkZSBwYWdpbmF0aW9uIGNhcGFiaWxpdGllcyB0byB0aGUgc2VhcmNoLlxuICAgIGZvciAobGV0IGkgPSBvZmZzZXQ7IGkgPCBsaW1pdCArIG9mZnNldDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGlkQW5kU2NvcmUgPSB1bmlxdWVEb2NzQXJyYXlbaV07XG4gICAgICAgIC8vIElmIHRoZXJlIGFyZSBubyBtb3JlIHJlc3VsdHMsIGp1c3QgYnJlYWsgdGhlIGxvb3BcbiAgICAgICAgaWYgKHR5cGVvZiBpZEFuZFNjb3JlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgW2lkLCBzY29yZV0gPSBpZEFuZFNjb3JlO1xuICAgICAgICBpZiAoIXJlc3VsdElEcy5oYXMoaWQpKSB7XG4gICAgICAgICAgICAvLyBXZSByZXRyaWV2ZSB0aGUgZnVsbCBkb2N1bWVudCBvbmx5IEFGVEVSIG1ha2luZyBzdXJlIHRoYXQgd2UgcmVhbGx5IHdhbnQgaXQuXG4gICAgICAgICAgICAvLyBXZSBuZXZlciByZXRyaWV2ZSB0aGUgZnVsbCBkb2N1bWVudCBwcmV2ZW50aXZlbHkuXG4gICAgICAgICAgICBjb25zdCBmdWxsRG9jID0gb3JhbWEuZG9jdW1lbnRzU3RvcmUuZ2V0KGRvY3MsIGlkKTtcbiAgICAgICAgICAgIHJlc3VsdHNbaV0gPSB7IGlkOiBnZXREb2N1bWVudElkRnJvbUludGVybmFsSWQob3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUsIGlkKSwgc2NvcmUsIGRvY3VtZW50OiBmdWxsRG9jIH07XG4gICAgICAgICAgICByZXN1bHRJRHMuYWRkKGlkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0cztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/search.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/serialization.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/serialization.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   load: () => (/* binding */ load),\n/* harmony export */   save: () => (/* binding */ save)\n/* harmony export */ });\nfunction load(orama, raw) {\n    orama.internalDocumentIDStore.load(orama, raw.internalDocumentIDStore);\n    orama.data.index = orama.index.load(orama.internalDocumentIDStore, raw.index);\n    orama.data.docs = orama.documentsStore.load(orama.internalDocumentIDStore, raw.docs);\n    orama.data.sorting = orama.sorter.load(orama.internalDocumentIDStore, raw.sorting);\n    orama.tokenizer.language = raw.language;\n}\nfunction save(orama) {\n    return {\n        internalDocumentIDStore: orama.internalDocumentIDStore.save(orama.internalDocumentIDStore),\n        index: orama.index.save(orama.data.index),\n        docs: orama.documentsStore.save(orama.data.docs),\n        sorting: orama.sorter.save(orama.data.sorting),\n        language: orama.tokenizer.language\n    };\n}\n//# sourceMappingURL=serialization.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvc2VyaWFsaXphdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2Jyb3dzZXIvbWV0aG9kcy9zZXJpYWxpemF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBsb2FkKG9yYW1hLCByYXcpIHtcbiAgICBvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZS5sb2FkKG9yYW1hLCByYXcuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUpO1xuICAgIG9yYW1hLmRhdGEuaW5kZXggPSBvcmFtYS5pbmRleC5sb2FkKG9yYW1hLmludGVybmFsRG9jdW1lbnRJRFN0b3JlLCByYXcuaW5kZXgpO1xuICAgIG9yYW1hLmRhdGEuZG9jcyA9IG9yYW1hLmRvY3VtZW50c1N0b3JlLmxvYWQob3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUsIHJhdy5kb2NzKTtcbiAgICBvcmFtYS5kYXRhLnNvcnRpbmcgPSBvcmFtYS5zb3J0ZXIubG9hZChvcmFtYS5pbnRlcm5hbERvY3VtZW50SURTdG9yZSwgcmF3LnNvcnRpbmcpO1xuICAgIG9yYW1hLnRva2VuaXplci5sYW5ndWFnZSA9IHJhdy5sYW5ndWFnZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzYXZlKG9yYW1hKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW50ZXJuYWxEb2N1bWVudElEU3RvcmU6IG9yYW1hLmludGVybmFsRG9jdW1lbnRJRFN0b3JlLnNhdmUob3JhbWEuaW50ZXJuYWxEb2N1bWVudElEU3RvcmUpLFxuICAgICAgICBpbmRleDogb3JhbWEuaW5kZXguc2F2ZShvcmFtYS5kYXRhLmluZGV4KSxcbiAgICAgICAgZG9jczogb3JhbWEuZG9jdW1lbnRzU3RvcmUuc2F2ZShvcmFtYS5kYXRhLmRvY3MpLFxuICAgICAgICBzb3J0aW5nOiBvcmFtYS5zb3J0ZXIuc2F2ZShvcmFtYS5kYXRhLnNvcnRpbmcpLFxuICAgICAgICBsYW5ndWFnZTogb3JhbWEudG9rZW5pemVyLmxhbmd1YWdlXG4gICAgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcmlhbGl6YXRpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/serialization.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/update.js":
/*!******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/update.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   update: () => (/* binding */ update),\n/* harmony export */   updateMultiple: () => (/* binding */ updateMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _insert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./insert.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/insert.js\");\n/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./remove.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/remove.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\n\n\n\n\nfunction update(orama, id, doc, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate);\n    if (asyncNeeded) {\n        return updateAsync(orama, id, doc, language, skipHooks);\n    }\n    return updateSync(orama, id, doc, language, skipHooks);\n}\nasync function updateAsync(orama, id, doc, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpdate) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpdate, orama, id);\n    }\n    await (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.remove)(orama, id, language, skipHooks);\n    const newId = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks);\n    if (!skipHooks && orama.afterUpdate) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpdate, orama, newId);\n    }\n    return newId;\n}\nfunction updateSync(orama, id, doc, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpdate) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpdate, orama, id);\n    }\n    (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.remove)(orama, id, language, skipHooks);\n    const newId = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks);\n    if (!skipHooks && orama.afterUpdate) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpdate, orama, newId);\n    }\n    return newId;\n}\nfunction updateMultiple(orama, ids, docs, batchSize, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsertMultiple);\n    if (asyncNeeded) {\n        return updateMultipleAsync(orama, ids, docs, batchSize, language, skipHooks);\n    }\n    return updateMultipleSync(orama, ids, docs, batchSize, language, skipHooks);\n}\nasync function updateMultipleAsync(orama, ids, docs, batchSize, language, skipHooks) {\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpdateMultiple, orama, ids);\n    }\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    await (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.removeMultiple)(orama, ids, batchSize, language, skipHooks);\n    const newIds = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docs, batchSize, language, skipHooks);\n    if (!skipHooks) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpdateMultiple, orama, newIds);\n    }\n    return newIds;\n}\nfunction updateMultipleSync(orama, ids, docs, batchSize, language, skipHooks) {\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpdateMultiple, orama, ids);\n    }\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    (0,_remove_js__WEBPACK_IMPORTED_MODULE_3__.removeMultiple)(orama, ids, batchSize, language, skipHooks);\n    const newIds = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docs, batchSize, language, skipHooks);\n    if (!skipHooks) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpdateMultiple, orama, newIds);\n    }\n    return newIds;\n}\n//# sourceMappingURL=update.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBd0U7QUFDN0I7QUFDZTtBQUNMO0FBQ1A7QUFDdkM7QUFDUCx3QkFBd0IsMERBQWU7QUFDdkMsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxtRUFBYTtBQUMzQjtBQUNBLFVBQVUsa0RBQU07QUFDaEIsd0JBQXdCLGtEQUFNO0FBQzlCO0FBQ0EsY0FBYyxtRUFBYTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtRUFBYTtBQUNyQjtBQUNBLElBQUksa0RBQU07QUFDVixrQkFBa0Isa0RBQU07QUFDeEI7QUFDQSxRQUFRLG1FQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asd0JBQXdCLDBEQUFlO0FBQ3ZDLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QixRQUFRLDBEQUFlO0FBQ3ZCLFFBQVEsMERBQWU7QUFDdkIsUUFBUSwwREFBZTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMscUVBQWU7QUFDN0I7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBLGtCQUFrQix1REFBVztBQUM3QjtBQUNBO0FBQ0EsVUFBVSwwREFBYztBQUN4Qix5QkFBeUIsK0RBQW1CO0FBQzVDO0FBQ0EsY0FBYyxxRUFBZTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxRUFBZTtBQUN2QjtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQztBQUNBO0FBQ0Esa0JBQWtCLHVEQUFXO0FBQzdCO0FBQ0E7QUFDQSxJQUFJLDBEQUFjO0FBQ2xCLG1CQUFtQiwrREFBbUI7QUFDdEM7QUFDQSxRQUFRLHFFQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL21ldGhvZHMvdXBkYXRlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJ1bk11bHRpcGxlSG9vaywgcnVuU2luZ2xlSG9vayB9IGZyb20gJy4uL2NvbXBvbmVudHMvaG9va3MuanMnO1xuaW1wb3J0IHsgY3JlYXRlRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgaW5uZXJJbnNlcnRNdWx0aXBsZSwgaW5zZXJ0IH0gZnJvbSAnLi9pbnNlcnQuanMnO1xuaW1wb3J0IHsgcmVtb3ZlLCByZW1vdmVNdWx0aXBsZSB9IGZyb20gJy4vcmVtb3ZlLmpzJztcbmltcG9ydCB7IGlzQXN5bmNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGUob3JhbWEsIGlkLCBkb2MsIGxhbmd1YWdlLCBza2lwSG9va3MpIHtcbiAgICBjb25zdCBhc3luY05lZWRlZCA9IGlzQXN5bmNGdW5jdGlvbihvcmFtYS5hZnRlckluc2VydCkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmJlZm9yZUluc2VydCkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmFmdGVyUmVtb3ZlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYmVmb3JlUmVtb3ZlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYmVmb3JlVXBkYXRlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYWZ0ZXJVcGRhdGUpO1xuICAgIGlmIChhc3luY05lZWRlZCkge1xuICAgICAgICByZXR1cm4gdXBkYXRlQXN5bmMob3JhbWEsIGlkLCBkb2MsIGxhbmd1YWdlLCBza2lwSG9va3MpO1xuICAgIH1cbiAgICByZXR1cm4gdXBkYXRlU3luYyhvcmFtYSwgaWQsIGRvYywgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG59XG5hc3luYyBmdW5jdGlvbiB1cGRhdGVBc3luYyhvcmFtYSwgaWQsIGRvYywgbGFuZ3VhZ2UsIHNraXBIb29rcykge1xuICAgIGlmICghc2tpcEhvb2tzICYmIG9yYW1hLmJlZm9yZVVwZGF0ZSkge1xuICAgICAgICBhd2FpdCBydW5TaW5nbGVIb29rKG9yYW1hLmJlZm9yZVVwZGF0ZSwgb3JhbWEsIGlkKTtcbiAgICB9XG4gICAgYXdhaXQgcmVtb3ZlKG9yYW1hLCBpZCwgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgY29uc3QgbmV3SWQgPSBhd2FpdCBpbnNlcnQob3JhbWEsIGRvYywgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgaWYgKCFza2lwSG9va3MgJiYgb3JhbWEuYWZ0ZXJVcGRhdGUpIHtcbiAgICAgICAgYXdhaXQgcnVuU2luZ2xlSG9vayhvcmFtYS5hZnRlclVwZGF0ZSwgb3JhbWEsIG5ld0lkKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld0lkO1xufVxuZnVuY3Rpb24gdXBkYXRlU3luYyhvcmFtYSwgaWQsIGRvYywgbGFuZ3VhZ2UsIHNraXBIb29rcykge1xuICAgIGlmICghc2tpcEhvb2tzICYmIG9yYW1hLmJlZm9yZVVwZGF0ZSkge1xuICAgICAgICBydW5TaW5nbGVIb29rKG9yYW1hLmJlZm9yZVVwZGF0ZSwgb3JhbWEsIGlkKTtcbiAgICB9XG4gICAgcmVtb3ZlKG9yYW1hLCBpZCwgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgY29uc3QgbmV3SWQgPSBpbnNlcnQob3JhbWEsIGRvYywgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgaWYgKCFza2lwSG9va3MgJiYgb3JhbWEuYWZ0ZXJVcGRhdGUpIHtcbiAgICAgICAgcnVuU2luZ2xlSG9vayhvcmFtYS5hZnRlclVwZGF0ZSwgb3JhbWEsIG5ld0lkKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld0lkO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZU11bHRpcGxlKG9yYW1hLCBpZHMsIGRvY3MsIGJhdGNoU2l6ZSwgbGFuZ3VhZ2UsIHNraXBIb29rcykge1xuICAgIGNvbnN0IGFzeW5jTmVlZGVkID0gaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmFmdGVySW5zZXJ0KSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYmVmb3JlSW5zZXJ0KSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYWZ0ZXJSZW1vdmUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5iZWZvcmVSZW1vdmUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5iZWZvcmVVcGRhdGUpIHx8XG4gICAgICAgIGlzQXN5bmNGdW5jdGlvbihvcmFtYS5hZnRlclVwZGF0ZSkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmJlZm9yZVVwZGF0ZU11bHRpcGxlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYWZ0ZXJVcGRhdGVNdWx0aXBsZSkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmJlZm9yZVJlbW92ZU11bHRpcGxlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYWZ0ZXJSZW1vdmVNdWx0aXBsZSkgfHxcbiAgICAgICAgaXNBc3luY0Z1bmN0aW9uKG9yYW1hLmJlZm9yZUluc2VydE11bHRpcGxlKSB8fFxuICAgICAgICBpc0FzeW5jRnVuY3Rpb24ob3JhbWEuYWZ0ZXJJbnNlcnRNdWx0aXBsZSk7XG4gICAgaWYgKGFzeW5jTmVlZGVkKSB7XG4gICAgICAgIHJldHVybiB1cGRhdGVNdWx0aXBsZUFzeW5jKG9yYW1hLCBpZHMsIGRvY3MsIGJhdGNoU2l6ZSwgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgfVxuICAgIHJldHVybiB1cGRhdGVNdWx0aXBsZVN5bmMob3JhbWEsIGlkcywgZG9jcywgYmF0Y2hTaXplLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbn1cbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZU11bHRpcGxlQXN5bmMob3JhbWEsIGlkcywgZG9jcywgYmF0Y2hTaXplLCBsYW5ndWFnZSwgc2tpcEhvb2tzKSB7XG4gICAgaWYgKCFza2lwSG9va3MpIHtcbiAgICAgICAgYXdhaXQgcnVuTXVsdGlwbGVIb29rKG9yYW1hLmJlZm9yZVVwZGF0ZU11bHRpcGxlLCBvcmFtYSwgaWRzKTtcbiAgICB9XG4gICAgY29uc3QgZG9jc0xlbmd0aCA9IGRvY3MubGVuZ3RoO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZG9jc0xlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGVycm9yUHJvcGVydHkgPSBvcmFtYS52YWxpZGF0ZVNjaGVtYShkb2NzW2ldLCBvcmFtYS5zY2hlbWEpO1xuICAgICAgICBpZiAoZXJyb3JQcm9wZXJ0eSkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlRXJyb3IoJ1NDSEVNQV9WQUxJREFUSU9OX0ZBSUxVUkUnLCBlcnJvclByb3BlcnR5KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhd2FpdCByZW1vdmVNdWx0aXBsZShvcmFtYSwgaWRzLCBiYXRjaFNpemUsIGxhbmd1YWdlLCBza2lwSG9va3MpO1xuICAgIGNvbnN0IG5ld0lkcyA9IGF3YWl0IGlubmVySW5zZXJ0TXVsdGlwbGUob3JhbWEsIGRvY3MsIGJhdGNoU2l6ZSwgbGFuZ3VhZ2UsIHNraXBIb29rcyk7XG4gICAgaWYgKCFza2lwSG9va3MpIHtcbiAgICAgICAgYXdhaXQgcnVuTXVsdGlwbGVIb29rKG9yYW1hLmFmdGVyVXBkYXRlTXVsdGlwbGUsIG9yYW1hLCBuZXdJZHMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3SWRzO1xufVxuZnVuY3Rpb24gdXBkYXRlTXVsdGlwbGVTeW5jKG9yYW1hLCBpZHMsIGRvY3MsIGJhdGNoU2l6ZSwgbGFuZ3VhZ2UsIHNraXBIb29rcykge1xuICAgIGlmICghc2tpcEhvb2tzKSB7XG4gICAgICAgIHJ1bk11bHRpcGxlSG9vayhvcmFtYS5iZWZvcmVVcGRhdGVNdWx0aXBsZSwgb3JhbWEsIGlkcyk7XG4gICAgfVxuICAgIGNvbnN0IGRvY3NMZW5ndGggPSBkb2NzLmxlbmd0aDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRvY3NMZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBlcnJvclByb3BlcnR5ID0gb3JhbWEudmFsaWRhdGVTY2hlbWEoZG9jc1tpXSwgb3JhbWEuc2NoZW1hKTtcbiAgICAgICAgaWYgKGVycm9yUHJvcGVydHkpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUVycm9yKCdTQ0hFTUFfVkFMSURBVElPTl9GQUlMVVJFJywgZXJyb3JQcm9wZXJ0eSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVtb3ZlTXVsdGlwbGUob3JhbWEsIGlkcywgYmF0Y2hTaXplLCBsYW5ndWFnZSwgc2tpcEhvb2tzKTtcbiAgICBjb25zdCBuZXdJZHMgPSBpbm5lckluc2VydE11bHRpcGxlKG9yYW1hLCBkb2NzLCBiYXRjaFNpemUsIGxhbmd1YWdlLCBza2lwSG9va3MpO1xuICAgIGlmICghc2tpcEhvb2tzKSB7XG4gICAgICAgIHJ1bk11bHRpcGxlSG9vayhvcmFtYS5hZnRlclVwZGF0ZU11bHRpcGxlLCBvcmFtYSwgbmV3SWRzKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld0lkcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVwZGF0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/update.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/upsert.js":
/*!******************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/methods/upsert.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   upsert: () => (/* binding */ upsert),\n/* harmony export */   upsertMultiple: () => (/* binding */ upsertMultiple)\n/* harmony export */ });\n/* harmony import */ var _components_hooks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/hooks.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/hooks.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* harmony import */ var _insert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./insert.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/insert.js\");\n/* harmony import */ var _update_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./update.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/update.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\n\n\n\n\nfunction upsert(orama, doc, language, skipHooks, options) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return upsertAsync(orama, doc, language, skipHooks, options);\n    }\n    return upsertSync(orama, doc, language, skipHooks, options);\n}\nasync function upsertAsync(orama, doc, language, skipHooks, options) {\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    if (!skipHooks && orama.beforeUpsert) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpsert, orama, id, doc);\n    }\n    // Check if document exists\n    const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n    let resultId;\n    if (existingDoc) {\n        // Document exists, update it\n        resultId = await (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.update)(orama, id, doc, language, skipHooks);\n    }\n    else {\n        // Document doesn't exist, insert it\n        resultId = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks, options);\n    }\n    if (!skipHooks && orama.afterUpsert) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpsert, orama, resultId, doc);\n    }\n    return resultId;\n}\nfunction upsertSync(orama, doc, language, skipHooks, options) {\n    const id = orama.getDocumentIndexId(doc);\n    if (typeof id !== 'string') {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n    }\n    if (!skipHooks && orama.beforeUpsert) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.beforeUpsert, orama, id, doc);\n    }\n    // Check if document exists\n    const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n    let resultId;\n    if (existingDoc) {\n        // Document exists, update it\n        resultId = (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.update)(orama, id, doc, language, skipHooks);\n    }\n    else {\n        // Document doesn't exist, insert it\n        resultId = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.insert)(orama, doc, language, skipHooks, options);\n    }\n    if (!skipHooks && orama.afterUpsert) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runSingleHook)(orama.afterUpsert, orama, resultId, doc);\n    }\n    return resultId;\n}\nfunction upsertMultiple(orama, docs, batchSize, language, skipHooks) {\n    const asyncNeeded = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemove) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdate) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterInsertMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterUpdateMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.beforeRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.afterRemoveMultiple) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.beforeInsert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.insert) ||\n        (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isAsyncFunction)(orama.index.afterInsert);\n    if (asyncNeeded) {\n        return upsertMultipleAsync(orama, docs, batchSize, language, skipHooks);\n    }\n    return upsertMultipleSync(orama, docs, batchSize, language, skipHooks);\n}\nasync function upsertMultipleAsync(orama, docs, batchSize, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpsertMultiple) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpsertMultiple, orama, docs);\n    }\n    // Validate all documents first\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    // Separate documents into insert and update arrays\n    const docsToInsert = [];\n    const docsToUpdate = [];\n    const idsToUpdate = [];\n    for (const doc of docs) {\n        const id = orama.getDocumentIndexId(doc);\n        if (typeof id !== 'string') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n        }\n        const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n        if (existingDoc) {\n            docsToUpdate.push(doc);\n            idsToUpdate.push(id);\n        }\n        else {\n            docsToInsert.push(doc);\n        }\n    }\n    // Perform bulk operations\n    const results = [];\n    if (docsToUpdate.length > 0) {\n        const updateResults = await (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.updateMultiple)(orama, idsToUpdate, docsToUpdate, batchSize, language, skipHooks);\n        results.push(...updateResults);\n    }\n    if (docsToInsert.length > 0) {\n        const insertResults = await (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docsToInsert, batchSize, language, skipHooks);\n        results.push(...insertResults);\n    }\n    if (!skipHooks && orama.afterUpsertMultiple) {\n        await (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpsertMultiple, orama, results);\n    }\n    return results;\n}\nfunction upsertMultipleSync(orama, docs, batchSize, language, skipHooks) {\n    if (!skipHooks && orama.beforeUpsertMultiple) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.beforeUpsertMultiple, orama, docs);\n    }\n    // Validate all documents first\n    const docsLength = docs.length;\n    for (let i = 0; i < docsLength; i++) {\n        const errorProperty = orama.validateSchema(docs[i], orama.schema);\n        if (errorProperty) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('SCHEMA_VALIDATION_FAILURE', errorProperty);\n        }\n    }\n    // Separate documents into insert and update arrays\n    const docsToInsert = [];\n    const docsToUpdate = [];\n    const idsToUpdate = [];\n    for (const doc of docs) {\n        const id = orama.getDocumentIndexId(doc);\n        if (typeof id !== 'string') {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createError)('DOCUMENT_ID_MUST_BE_STRING', typeof id);\n        }\n        const existingDoc = orama.documentsStore.get(orama.data.docs, id);\n        if (existingDoc) {\n            docsToUpdate.push(doc);\n            idsToUpdate.push(id);\n        }\n        else {\n            docsToInsert.push(doc);\n        }\n    }\n    // Perform bulk operations\n    const results = [];\n    if (docsToUpdate.length > 0) {\n        const updateResults = (0,_update_js__WEBPACK_IMPORTED_MODULE_3__.updateMultiple)(orama, idsToUpdate, docsToUpdate, batchSize, language, skipHooks);\n        results.push(...updateResults);\n    }\n    if (docsToInsert.length > 0) {\n        const insertResults = (0,_insert_js__WEBPACK_IMPORTED_MODULE_2__.innerInsertMultiple)(orama, docsToInsert, batchSize, language, skipHooks);\n        results.push(...insertResults);\n    }\n    if (!skipHooks && orama.afterUpsertMultiple) {\n        (0,_components_hooks_js__WEBPACK_IMPORTED_MODULE_0__.runMultipleHook)(orama.afterUpsertMultiple, orama, results);\n    }\n    return results;\n}\n//# sourceMappingURL=upsert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/methods/upsert.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/avl.js":
/*!*************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/trees/avl.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVLNode: () => (/* binding */ AVLNode),\n/* harmony export */   AVLTree: () => (/* binding */ AVLTree)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n\nclass AVLNode {\n    k;\n    v;\n    l = null;\n    r = null;\n    h = 1;\n    constructor(key, value) {\n        this.k = key;\n        this.v = new Set(value);\n    }\n    updateHeight() {\n        this.h = Math.max(AVLNode.getHeight(this.l), AVLNode.getHeight(this.r)) + 1;\n    }\n    static getHeight(node) {\n        return node ? node.h : 0;\n    }\n    getBalanceFactor() {\n        return AVLNode.getHeight(this.l) - AVLNode.getHeight(this.r);\n    }\n    rotateLeft() {\n        const newRoot = this.r;\n        this.r = newRoot.l;\n        newRoot.l = this;\n        this.updateHeight();\n        newRoot.updateHeight();\n        return newRoot;\n    }\n    rotateRight() {\n        const newRoot = this.l;\n        this.l = newRoot.r;\n        newRoot.r = this;\n        this.updateHeight();\n        newRoot.updateHeight();\n        return newRoot;\n    }\n    toJSON() {\n        return {\n            k: this.k,\n            v: Array.from(this.v),\n            l: this.l ? this.l.toJSON() : null,\n            r: this.r ? this.r.toJSON() : null,\n            h: this.h\n        };\n    }\n    static fromJSON(json) {\n        const node = new AVLNode(json.k, json.v);\n        node.l = json.l ? AVLNode.fromJSON(json.l) : null;\n        node.r = json.r ? AVLNode.fromJSON(json.r) : null;\n        node.h = json.h;\n        return node;\n    }\n}\nclass AVLTree {\n    root = null;\n    insertCount = 0;\n    constructor(key, value) {\n        if (key !== undefined && value !== undefined) {\n            this.root = new AVLNode(key, value);\n        }\n    }\n    insert(key, value, rebalanceThreshold = 1000) {\n        this.root = this.insertNode(this.root, key, value, rebalanceThreshold);\n    }\n    insertMultiple(key, value, rebalanceThreshold = 1000) {\n        for (const v of value) {\n            this.insert(key, v, rebalanceThreshold);\n        }\n    }\n    // Rebalance the tree if the insert count reaches the threshold.\n    // This will improve insertion performance since we won't be rebalancing the tree on every insert.\n    // When inserting docs using `insertMultiple`, the threshold will be set to the number of docs being inserted.\n    // We can force rebalancing the tree by setting the threshold to 1 (default).\n    rebalance() {\n        if (this.root) {\n            this.root = this.rebalanceNode(this.root);\n        }\n    }\n    toJSON() {\n        return {\n            root: this.root ? this.root.toJSON() : null,\n            insertCount: this.insertCount\n        };\n    }\n    static fromJSON(json) {\n        const tree = new AVLTree();\n        tree.root = json.root ? AVLNode.fromJSON(json.root) : null;\n        tree.insertCount = json.insertCount || 0;\n        return tree;\n    }\n    insertNode(node, key, value, rebalanceThreshold) {\n        if (node === null) {\n            return new AVLNode(key, [value]);\n        }\n        const path = [];\n        let current = node;\n        let parent = null;\n        while (current !== null) {\n            path.push({ parent, node: current });\n            if (key < current.k) {\n                if (current.l === null) {\n                    current.l = new AVLNode(key, [value]);\n                    path.push({ parent: current, node: current.l });\n                    break;\n                }\n                else {\n                    parent = current;\n                    current = current.l;\n                }\n            }\n            else if (key > current.k) {\n                if (current.r === null) {\n                    current.r = new AVLNode(key, [value]);\n                    path.push({ parent: current, node: current.r });\n                    break;\n                }\n                else {\n                    parent = current;\n                    current = current.r;\n                }\n            }\n            else {\n                // Key already exists\n                current.v.add(value);\n                /*\n                if (Array.isArray(current.v)) {\n                  if (Array.isArray(value)) {\n                    ;(current.v as any[]).push(...(value as V[]))\n                  } else {\n                    ;(current.v as any[]).push(value)\n                  }\n                } else {\n                  current.v = new Set([value])\n                }\n                */\n                return node;\n            }\n        }\n        // Update heights and rebalance if necessary\n        let needRebalance = false;\n        if (this.insertCount++ % rebalanceThreshold === 0) {\n            needRebalance = true;\n        }\n        for (let i = path.length - 1; i >= 0; i--) {\n            const { parent, node: currentNode } = path[i];\n            currentNode.updateHeight();\n            if (needRebalance) {\n                const rebalancedNode = this.rebalanceNode(currentNode);\n                if (parent) {\n                    if (parent.l === currentNode) {\n                        parent.l = rebalancedNode;\n                    }\n                    else if (parent.r === currentNode) {\n                        parent.r = rebalancedNode;\n                    }\n                }\n                else {\n                    // This is the root node\n                    node = rebalancedNode;\n                }\n            }\n        }\n        return node;\n    }\n    rebalanceNode(node) {\n        const balanceFactor = node.getBalanceFactor();\n        if (balanceFactor > 1) {\n            // Left heavy\n            if (node.l && node.l.getBalanceFactor() >= 0) {\n                // Left Left Case\n                return node.rotateRight();\n            }\n            else if (node.l) {\n                // Left Right Case\n                node.l = node.l.rotateLeft();\n                return node.rotateRight();\n            }\n        }\n        if (balanceFactor < -1) {\n            // Right heavy\n            if (node.r && node.r.getBalanceFactor() <= 0) {\n                // Right Right Case\n                return node.rotateLeft();\n            }\n            else if (node.r) {\n                // Right Left Case\n                node.r = node.r.rotateRight();\n                return node.rotateLeft();\n            }\n        }\n        return node;\n    }\n    find(key) {\n        const node = this.findNodeByKey(key);\n        return node ? node.v : null;\n    }\n    contains(key) {\n        return this.find(key) !== null;\n    }\n    getSize() {\n        let count = 0;\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.l;\n            }\n            current = stack.pop();\n            count++;\n            current = current.r;\n        }\n        return count;\n    }\n    isBalanced() {\n        if (!this.root)\n            return true;\n        const stack = [this.root];\n        while (stack.length > 0) {\n            const node = stack.pop();\n            const balanceFactor = node.getBalanceFactor();\n            if (Math.abs(balanceFactor) > 1) {\n                return false;\n            }\n            if (node.l)\n                stack.push(node.l);\n            if (node.r)\n                stack.push(node.r);\n        }\n        return true;\n    }\n    remove(key) {\n        this.root = this.removeNode(this.root, key);\n    }\n    removeDocument(key, id) {\n        const node = this.findNodeByKey(key);\n        if (!node) {\n            return;\n        }\n        if (node.v.size === 1) {\n            this.root = this.removeNode(this.root, key);\n        }\n        else {\n            node.v = new Set([...node.v.values()].filter((v) => v !== id));\n        }\n    }\n    findNodeByKey(key) {\n        let node = this.root;\n        while (node) {\n            if (key < node.k) {\n                node = node.l;\n            }\n            else if (key > node.k) {\n                node = node.r;\n            }\n            else {\n                return node;\n            }\n        }\n        return null;\n    }\n    removeNode(node, key) {\n        if (node === null)\n            return null;\n        const path = [];\n        let current = node;\n        while (current !== null && current.k !== key) {\n            path.push(current);\n            if (key < current.k) {\n                current = current.l;\n            }\n            else {\n                current = current.r;\n            }\n        }\n        if (current === null) {\n            // Key not found\n            return node;\n        }\n        // Node with only one child or no child\n        if (current.l === null || current.r === null) {\n            const child = current.l ? current.l : current.r;\n            if (path.length === 0) {\n                // Node to be deleted is root\n                node = child;\n            }\n            else {\n                const parent = path[path.length - 1];\n                if (parent.l === current) {\n                    parent.l = child;\n                }\n                else {\n                    parent.r = child;\n                }\n            }\n        }\n        else {\n            // Node with two children: Get the inorder successor\n            let successorParent = current;\n            let successor = current.r;\n            while (successor.l !== null) {\n                successorParent = successor;\n                successor = successor.l;\n            }\n            // Copy the successor's content to current node\n            current.k = successor.k;\n            current.v = successor.v;\n            // Delete the successor\n            if (successorParent.l === successor) {\n                successorParent.l = successor.r;\n            }\n            else {\n                successorParent.r = successor.r;\n            }\n            current = successorParent;\n        }\n        // Update heights and rebalance\n        path.push(current);\n        for (let i = path.length - 1; i >= 0; i--) {\n            const currentNode = path[i];\n            currentNode.updateHeight();\n            const rebalancedNode = this.rebalanceNode(currentNode);\n            if (i > 0) {\n                const parent = path[i - 1];\n                if (parent.l === currentNode) {\n                    parent.l = rebalancedNode;\n                }\n                else if (parent.r === currentNode) {\n                    parent.r = rebalancedNode;\n                }\n            }\n            else {\n                // Root node\n                node = rebalancedNode;\n            }\n        }\n        return node;\n    }\n    rangeSearch(min, max) {\n        let result = new Set();\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.l;\n            }\n            current = stack.pop();\n            if (current.k >= min && current.k <= max) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.setUnion)(result, current.v);\n            }\n            if (current.k > max) {\n                break;\n            }\n            current = current.r;\n        }\n        return result;\n    }\n    greaterThan(key, inclusive = false) {\n        let result = new Set();\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.r; // Traverse right subtree first\n            }\n            current = stack.pop();\n            if ((inclusive && current.k >= key) || (!inclusive && current.k > key)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.setUnion)(result, current.v);\n            }\n            else if (current.k <= key) {\n                break; // Since we're traversing in descending order, we can break early\n            }\n            current = current.l;\n        }\n        return result;\n    }\n    lessThan(key, inclusive = false) {\n        let result = new Set();\n        const stack = [];\n        let current = this.root;\n        while (current || stack.length > 0) {\n            while (current) {\n                stack.push(current);\n                current = current.l;\n            }\n            current = stack.pop();\n            if ((inclusive && current.k <= key) || (!inclusive && current.k < key)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.setUnion)(result, current.v);\n            }\n            else if (current.k > key) {\n                break; // Since we're traversing in ascending order, we can break early\n            }\n            current = current.r;\n        }\n        return result;\n    }\n}\n//# sourceMappingURL=avl.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/avl.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/bkd.js":
/*!*************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/trees/bkd.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BKDTree: () => (/* binding */ BKDTree)\n/* harmony export */ });\nconst K = 2; // 2D points\nconst EARTH_RADIUS = 6371e3; // Earth radius in meters\nclass BKDNode {\n    point;\n    docIDs;\n    left;\n    right;\n    parent;\n    constructor(point, docIDs) {\n        this.point = point;\n        this.docIDs = new Set(docIDs);\n        this.left = null;\n        this.right = null;\n        this.parent = null;\n    }\n    toJSON() {\n        return {\n            point: this.point,\n            docIDs: Array.from(this.docIDs),\n            left: this.left ? this.left.toJSON() : null,\n            right: this.right ? this.right.toJSON() : null\n        };\n    }\n    static fromJSON(json, parent = null) {\n        const node = new BKDNode(json.point, json.docIDs);\n        node.parent = parent;\n        if (json.left) {\n            node.left = BKDNode.fromJSON(json.left, node);\n        }\n        if (json.right) {\n            node.right = BKDNode.fromJSON(json.right, node);\n        }\n        return node;\n    }\n}\nclass BKDTree {\n    root;\n    nodeMap;\n    constructor() {\n        this.root = null;\n        this.nodeMap = new Map();\n    }\n    getPointKey(point) {\n        return `${point.lon},${point.lat}`;\n    }\n    insert(point, docIDs) {\n        const pointKey = this.getPointKey(point);\n        const existingNode = this.nodeMap.get(pointKey);\n        if (existingNode) {\n            docIDs.forEach((id) => existingNode.docIDs.add(id));\n            return;\n        }\n        const newNode = new BKDNode(point, docIDs);\n        this.nodeMap.set(pointKey, newNode);\n        if (this.root == null) {\n            this.root = newNode;\n            return;\n        }\n        let node = this.root;\n        let depth = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const axis = depth % K;\n            if (axis === 0) {\n                if (point.lon < node.point.lon) {\n                    if (node.left == null) {\n                        node.left = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.left;\n                }\n                else {\n                    if (node.right == null) {\n                        node.right = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.right;\n                }\n            }\n            else {\n                if (point.lat < node.point.lat) {\n                    if (node.left == null) {\n                        node.left = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.left;\n                }\n                else {\n                    if (node.right == null) {\n                        node.right = newNode;\n                        newNode.parent = node;\n                        return;\n                    }\n                    node = node.right;\n                }\n            }\n            depth++;\n        }\n    }\n    contains(point) {\n        const pointKey = this.getPointKey(point);\n        return this.nodeMap.has(pointKey);\n    }\n    getDocIDsByCoordinates(point) {\n        const pointKey = this.getPointKey(point);\n        const node = this.nodeMap.get(pointKey);\n        if (node) {\n            return Array.from(node.docIDs);\n        }\n        return null;\n    }\n    removeDocByID(point, docID) {\n        const pointKey = this.getPointKey(point);\n        const node = this.nodeMap.get(pointKey);\n        if (node) {\n            node.docIDs.delete(docID);\n            if (node.docIDs.size === 0) {\n                this.nodeMap.delete(pointKey);\n                this.deleteNode(node);\n            }\n        }\n    }\n    deleteNode(node) {\n        const parent = node.parent;\n        const child = node.left ? node.left : node.right;\n        if (child) {\n            child.parent = parent;\n        }\n        if (parent) {\n            if (parent.left === node) {\n                parent.left = child;\n            }\n            else if (parent.right === node) {\n                parent.right = child;\n            }\n        }\n        else {\n            this.root = child;\n            if (this.root) {\n                this.root.parent = null;\n            }\n        }\n    }\n    searchByRadius(center, radius, inclusive = true, sort = 'asc', highPrecision = false) {\n        const distanceFn = highPrecision ? BKDTree.vincentyDistance : BKDTree.haversineDistance;\n        const stack = [{ node: this.root, depth: 0 }];\n        const result = [];\n        while (stack.length > 0) {\n            const { node, depth } = stack.pop();\n            if (node == null)\n                continue;\n            const dist = distanceFn(center, node.point);\n            if (inclusive ? dist <= radius : dist > radius) {\n                result.push({ point: node.point, docIDs: Array.from(node.docIDs) });\n            }\n            if (node.left != null) {\n                stack.push({ node: node.left, depth: depth + 1 });\n            }\n            if (node.right != null) {\n                stack.push({ node: node.right, depth: depth + 1 });\n            }\n        }\n        if (sort) {\n            result.sort((a, b) => {\n                const distA = distanceFn(center, a.point);\n                const distB = distanceFn(center, b.point);\n                return sort.toLowerCase() === 'asc' ? distA - distB : distB - distA;\n            });\n        }\n        return result;\n    }\n    searchByPolygon(polygon, inclusive = true, sort = null, highPrecision = false) {\n        const stack = [{ node: this.root, depth: 0 }];\n        const result = [];\n        while (stack.length > 0) {\n            const { node, depth } = stack.pop();\n            if (node == null)\n                continue;\n            if (node.left != null) {\n                stack.push({ node: node.left, depth: depth + 1 });\n            }\n            if (node.right != null) {\n                stack.push({ node: node.right, depth: depth + 1 });\n            }\n            const isInsidePolygon = BKDTree.isPointInPolygon(polygon, node.point);\n            if ((isInsidePolygon && inclusive) || (!isInsidePolygon && !inclusive)) {\n                result.push({ point: node.point, docIDs: Array.from(node.docIDs) });\n            }\n        }\n        const centroid = BKDTree.calculatePolygonCentroid(polygon);\n        if (sort) {\n            const distanceFn = highPrecision ? BKDTree.vincentyDistance : BKDTree.haversineDistance;\n            result.sort((a, b) => {\n                const distA = distanceFn(centroid, a.point);\n                const distB = distanceFn(centroid, b.point);\n                return sort.toLowerCase() === 'asc' ? distA - distB : distB - distA;\n            });\n        }\n        return result;\n    }\n    toJSON() {\n        return {\n            root: this.root ? this.root.toJSON() : null\n        };\n    }\n    static fromJSON(json) {\n        const tree = new BKDTree();\n        if (json.root) {\n            tree.root = BKDNode.fromJSON(json.root);\n            tree.buildNodeMap(tree.root);\n        }\n        return tree;\n    }\n    buildNodeMap(node) {\n        if (node == null)\n            return;\n        const pointKey = this.getPointKey(node.point);\n        this.nodeMap.set(pointKey, node);\n        if (node.left) {\n            this.buildNodeMap(node.left);\n        }\n        if (node.right) {\n            this.buildNodeMap(node.right);\n        }\n    }\n    static calculatePolygonCentroid(polygon) {\n        let totalArea = 0;\n        let centroidX = 0;\n        let centroidY = 0;\n        const polygonLength = polygon.length;\n        for (let i = 0, j = polygonLength - 1; i < polygonLength; j = i++) {\n            const xi = polygon[i].lon;\n            const yi = polygon[i].lat;\n            const xj = polygon[j].lon;\n            const yj = polygon[j].lat;\n            const areaSegment = xi * yj - xj * yi;\n            totalArea += areaSegment;\n            centroidX += (xi + xj) * areaSegment;\n            centroidY += (yi + yj) * areaSegment;\n        }\n        totalArea /= 2;\n        const centroidCoordinate = 6 * totalArea;\n        centroidX /= centroidCoordinate;\n        centroidY /= centroidCoordinate;\n        return { lon: centroidX, lat: centroidY };\n    }\n    static isPointInPolygon(polygon, point) {\n        let isInside = false;\n        const x = point.lon;\n        const y = point.lat;\n        const polygonLength = polygon.length;\n        for (let i = 0, j = polygonLength - 1; i < polygonLength; j = i++) {\n            const xi = polygon[i].lon;\n            const yi = polygon[i].lat;\n            const xj = polygon[j].lon;\n            const yj = polygon[j].lat;\n            const intersect = yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n            if (intersect)\n                isInside = !isInside;\n        }\n        return isInside;\n    }\n    static haversineDistance(coord1, coord2) {\n        const P = Math.PI / 180;\n        const lat1 = coord1.lat * P;\n        const lat2 = coord2.lat * P;\n        const deltaLat = (coord2.lat - coord1.lat) * P;\n        const deltaLon = (coord2.lon - coord1.lon) * P;\n        const a = Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +\n            Math.cos(lat1) * Math.cos(lat2) * Math.sin(deltaLon / 2) * Math.sin(deltaLon / 2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n        return EARTH_RADIUS * c;\n    }\n    static vincentyDistance(coord1, coord2) {\n        const a = 6378137;\n        const f = 1 / 298.257223563;\n        const b = (1 - f) * a;\n        const P = Math.PI / 180;\n        const lat1 = coord1.lat * P;\n        const lat2 = coord2.lat * P;\n        const deltaLon = (coord2.lon - coord1.lon) * P;\n        const U1 = Math.atan((1 - f) * Math.tan(lat1));\n        const U2 = Math.atan((1 - f) * Math.tan(lat2));\n        const sinU1 = Math.sin(U1);\n        const cosU1 = Math.cos(U1);\n        const sinU2 = Math.sin(U2);\n        const cosU2 = Math.cos(U2);\n        let lambda = deltaLon;\n        let prevLambda;\n        let iterationLimit = 1000;\n        let sinSigma;\n        let cosSigma;\n        let sigma;\n        let sinAlpha;\n        let cos2Alpha;\n        let cos2SigmaM;\n        do {\n            const sinLambda = Math.sin(lambda);\n            const cosLambda = Math.cos(lambda);\n            sinSigma = Math.sqrt(cosU2 * sinLambda * (cosU2 * sinLambda) +\n                (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda) * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda));\n            if (sinSigma === 0)\n                return 0; // co-incident points\n            cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n            sigma = Math.atan2(sinSigma, cosSigma);\n            sinAlpha = (cosU1 * cosU2 * sinLambda) / sinSigma;\n            cos2Alpha = 1 - sinAlpha * sinAlpha;\n            cos2SigmaM = cosSigma - (2 * sinU1 * sinU2) / cos2Alpha;\n            if (isNaN(cos2SigmaM))\n                cos2SigmaM = 0;\n            const C = (f / 16) * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n            prevLambda = lambda;\n            lambda =\n                deltaLon +\n                    (1 - C) *\n                        f *\n                        sinAlpha *\n                        (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n        } while (Math.abs(lambda - prevLambda) > 1e-12 && --iterationLimit > 0);\n        if (iterationLimit === 0) {\n            return NaN;\n        }\n        const uSquared = (cos2Alpha * (a * a - b * b)) / (b * b);\n        const A = 1 + (uSquared / 16384) * (4096 + uSquared * (-768 + uSquared * (320 - 175 * uSquared)));\n        const B = (uSquared / 1024) * (256 + uSquared * (-128 + uSquared * (74 - 47 * uSquared)));\n        const deltaSigma = B *\n            sinSigma *\n            (cos2SigmaM +\n                (B / 4) *\n                    (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM) -\n                        (B / 6) * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n        const s = b * A * (sigma - deltaSigma);\n        return s;\n    }\n}\n//# sourceMappingURL=bkd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/bkd.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/bool.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/trees/bool.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BoolNode: () => (/* binding */ BoolNode)\n/* harmony export */ });\nclass BoolNode {\n    true;\n    false;\n    constructor() {\n        this.true = new Set();\n        this.false = new Set();\n    }\n    insert(value, bool) {\n        if (bool) {\n            this.true.add(value);\n        }\n        else {\n            this.false.add(value);\n        }\n    }\n    delete(value, bool) {\n        if (bool) {\n            this.true.delete(value);\n        }\n        else {\n            this.false.delete(value);\n        }\n    }\n    getSize() {\n        return this.true.size + this.false.size;\n    }\n    toJSON() {\n        return {\n            true: Array.from(this.true),\n            false: Array.from(this.false)\n        };\n    }\n    static fromJSON(json) {\n        const node = new BoolNode();\n        node.true = new Set(json.true);\n        node.false = new Set(json.false);\n        return node;\n    }\n}\n//# sourceMappingURL=bool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL3RyZWVzL2Jvb2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL3RyZWVzL2Jvb2wuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEJvb2xOb2RlIHtcbiAgICB0cnVlO1xuICAgIGZhbHNlO1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnRydWUgPSBuZXcgU2V0KCk7XG4gICAgICAgIHRoaXMuZmFsc2UgPSBuZXcgU2V0KCk7XG4gICAgfVxuICAgIGluc2VydCh2YWx1ZSwgYm9vbCkge1xuICAgICAgICBpZiAoYm9vbCkge1xuICAgICAgICAgICAgdGhpcy50cnVlLmFkZCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmZhbHNlLmFkZCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVsZXRlKHZhbHVlLCBib29sKSB7XG4gICAgICAgIGlmIChib29sKSB7XG4gICAgICAgICAgICB0aGlzLnRydWUuZGVsZXRlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZmFsc2UuZGVsZXRlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXRTaXplKCkge1xuICAgICAgICByZXR1cm4gdGhpcy50cnVlLnNpemUgKyB0aGlzLmZhbHNlLnNpemU7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRydWU6IEFycmF5LmZyb20odGhpcy50cnVlKSxcbiAgICAgICAgICAgIGZhbHNlOiBBcnJheS5mcm9tKHRoaXMuZmFsc2UpXG4gICAgICAgIH07XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSlNPTihqc29uKSB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSBuZXcgQm9vbE5vZGUoKTtcbiAgICAgICAgbm9kZS50cnVlID0gbmV3IFNldChqc29uLnRydWUpO1xuICAgICAgICBub2RlLmZhbHNlID0gbmV3IFNldChqc29uLmZhbHNlKTtcbiAgICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Ym9vbC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/bool.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/flat.js":
/*!**************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/trees/flat.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlatTree: () => (/* binding */ FlatTree)\n/* harmony export */ });\nclass FlatTree {\n    numberToDocumentId;\n    constructor() {\n        this.numberToDocumentId = new Map();\n    }\n    insert(key, value) {\n        if (this.numberToDocumentId.has(key)) {\n            this.numberToDocumentId.get(key).add(value);\n        }\n        else {\n            this.numberToDocumentId.set(key, new Set([value]));\n        }\n    }\n    find(key) {\n        const idSet = this.numberToDocumentId.get(key);\n        return idSet ? Array.from(idSet) : null;\n    }\n    remove(key) {\n        this.numberToDocumentId.delete(key);\n    }\n    removeDocument(id, key) {\n        const idSet = this.numberToDocumentId.get(key);\n        if (idSet) {\n            idSet.delete(id);\n            if (idSet.size === 0) {\n                this.numberToDocumentId.delete(key);\n            }\n        }\n    }\n    contains(key) {\n        return this.numberToDocumentId.has(key);\n    }\n    getSize() {\n        let size = 0;\n        for (const idSet of this.numberToDocumentId.values()) {\n            size += idSet.size;\n        }\n        return size;\n    }\n    filter(operation) {\n        const operationKeys = Object.keys(operation);\n        if (operationKeys.length !== 1) {\n            throw new Error('Invalid operation');\n        }\n        const operationType = operationKeys[0];\n        switch (operationType) {\n            case 'eq': {\n                const value = operation[operationType];\n                const idSet = this.numberToDocumentId.get(value);\n                return idSet ? Array.from(idSet) : [];\n            }\n            case 'in': {\n                const values = operation[operationType];\n                const resultSet = new Set();\n                for (const value of values) {\n                    const idSet = this.numberToDocumentId.get(value);\n                    if (idSet) {\n                        for (const id of idSet) {\n                            resultSet.add(id);\n                        }\n                    }\n                }\n                return Array.from(resultSet);\n            }\n            case 'nin': {\n                const excludeValues = new Set(operation[operationType]);\n                const resultSet = new Set();\n                for (const [key, idSet] of this.numberToDocumentId.entries()) {\n                    if (!excludeValues.has(key)) {\n                        for (const id of idSet) {\n                            resultSet.add(id);\n                        }\n                    }\n                }\n                return Array.from(resultSet);\n            }\n            default:\n                throw new Error('Invalid operation');\n        }\n    }\n    filterArr(operation) {\n        const operationKeys = Object.keys(operation);\n        if (operationKeys.length !== 1) {\n            throw new Error('Invalid operation');\n        }\n        const operationType = operationKeys[0];\n        switch (operationType) {\n            case 'containsAll': {\n                const values = operation[operationType];\n                const idSets = values.map((value) => this.numberToDocumentId.get(value) ?? new Set());\n                if (idSets.length === 0)\n                    return [];\n                const intersection = idSets.reduce((prev, curr) => {\n                    return new Set([...prev].filter((id) => curr.has(id)));\n                });\n                return Array.from(intersection);\n            }\n            case 'containsAny': {\n                const values = operation[operationType];\n                const idSets = values.map((value) => this.numberToDocumentId.get(value) ?? new Set());\n                if (idSets.length === 0)\n                    return [];\n                const union = idSets.reduce((prev, curr) => {\n                    return new Set([...prev, ...curr]);\n                });\n                return Array.from(union);\n            }\n            default:\n                throw new Error('Invalid operation');\n        }\n    }\n    static fromJSON(json) {\n        if (!json.numberToDocumentId) {\n            throw new Error('Invalid Flat Tree JSON');\n        }\n        const tree = new FlatTree();\n        for (const [key, ids] of json.numberToDocumentId) {\n            tree.numberToDocumentId.set(key, new Set(ids));\n        }\n        return tree;\n    }\n    toJSON() {\n        return {\n            numberToDocumentId: Array.from(this.numberToDocumentId.entries()).map(([key, idSet]) => [key, Array.from(idSet)])\n        };\n    }\n}\n//# sourceMappingURL=flat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL3RyZWVzL2ZsYXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL3RyZWVzL2ZsYXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEZsYXRUcmVlIHtcbiAgICBudW1iZXJUb0RvY3VtZW50SWQ7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMubnVtYmVyVG9Eb2N1bWVudElkID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBpbnNlcnQoa2V5LCB2YWx1ZSkge1xuICAgICAgICBpZiAodGhpcy5udW1iZXJUb0RvY3VtZW50SWQuaGFzKGtleSkpIHtcbiAgICAgICAgICAgIHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmdldChrZXkpLmFkZCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5zZXQoa2V5LCBuZXcgU2V0KFt2YWx1ZV0pKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmaW5kKGtleSkge1xuICAgICAgICBjb25zdCBpZFNldCA9IHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmdldChrZXkpO1xuICAgICAgICByZXR1cm4gaWRTZXQgPyBBcnJheS5mcm9tKGlkU2V0KSA6IG51bGw7XG4gICAgfVxuICAgIHJlbW92ZShrZXkpIHtcbiAgICAgICAgdGhpcy5udW1iZXJUb0RvY3VtZW50SWQuZGVsZXRlKGtleSk7XG4gICAgfVxuICAgIHJlbW92ZURvY3VtZW50KGlkLCBrZXkpIHtcbiAgICAgICAgY29uc3QgaWRTZXQgPSB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5nZXQoa2V5KTtcbiAgICAgICAgaWYgKGlkU2V0KSB7XG4gICAgICAgICAgICBpZFNldC5kZWxldGUoaWQpO1xuICAgICAgICAgICAgaWYgKGlkU2V0LnNpemUgPT09IDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb250YWlucyhrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubnVtYmVyVG9Eb2N1bWVudElkLmhhcyhrZXkpO1xuICAgIH1cbiAgICBnZXRTaXplKCkge1xuICAgICAgICBsZXQgc2l6ZSA9IDA7XG4gICAgICAgIGZvciAoY29uc3QgaWRTZXQgb2YgdGhpcy5udW1iZXJUb0RvY3VtZW50SWQudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIHNpemUgKz0gaWRTZXQuc2l6ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICB9XG4gICAgZmlsdGVyKG9wZXJhdGlvbikge1xuICAgICAgICBjb25zdCBvcGVyYXRpb25LZXlzID0gT2JqZWN0LmtleXMob3BlcmF0aW9uKTtcbiAgICAgICAgaWYgKG9wZXJhdGlvbktleXMubGVuZ3RoICE9PSAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgb3BlcmF0aW9uJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uVHlwZSA9IG9wZXJhdGlvbktleXNbMF07XG4gICAgICAgIHN3aXRjaCAob3BlcmF0aW9uVHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnZXEnOiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBvcGVyYXRpb25bb3BlcmF0aW9uVHlwZV07XG4gICAgICAgICAgICAgICAgY29uc3QgaWRTZXQgPSB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5nZXQodmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBpZFNldCA/IEFycmF5LmZyb20oaWRTZXQpIDogW107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXNlICdpbic6IHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSBvcGVyYXRpb25bb3BlcmF0aW9uVHlwZV07XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0U2V0ID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlkU2V0ID0gdGhpcy5udW1iZXJUb0RvY3VtZW50SWQuZ2V0KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlkU2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlkIG9mIGlkU2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0U2V0LmFkZChpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20ocmVzdWx0U2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ25pbic6IHtcbiAgICAgICAgICAgICAgICBjb25zdCBleGNsdWRlVmFsdWVzID0gbmV3IFNldChvcGVyYXRpb25bb3BlcmF0aW9uVHlwZV0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdFNldCA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIGlkU2V0XSBvZiB0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5lbnRyaWVzKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFleGNsdWRlVmFsdWVzLmhhcyhrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGlkIG9mIGlkU2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0U2V0LmFkZChpZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20ocmVzdWx0U2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG9wZXJhdGlvbicpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZpbHRlckFycihvcGVyYXRpb24pIHtcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uS2V5cyA9IE9iamVjdC5rZXlzKG9wZXJhdGlvbik7XG4gICAgICAgIGlmIChvcGVyYXRpb25LZXlzLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIG9wZXJhdGlvbicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9wZXJhdGlvblR5cGUgPSBvcGVyYXRpb25LZXlzWzBdO1xuICAgICAgICBzd2l0Y2ggKG9wZXJhdGlvblR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ2NvbnRhaW5zQWxsJzoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IG9wZXJhdGlvbltvcGVyYXRpb25UeXBlXTtcbiAgICAgICAgICAgICAgICBjb25zdCBpZFNldHMgPSB2YWx1ZXMubWFwKCh2YWx1ZSkgPT4gdGhpcy5udW1iZXJUb0RvY3VtZW50SWQuZ2V0KHZhbHVlKSA/PyBuZXcgU2V0KCkpO1xuICAgICAgICAgICAgICAgIGlmIChpZFNldHMubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICAgICAgY29uc3QgaW50ZXJzZWN0aW9uID0gaWRTZXRzLnJlZHVjZSgocHJldiwgY3VycikgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFNldChbLi4ucHJldl0uZmlsdGVyKChpZCkgPT4gY3Vyci5oYXMoaWQpKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oaW50ZXJzZWN0aW9uKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhc2UgJ2NvbnRhaW5zQW55Jzoge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IG9wZXJhdGlvbltvcGVyYXRpb25UeXBlXTtcbiAgICAgICAgICAgICAgICBjb25zdCBpZFNldHMgPSB2YWx1ZXMubWFwKCh2YWx1ZSkgPT4gdGhpcy5udW1iZXJUb0RvY3VtZW50SWQuZ2V0KHZhbHVlKSA/PyBuZXcgU2V0KCkpO1xuICAgICAgICAgICAgICAgIGlmIChpZFNldHMubGVuZ3RoID09PSAwKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICAgICAgY29uc3QgdW5pb24gPSBpZFNldHMucmVkdWNlKChwcmV2LCBjdXJyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgU2V0KFsuLi5wcmV2LCAuLi5jdXJyXSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20odW5pb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgb3BlcmF0aW9uJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGZyb21KU09OKGpzb24pIHtcbiAgICAgICAgaWYgKCFqc29uLm51bWJlclRvRG9jdW1lbnRJZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIEZsYXQgVHJlZSBKU09OJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdHJlZSA9IG5ldyBGbGF0VHJlZSgpO1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIGlkc10gb2YganNvbi5udW1iZXJUb0RvY3VtZW50SWQpIHtcbiAgICAgICAgICAgIHRyZWUubnVtYmVyVG9Eb2N1bWVudElkLnNldChrZXksIG5ldyBTZXQoaWRzKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRyZWU7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG51bWJlclRvRG9jdW1lbnRJZDogQXJyYXkuZnJvbSh0aGlzLm51bWJlclRvRG9jdW1lbnRJZC5lbnRyaWVzKCkpLm1hcCgoW2tleSwgaWRTZXRdKSA9PiBba2V5LCBBcnJheS5mcm9tKGlkU2V0KV0pXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmxhdC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/flat.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/radix.js":
/*!***************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/trees/radix.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RadixNode: () => (/* binding */ RadixNode),\n/* harmony export */   RadixTree: () => (/* binding */ RadixTree)\n/* harmony export */ });\n/* harmony import */ var _components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../components/levenshtein.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/components/levenshtein.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\");\n/* eslint-disable @typescript-eslint/no-this-alias */\n\n\nclass RadixNode {\n    // Node key\n    k;\n    // Node subword\n    s;\n    // Node children\n    c = new Map();\n    // Node documents\n    d = new Set();\n    // Node end\n    e;\n    // Node word\n    w = '';\n    constructor(key, subWord, end) {\n        this.k = key;\n        this.s = subWord;\n        this.e = end;\n    }\n    updateParent(parent) {\n        this.w = parent.w + this.s;\n    }\n    addDocument(docID) {\n        this.d.add(docID);\n    }\n    removeDocument(docID) {\n        return this.d.delete(docID);\n    }\n    findAllWords(output, term, exact, tolerance) {\n        const stack = [this];\n        while (stack.length > 0) {\n            const node = stack.pop();\n            if (node.e) {\n                const { w, d: docIDs } = node;\n                if (exact && w !== term) {\n                    continue;\n                }\n                // check if _output[w] exists and then add the doc to it\n                // always check in own property to prevent access to inherited properties\n                // fix https://github.com/oramasearch/orama/issues/137\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getOwnProperty)(output, w) !== null) {\n                    if (tolerance) {\n                        const difference = Math.abs(term.length - w.length);\n                        if (difference <= tolerance && (0,_components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__.syncBoundedLevenshtein)(term, w, tolerance).isBounded) {\n                            output[w] = [];\n                        }\n                        else {\n                            continue;\n                        }\n                    }\n                    else {\n                        output[w] = [];\n                    }\n                }\n                // check if _output[w] exists and then add the doc to it\n                // always check in own property to prevent access to inherited properties\n                // fix https://github.com/oramasearch/orama/issues/137\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getOwnProperty)(output, w) != null && docIDs.size > 0) {\n                    const docs = output[w];\n                    for (const docID of docIDs) {\n                        if (!docs.includes(docID)) {\n                            docs.push(docID);\n                        }\n                    }\n                }\n            }\n            if (node.c.size > 0) {\n                stack.push(...node.c.values());\n            }\n        }\n        return output;\n    }\n    insert(word, docId) {\n        let node = this;\n        let i = 0;\n        const wordLength = word.length;\n        while (i < wordLength) {\n            const currentCharacter = word[i];\n            const childNode = node.c.get(currentCharacter);\n            if (childNode) {\n                const edgeLabel = childNode.s;\n                const edgeLabelLength = edgeLabel.length;\n                let j = 0;\n                // Find the common prefix length between edgeLabel and the remaining word\n                while (j < edgeLabelLength && i + j < wordLength && edgeLabel[j] === word[i + j]) {\n                    j++;\n                }\n                if (j === edgeLabelLength) {\n                    // Edge label fully matches; proceed to the child node\n                    node = childNode;\n                    i += j;\n                    if (i === wordLength) {\n                        // The word is a prefix of an existing word\n                        if (!childNode.e) {\n                            childNode.e = true;\n                        }\n                        childNode.addDocument(docId);\n                        return;\n                    }\n                    continue;\n                }\n                // Split the edgeLabel at the common prefix\n                const commonPrefix = edgeLabel.slice(0, j);\n                const newEdgeLabel = edgeLabel.slice(j);\n                const newWordLabel = word.slice(i + j);\n                // Create an intermediate node for the common prefix\n                const inbetweenNode = new RadixNode(commonPrefix[0], commonPrefix, false);\n                node.c.set(commonPrefix[0], inbetweenNode);\n                inbetweenNode.updateParent(node);\n                // Update the existing childNode\n                childNode.s = newEdgeLabel;\n                childNode.k = newEdgeLabel[0];\n                inbetweenNode.c.set(newEdgeLabel[0], childNode);\n                childNode.updateParent(inbetweenNode);\n                if (newWordLabel) {\n                    // Create a new node for the remaining part of the word\n                    const newNode = new RadixNode(newWordLabel[0], newWordLabel, true);\n                    newNode.addDocument(docId);\n                    inbetweenNode.c.set(newWordLabel[0], newNode);\n                    newNode.updateParent(inbetweenNode);\n                }\n                else {\n                    // The word ends at the inbetweenNode\n                    inbetweenNode.e = true;\n                    inbetweenNode.addDocument(docId);\n                }\n                return;\n            }\n            else {\n                // No matching child; create a new node\n                const newNode = new RadixNode(currentCharacter, word.slice(i), true);\n                newNode.addDocument(docId);\n                node.c.set(currentCharacter, newNode);\n                newNode.updateParent(node);\n                return;\n            }\n        }\n        // If we reach here, the word already exists in the tree\n        if (!node.e) {\n            node.e = true;\n        }\n        node.addDocument(docId);\n    }\n    _findLevenshtein(term, index, tolerance, originalTolerance, output) {\n        const stack = [{ node: this, index, tolerance }];\n        while (stack.length > 0) {\n            const { node, index, tolerance } = stack.pop();\n            if (node.w.startsWith(term)) {\n                node.findAllWords(output, term, false, 0);\n                continue;\n            }\n            if (tolerance < 0) {\n                continue;\n            }\n            if (node.e) {\n                const { w, d: docIDs } = node;\n                if (w) {\n                    if ((0,_components_levenshtein_js__WEBPACK_IMPORTED_MODULE_0__.syncBoundedLevenshtein)(term, w, originalTolerance).isBounded) {\n                        output[w] = [];\n                    }\n                    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.getOwnProperty)(output, w) !== undefined && docIDs.size > 0) {\n                        const docs = new Set(output[w]);\n                        for (const docID of docIDs) {\n                            docs.add(docID);\n                        }\n                        output[w] = Array.from(docs);\n                    }\n                }\n            }\n            if (index >= term.length) {\n                continue;\n            }\n            const currentChar = term[index];\n            // 1. If node has child matching term[index], push { node: childNode, index +1, tolerance }\n            if (node.c.has(currentChar)) {\n                const childNode = node.c.get(currentChar);\n                stack.push({ node: childNode, index: index + 1, tolerance });\n            }\n            // 2. Push { node, index +1, tolerance -1 } (Delete operation)\n            stack.push({ node: node, index: index + 1, tolerance: tolerance - 1 });\n            // 3. For each child:\n            for (const [character, childNode] of node.c) {\n                // a) Insert operation\n                stack.push({ node: childNode, index: index, tolerance: tolerance - 1 });\n                // b) Substitute operation\n                if (character !== currentChar) {\n                    stack.push({ node: childNode, index: index + 1, tolerance: tolerance - 1 });\n                }\n            }\n        }\n    }\n    find(params) {\n        const { term, exact, tolerance } = params;\n        if (tolerance && !exact) {\n            const output = {};\n            this._findLevenshtein(term, 0, tolerance, tolerance, output);\n            return output;\n        }\n        else {\n            let node = this;\n            let i = 0;\n            const termLength = term.length;\n            while (i < termLength) {\n                const character = term[i];\n                const childNode = node.c.get(character);\n                if (childNode) {\n                    const edgeLabel = childNode.s;\n                    const edgeLabelLength = edgeLabel.length;\n                    let j = 0;\n                    // Compare edge label with the term starting from position i\n                    while (j < edgeLabelLength && i + j < termLength && edgeLabel[j] === term[i + j]) {\n                        j++;\n                    }\n                    if (j === edgeLabelLength) {\n                        // Full match of edge label; proceed to the child node\n                        node = childNode;\n                        i += j;\n                    }\n                    else if (i + j === termLength) {\n                        // The term ends in the middle of the edge label - FIX: this handles prefix matches like 'p' matching 'phone'\n                        // Check if the term matches from the beginning of the edge label\n                        if (j === termLength - i) {\n                            // Term is a prefix of the edge label\n                            if (exact) {\n                                // Exact match required but term doesn't end at a node\n                                return {};\n                            }\n                            else {\n                                // Partial match; collect words starting from this node\n                                const output = {};\n                                // Just call findAllWords on the child node to collect all words in this subtree\n                                childNode.findAllWords(output, term, exact, tolerance);\n                                return output;\n                            }\n                        }\n                        else {\n                            // Mismatch found\n                            return {};\n                        }\n                    }\n                    else {\n                        // Mismatch found\n                        return {};\n                    }\n                }\n                else {\n                    // No matching child node\n                    return {};\n                }\n            }\n            // Term fully matched; collect words starting from this node\n            const output = {};\n            node.findAllWords(output, term, exact, tolerance);\n            return output;\n        }\n    }\n    contains(term) {\n        let node = this;\n        let i = 0;\n        const termLength = term.length;\n        while (i < termLength) {\n            const character = term[i];\n            const childNode = node.c.get(character);\n            if (childNode) {\n                const edgeLabel = childNode.s;\n                const edgeLabelLength = edgeLabel.length;\n                let j = 0;\n                while (j < edgeLabelLength && i + j < termLength && edgeLabel[j] === term[i + j]) {\n                    j++;\n                }\n                if (j < edgeLabelLength) {\n                    return false;\n                }\n                i += edgeLabelLength;\n                node = childNode;\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    removeWord(term) {\n        if (!term) {\n            return false;\n        }\n        let node = this;\n        const termLength = term.length;\n        const stack = [];\n        for (let i = 0; i < termLength; i++) {\n            const character = term[i];\n            if (node.c.has(character)) {\n                const childNode = node.c.get(character);\n                stack.push({ parent: node, character });\n                i += childNode.s.length - 1;\n                node = childNode;\n            }\n            else {\n                return false;\n            }\n        }\n        // Remove documents from the node\n        node.d.clear();\n        node.e = false;\n        // Clean up any nodes that no longer lead to a word\n        while (stack.length > 0 && node.c.size === 0 && !node.e && node.d.size === 0) {\n            const { parent, character } = stack.pop();\n            parent.c.delete(character);\n            node = parent;\n        }\n        return true;\n    }\n    removeDocumentByWord(term, docID, exact = true) {\n        if (!term) {\n            return true;\n        }\n        let node = this;\n        const termLength = term.length;\n        for (let i = 0; i < termLength; i++) {\n            const character = term[i];\n            if (node.c.has(character)) {\n                const childNode = node.c.get(character);\n                i += childNode.s.length - 1;\n                node = childNode;\n                if (exact && node.w !== term) {\n                    // Do nothing if the exact condition is not met.\n                }\n                else {\n                    node.removeDocument(docID);\n                }\n            }\n            else {\n                return false;\n            }\n        }\n        return true;\n    }\n    static getCommonPrefix(a, b) {\n        const len = Math.min(a.length, b.length);\n        let i = 0;\n        while (i < len && a.charCodeAt(i) === b.charCodeAt(i)) {\n            i++;\n        }\n        return a.slice(0, i);\n    }\n    toJSON() {\n        return {\n            w: this.w,\n            s: this.s,\n            e: this.e,\n            k: this.k,\n            d: Array.from(this.d),\n            c: Array.from(this.c?.entries())?.map(([key, node]) => [key, node.toJSON()])\n        };\n    }\n    static fromJSON(json) {\n        const node = new RadixNode(json.k, json.s, json.e);\n        node.w = json.w;\n        node.d = new Set(json.d);\n        node.c = new Map(json?.c?.map(([key, nodeJson]) => [key, RadixNode.fromJSON(nodeJson)]));\n        return node;\n    }\n}\nclass RadixTree extends RadixNode {\n    constructor() {\n        super('', '', false);\n    }\n    static fromJSON(json) {\n        const tree = new RadixTree();\n        tree.w = json.w;\n        tree.s = json.s;\n        tree.e = json.e;\n        tree.k = json.k;\n        tree.d = new Set(json.d);\n        tree.c = new Map(json.c?.map(([key, nodeJson]) => [key, RadixNode.fromJSON(nodeJson)]));\n        return tree;\n    }\n    toJSON() {\n        return super.toJSON();\n    }\n}\n//# sourceMappingURL=radix.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/radix.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/vector.js":
/*!****************************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/trees/vector.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_SIMILARITY: () => (/* binding */ DEFAULT_SIMILARITY),\n/* harmony export */   VectorIndex: () => (/* binding */ VectorIndex),\n/* harmony export */   findSimilarVectors: () => (/* binding */ findSimilarVectors),\n/* harmony export */   getMagnitude: () => (/* binding */ getMagnitude)\n/* harmony export */ });\nconst DEFAULT_SIMILARITY = 0.8;\nclass VectorIndex {\n    size;\n    vectors = new Map();\n    constructor(size) {\n        this.size = size;\n    }\n    add(internalDocumentId, value) {\n        if (!(value instanceof Float32Array)) {\n            value = new Float32Array(value);\n        }\n        const magnitude = getMagnitude(value, this.size);\n        this.vectors.set(internalDocumentId, [magnitude, value]);\n    }\n    remove(internalDocumentId) {\n        this.vectors.delete(internalDocumentId);\n    }\n    find(vector, similarity, whereFiltersIDs) {\n        if (!(vector instanceof Float32Array)) {\n            vector = new Float32Array(vector);\n        }\n        const results = findSimilarVectors(vector, whereFiltersIDs, this.vectors, this.size, similarity);\n        return results;\n    }\n    toJSON() {\n        const vectors = [];\n        for (const [id, [magnitude, vector]] of this.vectors) {\n            vectors.push([id, [magnitude, Array.from(vector)]]);\n        }\n        return {\n            size: this.size,\n            vectors,\n        };\n    }\n    static fromJSON(json) {\n        const raw = json;\n        const index = new VectorIndex(raw.size);\n        for (const [id, [magnitude, vector]] of raw.vectors) {\n            index.vectors.set(id, [magnitude, new Float32Array(vector)]);\n        }\n        return index;\n    }\n}\nfunction getMagnitude(vector, vectorLength) {\n    let magnitude = 0;\n    for (let i = 0; i < vectorLength; i++) {\n        magnitude += vector[i] * vector[i];\n    }\n    return Math.sqrt(magnitude);\n}\n// @todo: Write plugins for Node and Browsers to use parallel computation for this function\nfunction findSimilarVectors(targetVector, keys, vectors, length, threshold) {\n    const targetMagnitude = getMagnitude(targetVector, length);\n    const similarVectors = [];\n    const base = keys ? keys : vectors.keys();\n    for (const vectorId of base) {\n        const entry = vectors.get(vectorId);\n        if (!entry) {\n            continue;\n        }\n        const magnitude = entry[0];\n        const vector = entry[1];\n        let dotProduct = 0;\n        for (let i = 0; i < length; i++) {\n            dotProduct += targetVector[i] * vector[i];\n        }\n        const similarity = dotProduct / (targetMagnitude * magnitude);\n        if (similarity >= threshold) {\n            similarVectors.push([vectorId, similarity]);\n        }\n    }\n    return similarVectors;\n}\n//# sourceMappingURL=vector.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL3RyZWVzL3ZlY3Rvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU87QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esb0JBQW9CLGtCQUFrQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2Jyb3dzZXIvdHJlZXMvdmVjdG9yLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBERUZBVUxUX1NJTUlMQVJJVFkgPSAwLjg7XG5leHBvcnQgY2xhc3MgVmVjdG9ySW5kZXgge1xuICAgIHNpemU7XG4gICAgdmVjdG9ycyA9IG5ldyBNYXAoKTtcbiAgICBjb25zdHJ1Y3RvcihzaXplKSB7XG4gICAgICAgIHRoaXMuc2l6ZSA9IHNpemU7XG4gICAgfVxuICAgIGFkZChpbnRlcm5hbERvY3VtZW50SWQsIHZhbHVlKSB7XG4gICAgICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgRmxvYXQzMkFycmF5KSkge1xuICAgICAgICAgICAgdmFsdWUgPSBuZXcgRmxvYXQzMkFycmF5KHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBtYWduaXR1ZGUgPSBnZXRNYWduaXR1ZGUodmFsdWUsIHRoaXMuc2l6ZSk7XG4gICAgICAgIHRoaXMudmVjdG9ycy5zZXQoaW50ZXJuYWxEb2N1bWVudElkLCBbbWFnbml0dWRlLCB2YWx1ZV0pO1xuICAgIH1cbiAgICByZW1vdmUoaW50ZXJuYWxEb2N1bWVudElkKSB7XG4gICAgICAgIHRoaXMudmVjdG9ycy5kZWxldGUoaW50ZXJuYWxEb2N1bWVudElkKTtcbiAgICB9XG4gICAgZmluZCh2ZWN0b3IsIHNpbWlsYXJpdHksIHdoZXJlRmlsdGVyc0lEcykge1xuICAgICAgICBpZiAoISh2ZWN0b3IgaW5zdGFuY2VvZiBGbG9hdDMyQXJyYXkpKSB7XG4gICAgICAgICAgICB2ZWN0b3IgPSBuZXcgRmxvYXQzMkFycmF5KHZlY3Rvcik7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcmVzdWx0cyA9IGZpbmRTaW1pbGFyVmVjdG9ycyh2ZWN0b3IsIHdoZXJlRmlsdGVyc0lEcywgdGhpcy52ZWN0b3JzLCB0aGlzLnNpemUsIHNpbWlsYXJpdHkpO1xuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICBjb25zdCB2ZWN0b3JzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgW2lkLCBbbWFnbml0dWRlLCB2ZWN0b3JdXSBvZiB0aGlzLnZlY3RvcnMpIHtcbiAgICAgICAgICAgIHZlY3RvcnMucHVzaChbaWQsIFttYWduaXR1ZGUsIEFycmF5LmZyb20odmVjdG9yKV1dKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2l6ZTogdGhpcy5zaXplLFxuICAgICAgICAgICAgdmVjdG9ycyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21KU09OKGpzb24pIHtcbiAgICAgICAgY29uc3QgcmF3ID0ganNvbjtcbiAgICAgICAgY29uc3QgaW5kZXggPSBuZXcgVmVjdG9ySW5kZXgocmF3LnNpemUpO1xuICAgICAgICBmb3IgKGNvbnN0IFtpZCwgW21hZ25pdHVkZSwgdmVjdG9yXV0gb2YgcmF3LnZlY3RvcnMpIHtcbiAgICAgICAgICAgIGluZGV4LnZlY3RvcnMuc2V0KGlkLCBbbWFnbml0dWRlLCBuZXcgRmxvYXQzMkFycmF5KHZlY3RvcildKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE1hZ25pdHVkZSh2ZWN0b3IsIHZlY3Rvckxlbmd0aCkge1xuICAgIGxldCBtYWduaXR1ZGUgPSAwO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdmVjdG9yTGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbWFnbml0dWRlICs9IHZlY3RvcltpXSAqIHZlY3RvcltpXTtcbiAgICB9XG4gICAgcmV0dXJuIE1hdGguc3FydChtYWduaXR1ZGUpO1xufVxuLy8gQHRvZG86IFdyaXRlIHBsdWdpbnMgZm9yIE5vZGUgYW5kIEJyb3dzZXJzIHRvIHVzZSBwYXJhbGxlbCBjb21wdXRhdGlvbiBmb3IgdGhpcyBmdW5jdGlvblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRTaW1pbGFyVmVjdG9ycyh0YXJnZXRWZWN0b3IsIGtleXMsIHZlY3RvcnMsIGxlbmd0aCwgdGhyZXNob2xkKSB7XG4gICAgY29uc3QgdGFyZ2V0TWFnbml0dWRlID0gZ2V0TWFnbml0dWRlKHRhcmdldFZlY3RvciwgbGVuZ3RoKTtcbiAgICBjb25zdCBzaW1pbGFyVmVjdG9ycyA9IFtdO1xuICAgIGNvbnN0IGJhc2UgPSBrZXlzID8ga2V5cyA6IHZlY3RvcnMua2V5cygpO1xuICAgIGZvciAoY29uc3QgdmVjdG9ySWQgb2YgYmFzZSkge1xuICAgICAgICBjb25zdCBlbnRyeSA9IHZlY3RvcnMuZ2V0KHZlY3RvcklkKTtcbiAgICAgICAgaWYgKCFlbnRyeSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWFnbml0dWRlID0gZW50cnlbMF07XG4gICAgICAgIGNvbnN0IHZlY3RvciA9IGVudHJ5WzFdO1xuICAgICAgICBsZXQgZG90UHJvZHVjdCA9IDA7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGRvdFByb2R1Y3QgKz0gdGFyZ2V0VmVjdG9yW2ldICogdmVjdG9yW2ldO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNpbWlsYXJpdHkgPSBkb3RQcm9kdWN0IC8gKHRhcmdldE1hZ25pdHVkZSAqIG1hZ25pdHVkZSk7XG4gICAgICAgIGlmIChzaW1pbGFyaXR5ID49IHRocmVzaG9sZCkge1xuICAgICAgICAgICAgc2ltaWxhclZlY3RvcnMucHVzaChbdmVjdG9ySWQsIHNpbWlsYXJpdHldKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc2ltaWxhclZlY3RvcnM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZWN0b3IuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/trees/vector.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/types.js":
/*!*********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/types.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MODE_FULLTEXT_SEARCH: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MODE_FULLTEXT_SEARCH),\n/* harmony export */   MODE_HYBRID_SEARCH: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MODE_HYBRID_SEARCH),\n/* harmony export */   MODE_VECTOR_SEARCH: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_0__.MODE_VECTOR_SEARCH),\n/* harmony export */   kInsertions: () => (/* binding */ kInsertions),\n/* harmony export */   kRemovals: () => (/* binding */ kRemovals)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/constants.js\");\n\nconst kInsertions = Symbol('orama.insertions');\nconst kRemovals = Symbol('orama.removals');\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ab3JhbWEvb3JhbWEvZGlzdC9icm93c2VyL3R5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4RjtBQUN2RjtBQUNBO0FBQ1AiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL0BvcmFtYS9vcmFtYS9kaXN0L2Jyb3dzZXIvdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgTU9ERV9GVUxMVEVYVF9TRUFSQ0gsIE1PREVfSFlCUklEX1NFQVJDSCwgTU9ERV9WRUNUT1JfU0VBUkNIIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuZXhwb3J0IGNvbnN0IGtJbnNlcnRpb25zID0gU3ltYm9sKCdvcmFtYS5pbnNlcnRpb25zJyk7XG5leHBvcnQgY29uc3Qga1JlbW92YWxzID0gU3ltYm9sKCdvcmFtYS5yZW1vdmFscycpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/types.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/@orama/orama/dist/browser/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MAX_ARGUMENT_FOR_STACK: () => (/* binding */ MAX_ARGUMENT_FOR_STACK),\n/* harmony export */   convertDistanceToMeters: () => (/* binding */ convertDistanceToMeters),\n/* harmony export */   flattenObject: () => (/* binding */ flattenObject),\n/* harmony export */   formatBytes: () => (/* binding */ formatBytes),\n/* harmony export */   formatNanoseconds: () => (/* binding */ formatNanoseconds),\n/* harmony export */   getDocumentProperties: () => (/* binding */ getDocumentProperties),\n/* harmony export */   getNanosecondTimeViaPerformance: () => (/* binding */ getNanosecondTimeViaPerformance),\n/* harmony export */   getNanosecondsTime: () => (/* binding */ getNanosecondsTime),\n/* harmony export */   getNested: () => (/* binding */ getNested),\n/* harmony export */   getOwnProperty: () => (/* binding */ getOwnProperty),\n/* harmony export */   getTokenFrequency: () => (/* binding */ getTokenFrequency),\n/* harmony export */   insertSortedValue: () => (/* binding */ insertSortedValue),\n/* harmony export */   intersect: () => (/* binding */ intersect),\n/* harmony export */   isAsyncFunction: () => (/* binding */ isAsyncFunction),\n/* harmony export */   isInsideNode: () => (/* binding */ isInsideNode),\n/* harmony export */   isInsideWebWorker: () => (/* binding */ isInsideWebWorker),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   removeVectorsFromHits: () => (/* binding */ removeVectorsFromHits),\n/* harmony export */   safeArrayPush: () => (/* binding */ safeArrayPush),\n/* harmony export */   setDifference: () => (/* binding */ setDifference),\n/* harmony export */   setIntersection: () => (/* binding */ setIntersection),\n/* harmony export */   setUnion: () => (/* binding */ setUnion),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   sortTokenScorePredicate: () => (/* binding */ sortTokenScorePredicate),\n/* harmony export */   sprintf: () => (/* binding */ sprintf),\n/* harmony export */   uniqueId: () => (/* binding */ uniqueId)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/errors.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst baseId = Date.now().toString().slice(5);\nlet lastId = 0;\nconst k = 1024;\nconst nano = BigInt(1e3);\nconst milli = BigInt(1e6);\nconst second = BigInt(1e9);\nconst isServer = typeof window === 'undefined';\n/**\n * This value can be increased up to 100_000\n * But i don't know if this value change from nodejs to nodejs\n * So I will keep a safer value here.\n */\nconst MAX_ARGUMENT_FOR_STACK = 65535;\n/**\n * This method is needed to used because of issues like: https://github.com/oramasearch/orama/issues/301\n * that issue is caused because the array that is pushed is huge (>100k)\n *\n * @example\n * ```ts\n * safeArrayPush(myArray, [1, 2])\n * ```\n */\nfunction safeArrayPush(arr, newArr) {\n    if (newArr.length < MAX_ARGUMENT_FOR_STACK) {\n        Array.prototype.push.apply(arr, newArr);\n    }\n    else {\n        const newArrLength = newArr.length;\n        for (let i = 0; i < newArrLength; i += MAX_ARGUMENT_FOR_STACK) {\n            Array.prototype.push.apply(arr, newArr.slice(i, i + MAX_ARGUMENT_FOR_STACK));\n        }\n    }\n}\nfunction sprintf(template, ...args) {\n    return template.replace(/%(?:(?<position>\\d+)\\$)?(?<width>-?\\d*\\.?\\d*)(?<type>[dfs])/g, function (...replaceArgs) {\n        const groups = replaceArgs[replaceArgs.length - 1];\n        const { width: rawWidth, type, position } = groups;\n        const replacement = position ? args[Number.parseInt(position) - 1] : args.shift();\n        const width = rawWidth === '' ? 0 : Number.parseInt(rawWidth);\n        switch (type) {\n            case 'd':\n                return replacement.toString().padStart(width, '0');\n            case 'f': {\n                let value = replacement;\n                const [padding, precision] = rawWidth.split('.').map((w) => Number.parseFloat(w));\n                if (typeof precision === 'number' && precision >= 0) {\n                    value = value.toFixed(precision);\n                }\n                return typeof padding === 'number' && padding >= 0 ? value.toString().padStart(width, '0') : value.toString();\n            }\n            case 's':\n                return width < 0\n                    ? replacement.toString().padEnd(-width, ' ')\n                    : replacement.toString().padStart(width, ' ');\n            default:\n                return replacement;\n        }\n    });\n}\nfunction formatBytes(bytes, decimals = 2) {\n    if (bytes === 0) {\n        return '0 Bytes';\n    }\n    const dm = decimals < 0 ? 0 : decimals;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\nfunction isInsideWebWorker() {\n    // @ts-expect-error - WebWorker global scope\n    return typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n}\nfunction isInsideNode() {\n    return typeof process !== 'undefined' && process.release && process.release.name === 'node';\n}\nfunction getNanosecondTimeViaPerformance() {\n    return BigInt(Math.floor(performance.now() * 1e6));\n}\nfunction formatNanoseconds(value) {\n    if (typeof value === 'number') {\n        value = BigInt(value);\n    }\n    if (value < nano) {\n        return `${value}ns`;\n    }\n    else if (value < milli) {\n        return `${value / nano}μs`;\n    }\n    else if (value < second) {\n        return `${value / milli}ms`;\n    }\n    return `${value / second}s`;\n}\nfunction getNanosecondsTime() {\n    if (isInsideWebWorker()) {\n        return getNanosecondTimeViaPerformance();\n    }\n    if (isInsideNode()) {\n        return process.hrtime.bigint();\n    }\n    if (typeof process !== 'undefined' && typeof process?.hrtime?.bigint === 'function') {\n        return process.hrtime.bigint();\n    }\n    if (typeof performance !== 'undefined') {\n        return getNanosecondTimeViaPerformance();\n    }\n    // @todo: fallback to V8 native method to get microtime\n    return BigInt(0);\n}\nfunction uniqueId() {\n    return `${baseId}-${lastId++}`;\n}\nfunction getOwnProperty(object, property) {\n    // Checks if `hasOwn` method is defined avoiding errors with older Node.js versions\n    if (Object.hasOwn === undefined) {\n        return Object.prototype.hasOwnProperty.call(object, property) ? object[property] : undefined;\n    }\n    return Object.hasOwn(object, property) ? object[property] : undefined;\n}\nfunction getTokenFrequency(token, tokens) {\n    let count = 0;\n    for (const t of tokens) {\n        if (t === token) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction insertSortedValue(arr, el, compareFn = sortTokenScorePredicate) {\n    let low = 0;\n    let high = arr.length;\n    let mid;\n    while (low < high) {\n        mid = (low + high) >>> 1;\n        if (compareFn(el, arr[mid]) < 0) {\n            high = mid;\n        }\n        else {\n            low = mid + 1;\n        }\n    }\n    arr.splice(low, 0, el);\n    return arr;\n}\nfunction sortTokenScorePredicate(a, b) {\n    if (b[1] === a[1]) {\n        return a[0] - b[0];\n    }\n    return b[1] - a[1];\n}\n// Intersection function taken from https://github.com/lovasoa/fast_array_intersect.\n// MIT Licensed at the time of writing.\nfunction intersect(arrays) {\n    if (arrays.length === 0) {\n        return [];\n    }\n    else if (arrays.length === 1) {\n        return arrays[0];\n    }\n    for (let i = 1; i < arrays.length; i++) {\n        if (arrays[i].length < arrays[0].length) {\n            const tmp = arrays[0];\n            arrays[0] = arrays[i];\n            arrays[i] = tmp;\n        }\n    }\n    const set = new Map();\n    for (const elem of arrays[0]) {\n        set.set(elem, 1);\n    }\n    for (let i = 1; i < arrays.length; i++) {\n        let found = 0;\n        for (const elem of arrays[i]) {\n            const count = set.get(elem);\n            if (count === i) {\n                set.set(elem, count + 1);\n                found++;\n            }\n        }\n        if (found === 0)\n            return [];\n    }\n    return arrays[0].filter((e) => {\n        const count = set.get(e);\n        if (count !== undefined)\n            set.set(e, 0);\n        return count === arrays.length;\n    });\n}\nfunction getDocumentProperties(doc, paths) {\n    const properties = {};\n    const pathsLength = paths.length;\n    for (let i = 0; i < pathsLength; i++) {\n        const path = paths[i];\n        const pathTokens = path.split('.');\n        let current = doc;\n        const pathTokensLength = pathTokens.length;\n        for (let j = 0; j < pathTokensLength; j++) {\n            current = current[pathTokens[j]];\n            // We found an object but we were supposed to be done\n            if (typeof current === 'object') {\n                if (current !== null &&\n                    'lat' in current &&\n                    'lon' in current &&\n                    typeof current.lat === 'number' &&\n                    typeof current.lon === 'number') {\n                    current = properties[path] = current;\n                    break;\n                }\n                else if (!Array.isArray(current) && current !== null && j === pathTokensLength - 1) {\n                    current = undefined;\n                    break;\n                }\n            }\n            else if ((current === null || typeof current !== 'object') && j < pathTokensLength - 1) {\n                // We can't recurse anymore but we were supposed to\n                current = undefined;\n                break;\n            }\n        }\n        if (typeof current !== 'undefined') {\n            properties[path] = current;\n        }\n    }\n    return properties;\n}\nfunction getNested(obj, path) {\n    const props = getDocumentProperties(obj, [path]);\n    return props[path];\n}\nfunction flattenObject(obj, prefix = '') {\n    const result = {};\n    for (const key in obj) {\n        const prop = `${prefix}${key}`;\n        const objKey = obj[key];\n        if (typeof objKey === 'object' && objKey !== null) {\n            Object.assign(result, flattenObject(objKey, `${prop}.`));\n        }\n        else {\n            result[prop] = objKey;\n        }\n    }\n    return result;\n}\nconst mapDistanceToMeters = {\n    cm: 0.01,\n    m: 1,\n    km: 1000,\n    ft: 0.3048,\n    yd: 0.9144,\n    mi: 1609.344\n};\nfunction convertDistanceToMeters(distance, unit) {\n    const ratio = mapDistanceToMeters[unit];\n    if (ratio === undefined) {\n        throw new Error((0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createError)('INVALID_DISTANCE_SUFFIX', distance).message);\n    }\n    return distance * ratio;\n}\nfunction removeVectorsFromHits(searchResult, vectorProperties) {\n    searchResult.hits = searchResult.hits.map((result) => ({\n        ...result,\n        document: {\n            ...result.document,\n            // Remove embeddings from the result\n            ...vectorProperties.reduce((acc, prop) => {\n                const path = prop.split('.');\n                const lastKey = path.pop();\n                let obj = acc;\n                for (const key of path) {\n                    obj[key] = obj[key] ?? {};\n                    obj = obj[key];\n                }\n                obj[lastKey] = null;\n                return acc;\n            }, result.document)\n        }\n    }));\n}\nfunction isPromise(obj) {\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n/**\n * Checks if the provided input is an async function or if the input is an array\n * containing at least one async function.\n *\n * @param func - A single function or an array of functions to check.\n *               Non-function values are ignored.\n * @returns `true` if the input is an async function or an array containing at least\n *          one async function, otherwise `false`.\n */\nfunction isAsyncFunction(func) {\n    if (Array.isArray(func)) {\n        return func.some((item) => isAsyncFunction(item));\n    }\n    return func?.constructor?.name === 'AsyncFunction';\n}\nconst withIntersection = 'intersection' in new Set();\nfunction setIntersection(...sets) {\n    // Fast path 1\n    if (sets.length === 0) {\n        return new Set();\n    }\n    // Fast path 2\n    if (sets.length === 1) {\n        return sets[0];\n    }\n    // Fast path 3\n    if (sets.length === 2) {\n        const set1 = sets[0];\n        const set2 = sets[1];\n        if (withIntersection) {\n            return set1.intersection(set2);\n        }\n        const result = new Set();\n        const base = set1.size < set2.size ? set1 : set2;\n        const other = base === set1 ? set2 : set1;\n        for (const value of base) {\n            if (other.has(value)) {\n                result.add(value);\n            }\n        }\n        return result;\n    }\n    // Slow path\n    // Find the smallest set\n    const min = {\n        index: 0,\n        size: sets[0].size\n    };\n    for (let i = 1; i < sets.length; i++) {\n        if (sets[i].size < min.size) {\n            min.index = i;\n            min.size = sets[i].size;\n        }\n    }\n    if (withIntersection) {\n        let base = sets[min.index];\n        for (let i = 0; i < sets.length; i++) {\n            if (i === min.index) {\n                continue;\n            }\n            base = base.intersection(sets[i]);\n        }\n        return base;\n    }\n    // manual implementation:\n    // intersect all sets with the smallest set\n    const base = sets[min.index];\n    for (let i = 0; i < sets.length; i++) {\n        if (i === min.index) {\n            continue;\n        }\n        const other = sets[i];\n        for (const value of base) {\n            if (!other.has(value)) {\n                base.delete(value);\n            }\n        }\n    }\n    return base;\n}\nconst withUnion = 'union' in new Set();\nfunction setUnion(set1, set2) {\n    if (withUnion) {\n        if (set1) {\n            return set1.union(set2);\n        }\n        return set2;\n    }\n    if (!set1) {\n        return new Set(set2);\n    }\n    return new Set([...set1, ...set2]);\n}\nfunction setDifference(set1, set2) {\n    const result = new Set();\n    for (const value of set1) {\n        if (!set2.has(value)) {\n            result.add(value);\n        }\n    }\n    return result;\n}\n// This code is taken from https://github.com/davidmarkclements/atomic-sleep, MIT licensed at the time of commit b8149d3ca276c84a54fa8fa1478f9cc79aabc15a.\n// All credits go to the original author (David Mark Clements, https://github.com/davidmarkclements).\nfunction sleep(ms) {\n    if (typeof SharedArrayBuffer !== 'undefined' && typeof Atomics !== 'undefined') {\n        const nil = new Int32Array(new SharedArrayBuffer(4));\n        const valid = ms > 0 && ms < Infinity;\n        if (valid === false) {\n            if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n                throw TypeError('sleep: ms must be a number');\n            }\n            throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity');\n        }\n        Atomics.wait(nil, 0, 0, Number(ms));\n    }\n    else {\n        const valid = ms > 0 && ms < Infinity;\n        if (valid === false) {\n            if (typeof ms !== 'number' && typeof ms !== 'bigint') {\n                throw TypeError('sleep: ms must be a number');\n            }\n            throw RangeError('sleep: ms must be a number that is greater than 0 but less than Infinity');\n        }\n        const target = Date.now() + Number(ms);\n        while (target > Date.now()) {\n            /* empty */\n        }\n    }\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@orama/orama/dist/browser/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-CNWEGOUF.js":
/*!***********************************************************!*\
  !*** ./node_modules/fumadocs-core/dist/chunk-CNWEGOUF.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createContentHighlighter: () => (/* binding */ createContentHighlighter)\n/* harmony export */ });\n// src/search/shared.ts\nfunction escapeRegExp(input) {\n  return input.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\nfunction buildRegexFromQuery(q) {\n  const trimmed = q.trim();\n  if (trimmed.length === 0) return null;\n  const terms = Array.from(\n    new Set(\n      trimmed.split(/\\s+/).map((t) => t.trim()).filter(Boolean)\n    )\n  );\n  if (terms.length === 0) return null;\n  const escaped = terms.map(escapeRegExp).join(\"|\");\n  return new RegExp(`(${escaped})`, \"gi\");\n}\nfunction createContentHighlighter(query) {\n  const regex = typeof query === \"string\" ? buildRegexFromQuery(query) : query;\n  return {\n    highlight(content) {\n      if (!regex) return [{ type: \"text\", content }];\n      const out = [];\n      let i = 0;\n      for (const match of content.matchAll(regex)) {\n        if (i < match.index) {\n          out.push({\n            type: \"text\",\n            content: content.substring(i, match.index)\n          });\n        }\n        out.push({\n          type: \"text\",\n          content: match[0],\n          styles: {\n            highlight: true\n          }\n        });\n        i = match.index + match[0].length;\n      }\n      if (i < content.length) {\n        out.push({\n          type: \"text\",\n          content: content.substring(i)\n        });\n      }\n      return out;\n    }\n  };\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mdW1hZG9jcy1jb3JlL2Rpc3QvY2h1bmstQ05XRUdPVUYuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsdUJBQXVCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUlFIiwic291cmNlcyI6WyIvVXNlcnMvZG91Z2xhbmNlL0RldmVsb3Blci9vYy9hcmJpdHJ1bS1kb2NzL25vZGVfbW9kdWxlcy9mdW1hZG9jcy1jb3JlL2Rpc3QvY2h1bmstQ05XRUdPVUYuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL3NlYXJjaC9zaGFyZWQudHNcbmZ1bmN0aW9uIGVzY2FwZVJlZ0V4cChpbnB1dCkge1xuICByZXR1cm4gaW5wdXQucmVwbGFjZSgvWy4qKz9eJHt9KCl8W1xcXVxcXFxdL2csIFwiXFxcXCQmXCIpO1xufVxuZnVuY3Rpb24gYnVpbGRSZWdleEZyb21RdWVyeShxKSB7XG4gIGNvbnN0IHRyaW1tZWQgPSBxLnRyaW0oKTtcbiAgaWYgKHRyaW1tZWQubGVuZ3RoID09PSAwKSByZXR1cm4gbnVsbDtcbiAgY29uc3QgdGVybXMgPSBBcnJheS5mcm9tKFxuICAgIG5ldyBTZXQoXG4gICAgICB0cmltbWVkLnNwbGl0KC9cXHMrLykubWFwKCh0KSA9PiB0LnRyaW0oKSkuZmlsdGVyKEJvb2xlYW4pXG4gICAgKVxuICApO1xuICBpZiAodGVybXMubGVuZ3RoID09PSAwKSByZXR1cm4gbnVsbDtcbiAgY29uc3QgZXNjYXBlZCA9IHRlcm1zLm1hcChlc2NhcGVSZWdFeHApLmpvaW4oXCJ8XCIpO1xuICByZXR1cm4gbmV3IFJlZ0V4cChgKCR7ZXNjYXBlZH0pYCwgXCJnaVwiKTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUNvbnRlbnRIaWdobGlnaHRlcihxdWVyeSkge1xuICBjb25zdCByZWdleCA9IHR5cGVvZiBxdWVyeSA9PT0gXCJzdHJpbmdcIiA/IGJ1aWxkUmVnZXhGcm9tUXVlcnkocXVlcnkpIDogcXVlcnk7XG4gIHJldHVybiB7XG4gICAgaGlnaGxpZ2h0KGNvbnRlbnQpIHtcbiAgICAgIGlmICghcmVnZXgpIHJldHVybiBbeyB0eXBlOiBcInRleHRcIiwgY29udGVudCB9XTtcbiAgICAgIGNvbnN0IG91dCA9IFtdO1xuICAgICAgbGV0IGkgPSAwO1xuICAgICAgZm9yIChjb25zdCBtYXRjaCBvZiBjb250ZW50Lm1hdGNoQWxsKHJlZ2V4KSkge1xuICAgICAgICBpZiAoaSA8IG1hdGNoLmluZGV4KSB7XG4gICAgICAgICAgb3V0LnB1c2goe1xuICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICBjb250ZW50OiBjb250ZW50LnN1YnN0cmluZyhpLCBtYXRjaC5pbmRleClcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBvdXQucHVzaCh7XG4gICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgY29udGVudDogbWF0Y2hbMF0sXG4gICAgICAgICAgc3R5bGVzOiB7XG4gICAgICAgICAgICBoaWdobGlnaHQ6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBpID0gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGg7XG4gICAgICB9XG4gICAgICBpZiAoaSA8IGNvbnRlbnQubGVuZ3RoKSB7XG4gICAgICAgIG91dC5wdXNoKHtcbiAgICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgICBjb250ZW50OiBjb250ZW50LnN1YnN0cmluZyhpKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBvdXQ7XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQge1xuICBjcmVhdGVDb250ZW50SGlnaGxpZ2h0ZXJcbn07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-CNWEGOUF.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-KAOEMCTI.js":
/*!***********************************************************!*\
  !*** ./node_modules/fumadocs-core/dist/chunk-KAOEMCTI.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeUndefined: () => (/* binding */ removeUndefined)\n/* harmony export */ });\n// src/utils/remove-undefined.ts\nfunction removeUndefined(value, deep = false) {\n  const obj = value;\n  for (const key of Object.keys(obj)) {\n    if (obj[key] === void 0) delete obj[key];\n    if (deep && typeof obj[key] === \"object\" && obj[key] !== null) {\n      removeUndefined(obj[key], deep);\n    } else if (deep && Array.isArray(obj[key])) {\n      obj[key].forEach((v) => removeUndefined(v, deep));\n    }\n  }\n  return value;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mdW1hZG9jcy1jb3JlL2Rpc3QvY2h1bmstS0FPRU1DVEkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBSUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL2Z1bWFkb2NzLWNvcmUvZGlzdC9jaHVuay1LQU9FTUNUSS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzcmMvdXRpbHMvcmVtb3ZlLXVuZGVmaW5lZC50c1xuZnVuY3Rpb24gcmVtb3ZlVW5kZWZpbmVkKHZhbHVlLCBkZWVwID0gZmFsc2UpIHtcbiAgY29uc3Qgb2JqID0gdmFsdWU7XG4gIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKG9iaikpIHtcbiAgICBpZiAob2JqW2tleV0gPT09IHZvaWQgMCkgZGVsZXRlIG9ialtrZXldO1xuICAgIGlmIChkZWVwICYmIHR5cGVvZiBvYmpba2V5XSA9PT0gXCJvYmplY3RcIiAmJiBvYmpba2V5XSAhPT0gbnVsbCkge1xuICAgICAgcmVtb3ZlVW5kZWZpbmVkKG9ialtrZXldLCBkZWVwKTtcbiAgICB9IGVsc2UgaWYgKGRlZXAgJiYgQXJyYXkuaXNBcnJheShvYmpba2V5XSkpIHtcbiAgICAgIG9ialtrZXldLmZvckVhY2goKHYpID0+IHJlbW92ZVVuZGVmaW5lZCh2LCBkZWVwKSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuZXhwb3J0IHtcbiAgcmVtb3ZlVW5kZWZpbmVkXG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-KAOEMCTI.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-KIJ7AMBP.js":
/*!***********************************************************!*\
  !*** ./node_modules/fumadocs-core/dist/chunk-KIJ7AMBP.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   searchAdvanced: () => (/* binding */ searchAdvanced),\n/* harmony export */   searchSimple: () => (/* binding */ searchSimple)\n/* harmony export */ });\n/* harmony import */ var _chunk_KAOEMCTI_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-KAOEMCTI.js */ \"(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-KAOEMCTI.js\");\n/* harmony import */ var _chunk_CNWEGOUF_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-CNWEGOUF.js */ \"(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-CNWEGOUF.js\");\n/* harmony import */ var _orama_orama__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @orama/orama */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/index.js\");\n\n\n\n// src/search/orama/search/simple.ts\n\nasync function searchSimple(db, query, params = {}) {\n  const highlighter = (0,_chunk_CNWEGOUF_js__WEBPACK_IMPORTED_MODULE_1__.createContentHighlighter)(query);\n  const result = await (0,_orama_orama__WEBPACK_IMPORTED_MODULE_2__.search)(db, {\n    term: query,\n    tolerance: 1,\n    ...params,\n    boost: {\n      title: 2,\n      ...\"boost\" in params ? params.boost : void 0\n    }\n  });\n  return result.hits.map((hit) => ({\n    type: \"page\",\n    content: hit.document.title,\n    contentWithHighlights: highlighter.highlight(hit.document.title),\n    id: hit.document.url,\n    url: hit.document.url\n  }));\n}\n\n// src/search/orama/search/advanced.ts\n\nasync function searchAdvanced(db, query, tag = [], extraParams = {}) {\n  if (typeof tag === \"string\") tag = [tag];\n  let params = {\n    ...extraParams,\n    where: (0,_chunk_KAOEMCTI_js__WEBPACK_IMPORTED_MODULE_0__.removeUndefined)({\n      tags: tag.length > 0 ? {\n        containsAll: tag\n      } : void 0,\n      ...extraParams.where\n    }),\n    groupBy: {\n      properties: [\"page_id\"],\n      maxResult: 8,\n      ...extraParams.groupBy\n    }\n  };\n  if (query.length > 0) {\n    params = {\n      ...params,\n      term: query,\n      properties: [\"content\"]\n    };\n  }\n  const highlighter = (0,_chunk_CNWEGOUF_js__WEBPACK_IMPORTED_MODULE_1__.createContentHighlighter)(query);\n  const result = await (0,_orama_orama__WEBPACK_IMPORTED_MODULE_2__.search)(db, params);\n  const list = [];\n  for (const item of result.groups ?? []) {\n    const pageId = item.values[0];\n    const page = (0,_orama_orama__WEBPACK_IMPORTED_MODULE_2__.getByID)(db, pageId);\n    if (!page) continue;\n    list.push({\n      id: pageId,\n      type: \"page\",\n      content: page.content,\n      contentWithHighlights: highlighter.highlight(page.content),\n      url: page.url\n    });\n    for (const hit of item.result) {\n      if (hit.document.type === \"page\") continue;\n      list.push({\n        id: hit.document.id.toString(),\n        content: hit.document.content,\n        contentWithHighlights: highlighter.highlight(hit.document.content),\n        type: hit.document.type,\n        url: hit.document.url\n      });\n    }\n  }\n  return list;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mdW1hZG9jcy1jb3JlL2Rpc3QvY2h1bmstS0lKN0FNQlAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFFNkI7QUFHQTs7QUFFN0I7QUFDc0M7QUFDdEMsa0RBQWtEO0FBQ2xELHNCQUFzQiw0RUFBd0I7QUFDOUMsdUJBQXVCLG9EQUFNO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUMwRDtBQUMxRCxtRUFBbUU7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsV0FBVyxtRUFBZTtBQUMxQjtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDRFQUF3QjtBQUM5Qyx1QkFBdUIsb0RBQU87QUFDOUI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFEQUFPO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBS0UiLCJzb3VyY2VzIjpbIi9Vc2Vycy9kb3VnbGFuY2UvRGV2ZWxvcGVyL29jL2FyYml0cnVtLWRvY3Mvbm9kZV9tb2R1bGVzL2Z1bWFkb2NzLWNvcmUvZGlzdC9jaHVuay1LSUo3QU1CUC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICByZW1vdmVVbmRlZmluZWRcbn0gZnJvbSBcIi4vY2h1bmstS0FPRU1DVEkuanNcIjtcbmltcG9ydCB7XG4gIGNyZWF0ZUNvbnRlbnRIaWdobGlnaHRlclxufSBmcm9tIFwiLi9jaHVuay1DTldFR09VRi5qc1wiO1xuXG4vLyBzcmMvc2VhcmNoL29yYW1hL3NlYXJjaC9zaW1wbGUudHNcbmltcG9ydCB7IHNlYXJjaCB9IGZyb20gXCJAb3JhbWEvb3JhbWFcIjtcbmFzeW5jIGZ1bmN0aW9uIHNlYXJjaFNpbXBsZShkYiwgcXVlcnksIHBhcmFtcyA9IHt9KSB7XG4gIGNvbnN0IGhpZ2hsaWdodGVyID0gY3JlYXRlQ29udGVudEhpZ2hsaWdodGVyKHF1ZXJ5KTtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgc2VhcmNoKGRiLCB7XG4gICAgdGVybTogcXVlcnksXG4gICAgdG9sZXJhbmNlOiAxLFxuICAgIC4uLnBhcmFtcyxcbiAgICBib29zdDoge1xuICAgICAgdGl0bGU6IDIsXG4gICAgICAuLi5cImJvb3N0XCIgaW4gcGFyYW1zID8gcGFyYW1zLmJvb3N0IDogdm9pZCAwXG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHJlc3VsdC5oaXRzLm1hcCgoaGl0KSA9PiAoe1xuICAgIHR5cGU6IFwicGFnZVwiLFxuICAgIGNvbnRlbnQ6IGhpdC5kb2N1bWVudC50aXRsZSxcbiAgICBjb250ZW50V2l0aEhpZ2hsaWdodHM6IGhpZ2hsaWdodGVyLmhpZ2hsaWdodChoaXQuZG9jdW1lbnQudGl0bGUpLFxuICAgIGlkOiBoaXQuZG9jdW1lbnQudXJsLFxuICAgIHVybDogaGl0LmRvY3VtZW50LnVybFxuICB9KSk7XG59XG5cbi8vIHNyYy9zZWFyY2gvb3JhbWEvc2VhcmNoL2FkdmFuY2VkLnRzXG5pbXBvcnQgeyBnZXRCeUlELCBzZWFyY2ggYXMgc2VhcmNoMiB9IGZyb20gXCJAb3JhbWEvb3JhbWFcIjtcbmFzeW5jIGZ1bmN0aW9uIHNlYXJjaEFkdmFuY2VkKGRiLCBxdWVyeSwgdGFnID0gW10sIGV4dHJhUGFyYW1zID0ge30pIHtcbiAgaWYgKHR5cGVvZiB0YWcgPT09IFwic3RyaW5nXCIpIHRhZyA9IFt0YWddO1xuICBsZXQgcGFyYW1zID0ge1xuICAgIC4uLmV4dHJhUGFyYW1zLFxuICAgIHdoZXJlOiByZW1vdmVVbmRlZmluZWQoe1xuICAgICAgdGFnczogdGFnLmxlbmd0aCA+IDAgPyB7XG4gICAgICAgIGNvbnRhaW5zQWxsOiB0YWdcbiAgICAgIH0gOiB2b2lkIDAsXG4gICAgICAuLi5leHRyYVBhcmFtcy53aGVyZVxuICAgIH0pLFxuICAgIGdyb3VwQnk6IHtcbiAgICAgIHByb3BlcnRpZXM6IFtcInBhZ2VfaWRcIl0sXG4gICAgICBtYXhSZXN1bHQ6IDgsXG4gICAgICAuLi5leHRyYVBhcmFtcy5ncm91cEJ5XG4gICAgfVxuICB9O1xuICBpZiAocXVlcnkubGVuZ3RoID4gMCkge1xuICAgIHBhcmFtcyA9IHtcbiAgICAgIC4uLnBhcmFtcyxcbiAgICAgIHRlcm06IHF1ZXJ5LFxuICAgICAgcHJvcGVydGllczogW1wiY29udGVudFwiXVxuICAgIH07XG4gIH1cbiAgY29uc3QgaGlnaGxpZ2h0ZXIgPSBjcmVhdGVDb250ZW50SGlnaGxpZ2h0ZXIocXVlcnkpO1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBzZWFyY2gyKGRiLCBwYXJhbXMpO1xuICBjb25zdCBsaXN0ID0gW107XG4gIGZvciAoY29uc3QgaXRlbSBvZiByZXN1bHQuZ3JvdXBzID8/IFtdKSB7XG4gICAgY29uc3QgcGFnZUlkID0gaXRlbS52YWx1ZXNbMF07XG4gICAgY29uc3QgcGFnZSA9IGdldEJ5SUQoZGIsIHBhZ2VJZCk7XG4gICAgaWYgKCFwYWdlKSBjb250aW51ZTtcbiAgICBsaXN0LnB1c2goe1xuICAgICAgaWQ6IHBhZ2VJZCxcbiAgICAgIHR5cGU6IFwicGFnZVwiLFxuICAgICAgY29udGVudDogcGFnZS5jb250ZW50LFxuICAgICAgY29udGVudFdpdGhIaWdobGlnaHRzOiBoaWdobGlnaHRlci5oaWdobGlnaHQocGFnZS5jb250ZW50KSxcbiAgICAgIHVybDogcGFnZS51cmxcbiAgICB9KTtcbiAgICBmb3IgKGNvbnN0IGhpdCBvZiBpdGVtLnJlc3VsdCkge1xuICAgICAgaWYgKGhpdC5kb2N1bWVudC50eXBlID09PSBcInBhZ2VcIikgY29udGludWU7XG4gICAgICBsaXN0LnB1c2goe1xuICAgICAgICBpZDogaGl0LmRvY3VtZW50LmlkLnRvU3RyaW5nKCksXG4gICAgICAgIGNvbnRlbnQ6IGhpdC5kb2N1bWVudC5jb250ZW50LFxuICAgICAgICBjb250ZW50V2l0aEhpZ2hsaWdodHM6IGhpZ2hsaWdodGVyLmhpZ2hsaWdodChoaXQuZG9jdW1lbnQuY29udGVudCksXG4gICAgICAgIHR5cGU6IGhpdC5kb2N1bWVudC50eXBlLFxuICAgICAgICB1cmw6IGhpdC5kb2N1bWVudC51cmxcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbGlzdDtcbn1cblxuZXhwb3J0IHtcbiAgc2VhcmNoU2ltcGxlLFxuICBzZWFyY2hBZHZhbmNlZFxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-KIJ7AMBP.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/fumadocs-core/dist/static-IWYDJ3C5.js":
/*!************************************************************!*\
  !*** ./node_modules/fumadocs-core/dist/static-IWYDJ3C5.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   search: () => (/* binding */ search)\n/* harmony export */ });\n/* harmony import */ var _chunk_KIJ7AMBP_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-KIJ7AMBP.js */ \"(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-KIJ7AMBP.js\");\n/* harmony import */ var _chunk_KAOEMCTI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-KAOEMCTI.js */ \"(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-KAOEMCTI.js\");\n/* harmony import */ var _chunk_CNWEGOUF_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-CNWEGOUF.js */ \"(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-CNWEGOUF.js\");\n/* harmony import */ var _chunk_JSBRDJBE_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chunk-JSBRDJBE.js */ \"(app-pages-browser)/./node_modules/fumadocs-core/dist/chunk-JSBRDJBE.js\");\n/* harmony import */ var _orama_orama__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @orama/orama */ \"(app-pages-browser)/./node_modules/@orama/orama/dist/browser/index.js\");\n\n\n\n\n\n// src/search/client/static.ts\n\nvar cache = /* @__PURE__ */ new Map();\nasync function loadDB({\n  from = \"/api/search\",\n  initOrama = (locale) => (0,_orama_orama__WEBPACK_IMPORTED_MODULE_4__.create)({ schema: { _: \"string\" }, language: locale })\n}) {\n  const cacheKey = from;\n  const cached = cache.get(cacheKey);\n  if (cached) return cached;\n  async function init() {\n    const res = await fetch(from);\n    if (!res.ok)\n      throw new Error(\n        `failed to fetch exported search indexes from ${from}, make sure the search database is exported and available for client.`\n      );\n    const data = await res.json();\n    const dbs = /* @__PURE__ */ new Map();\n    if (data.type === \"i18n\") {\n      await Promise.all(\n        Object.entries(data.data).map(async ([k, v]) => {\n          const db2 = await initOrama(k);\n          (0,_orama_orama__WEBPACK_IMPORTED_MODULE_4__.load)(db2, v);\n          dbs.set(k, {\n            type: v.type,\n            db: db2\n          });\n        })\n      );\n      return dbs;\n    }\n    const db = await initOrama();\n    (0,_orama_orama__WEBPACK_IMPORTED_MODULE_4__.load)(db, data);\n    dbs.set(\"\", {\n      type: data.type,\n      db\n    });\n    return dbs;\n  }\n  const result = init();\n  cache.set(cacheKey, result);\n  return result;\n}\nasync function search(query, options) {\n  const { tag, locale } = options;\n  const db = (await loadDB(options)).get(locale ?? \"\");\n  if (!db) return [];\n  if (db.type === \"simple\")\n    return (0,_chunk_KIJ7AMBP_js__WEBPACK_IMPORTED_MODULE_0__.searchSimple)(db, query);\n  return (0,_chunk_KIJ7AMBP_js__WEBPACK_IMPORTED_MODULE_0__.searchAdvanced)(db.db, query, tag);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9mdW1hZG9jcy1jb3JlL2Rpc3Qvc3RhdGljLUlXWURKM0M1LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUc2QjtBQUNBO0FBQ0E7QUFDQTs7QUFFN0I7QUFDNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLG9EQUFNLEdBQUcsVUFBVSxhQUFhLG9CQUFvQjtBQUM5RSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsS0FBSztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsa0RBQUk7QUFDZDtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxrREFBSTtBQUNSO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsY0FBYztBQUN4QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdFQUFZO0FBQ3ZCLFNBQVMsa0VBQWM7QUFDdkI7QUFHRSIsInNvdXJjZXMiOlsiL1VzZXJzL2RvdWdsYW5jZS9EZXZlbG9wZXIvb2MvYXJiaXRydW0tZG9jcy9ub2RlX21vZHVsZXMvZnVtYWRvY3MtY29yZS9kaXN0L3N0YXRpYy1JV1lESjNDNS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBzZWFyY2hBZHZhbmNlZCxcbiAgc2VhcmNoU2ltcGxlXG59IGZyb20gXCIuL2NodW5rLUtJSjdBTUJQLmpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUtBT0VNQ1RJLmpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUNOV0VHT1VGLmpzXCI7XG5pbXBvcnQgXCIuL2NodW5rLUpTQlJESkJFLmpzXCI7XG5cbi8vIHNyYy9zZWFyY2gvY2xpZW50L3N0YXRpYy50c1xuaW1wb3J0IHsgY3JlYXRlLCBsb2FkIH0gZnJvbSBcIkBvcmFtYS9vcmFtYVwiO1xudmFyIGNhY2hlID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbmFzeW5jIGZ1bmN0aW9uIGxvYWREQih7XG4gIGZyb20gPSBcIi9hcGkvc2VhcmNoXCIsXG4gIGluaXRPcmFtYSA9IChsb2NhbGUpID0+IGNyZWF0ZSh7IHNjaGVtYTogeyBfOiBcInN0cmluZ1wiIH0sIGxhbmd1YWdlOiBsb2NhbGUgfSlcbn0pIHtcbiAgY29uc3QgY2FjaGVLZXkgPSBmcm9tO1xuICBjb25zdCBjYWNoZWQgPSBjYWNoZS5nZXQoY2FjaGVLZXkpO1xuICBpZiAoY2FjaGVkKSByZXR1cm4gY2FjaGVkO1xuICBhc3luYyBmdW5jdGlvbiBpbml0KCkge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGZyb20pO1xuICAgIGlmICghcmVzLm9rKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBgZmFpbGVkIHRvIGZldGNoIGV4cG9ydGVkIHNlYXJjaCBpbmRleGVzIGZyb20gJHtmcm9tfSwgbWFrZSBzdXJlIHRoZSBzZWFyY2ggZGF0YWJhc2UgaXMgZXhwb3J0ZWQgYW5kIGF2YWlsYWJsZSBmb3IgY2xpZW50LmBcbiAgICAgICk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgY29uc3QgZGJzID0gLyogQF9fUFVSRV9fICovIG5ldyBNYXAoKTtcbiAgICBpZiAoZGF0YS50eXBlID09PSBcImkxOG5cIikge1xuICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICAgIE9iamVjdC5lbnRyaWVzKGRhdGEuZGF0YSkubWFwKGFzeW5jIChbaywgdl0pID0+IHtcbiAgICAgICAgICBjb25zdCBkYjIgPSBhd2FpdCBpbml0T3JhbWEoayk7XG4gICAgICAgICAgbG9hZChkYjIsIHYpO1xuICAgICAgICAgIGRicy5zZXQoaywge1xuICAgICAgICAgICAgdHlwZTogdi50eXBlLFxuICAgICAgICAgICAgZGI6IGRiMlxuICAgICAgICAgIH0pO1xuICAgICAgICB9KVxuICAgICAgKTtcbiAgICAgIHJldHVybiBkYnM7XG4gICAgfVxuICAgIGNvbnN0IGRiID0gYXdhaXQgaW5pdE9yYW1hKCk7XG4gICAgbG9hZChkYiwgZGF0YSk7XG4gICAgZGJzLnNldChcIlwiLCB7XG4gICAgICB0eXBlOiBkYXRhLnR5cGUsXG4gICAgICBkYlxuICAgIH0pO1xuICAgIHJldHVybiBkYnM7XG4gIH1cbiAgY29uc3QgcmVzdWx0ID0gaW5pdCgpO1xuICBjYWNoZS5zZXQoY2FjaGVLZXksIHJlc3VsdCk7XG4gIHJldHVybiByZXN1bHQ7XG59XG5hc3luYyBmdW5jdGlvbiBzZWFyY2gocXVlcnksIG9wdGlvbnMpIHtcbiAgY29uc3QgeyB0YWcsIGxvY2FsZSB9ID0gb3B0aW9ucztcbiAgY29uc3QgZGIgPSAoYXdhaXQgbG9hZERCKG9wdGlvbnMpKS5nZXQobG9jYWxlID8/IFwiXCIpO1xuICBpZiAoIWRiKSByZXR1cm4gW107XG4gIGlmIChkYi50eXBlID09PSBcInNpbXBsZVwiKVxuICAgIHJldHVybiBzZWFyY2hTaW1wbGUoZGIsIHF1ZXJ5KTtcbiAgcmV0dXJuIHNlYXJjaEFkdmFuY2VkKGRiLmRiLCBxdWVyeSwgdGFnKTtcbn1cbmV4cG9ydCB7XG4gIHNlYXJjaFxufTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/fumadocs-core/dist/static-IWYDJ3C5.js\n"));

/***/ })

}]);